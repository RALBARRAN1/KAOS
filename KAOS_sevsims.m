clc
clear all
close all

tic

% IMPORT SEVERAL SIMS

eVfac= (6.242e18); % J to eV conversion factor
RE= 638e4; % Earth radius [m]
kB= 138e-25; % Boltzmann constant [m^2 kg s^-2 K^-1]
mEarth= 8.06e15; % Earth magnetic moment [T m^3]
mion= (16e0)*(1.67e-27); % O+ ion mass [kg]
qion= 1.602e-19; % Charge [C]
NqICA= 1;

NCflag= 0;
Wflag= 0;
Bflag= 0;
Vlambdaflag= 0;
VPCflag= 1;
VWflag= 0;
Zflag= 0;

Run= 6;

if VWflag == 1 
    NqICB= 25; % 19 for VV0F and Z, 25 for W0 and W0F, 30 for LA1 and LA2
end
if VWflag == 1 & Run == 1
    NNtT= 154; % 229 for VV0F and Z, 153 for W0 and W0_t and W0F, 185 for LA1, 203 for LA2
    NtT= 2e4; % 1e4 for VV0F_t and W0_t
end
if VWflag == 1 & Run == 2
    NNtT= 155; % 229 for VV0F and Z, 153 for W0 and W0_t and W0F, 185 for LA1, 203 for LA2
    NtT= 1e4; % 1e4 for VV0F_t and W0_t
end
if VWflag == 1 & Run == 3
    NNtT= 155; % 229 for VV0F and Z, 153 for W0 and W0_t and W0F, 185 for LA1, 203 for LA2
    NtT= 0.8e4; % 1e4 for VV0F_t and W0_t
end
if Zflag == 1 
    NqICB= 25; % 19 for VV0F and Z, 25 for W0 and W0F, 30 for LA1 and LA2
end

if VPCflag == 1
    NqICB= 19; % 19 for VV0F and Z, 25 for W0 and W0F, 30 for LA1 and LA2
end
if VPCflag == 1 & (Run == 1 | Run == 4 | Run == 7 | Run == 10 | Run == 13 | Run == 16)
    NNtT= 229; % 229 for VV0F and Z, 153 for W0 and W0_t and W0F, 185 for LA1, 203 for LA2
    NtT= 0.6e4; % 1e4 for VV0F_t and W0_t
end
if VPCflag == 1 & (Run == 2 | Run == 5 | Run == 8 | Run == 11 | Run == 14 | Run == 17)
    NNtT= 234; % 229 for VV0F and Z, 153 for W0 and W0_t and W0F, 185 for LA1, 203 for LA2
    NtT= 0.4e4; % 1e4 for VV0F_t and W0_t
end
if VPCflag == 1 & (Run == 3 | Run == 6 | Run == 9 | Run == 12 | Run == 15 | Run == 18)
    NNtT= 249; % 229 for VV0F and Z, 153 for W0 and W0_t and W0F, 185 for LA1, 203 for LA2
    NtT= 0.2e4; % 1e4 for VV0F_t and W0_t
end

ranksize= 2;
root= 1; r= 1; Stot= 1; s= 1; Rank(1).Specie(1).Nf= 1; f= 1;
DensityOutputflag= 0;
ICRflag= 0;
MomentFilterFlag= 1;
QExchangeFlag= 0;
MAfilterPt= 11e0;

InterpFlag= 1;
SCflag= 1;
Q0datfac= NtT/(NNtT);
ZeroNaNflag= 1;
NqLB= NqICA; NqUB= NqICB;

IONVPERPVECflag= 1;
if IONVPERPVECflag == 1
    if ICRflag == 0
        NVperp1G= 28;
        NVperp2G= 28;
        NVparG= 28;
    end
    if ICRflag == 1
        NVperp1G= 28;
        NVperp2G= 28;
        NVparG= 28;
    end
else
    NVperpG= 9;
    NVparG= 19;
end

if QExchangeFlag == 1;
    NVpG= 30;
    NVqG= 20;
    NVphiG= 30;
end

if VWflag == 1 & Run == 1
    simnum= 'W0FicrVepar1scINPUTa2'; % Assign simulation number
end
if VWflag == 1 & Run == 2
    simnum= 'W0FicrVepar1scINPUTa0'; % Assign simulation number
end
if VWflag == 1 & Run == 3
    simnum= 'W0FicrVepar1scINPUTa1'; % Assign simulation number
end

if VPCflag == 1 & Run == 1
    simnum= 'VV0FticrV0epar13scINPUTa0'; % Assign simulation number
end
if VPCflag == 1 & Run == 2
    simnum= 'VV0FticrV0epar13scINPUTa2'; % Assign simulation number
end
if VPCflag == 1 & Run == 3
    simnum= 'VV0FticrV0epar13scINPUTa4'; % Assign simulation number
end
if VPCflag == 1 & Run == 4
    simnum= 'VV0FticrV0epar6scINPUTa0'; % Assign simulation number 
end
if VPCflag == 1 & Run == 5
    simnum= 'VV0FticrV0epar6scINPUTa2'; % Assign simulation number
end
if VPCflag == 1 & Run == 6 % With localized Epar: VV0FticrV0epar6scINPUTa4p
    simnum= 'VV0FticrV0epar6scINPUTa4p'; % Assign simulation number 
end
if VPCflag == 1 & Run == 7
    simnum= 'VV0FticrV0epar7scINPUTa0'; % Assign simulation number
end
if VPCflag == 1 & Run == 8
    simnum= 'VV0FticrV0epar7scINPUTa2'; % Assign simulation number
end
if VPCflag == 1 & Run == 9
    simnum= 'VV0FticrV0epar7scINPUTa4'; % Assign simulation number
end
if VPCflag == 1 & Run == 10
    simnum= 'VV0FticrV0epar11scINPUTa0'; % Assign simulation number
end
if VPCflag == 1 & Run == 11
    simnum= 'VV0FticrV0epar11scINPUTa2'; % Assign simulation number
end
if VPCflag == 1 & Run == 12
    simnum= 'VV0FticrV0epar11scINPUTa4'; % Assign simulation number
end
if VPCflag == 1 & Run == 13
    simnum= 'VV0FticrV0epar10scINPUTa0'; % Assign simulation number
end
if VPCflag == 1 & Run == 14
    simnum= 'VV0FticrV0epar10scINPUTa2'; % Assign simulation number
end
if VPCflag == 1 & Run == 15
    simnum= 'VV0FticrV0epar10scINPUTa4'; % Assign simulation number
end
if VPCflag == 1 & Run == 16
    simnum= 'VV0FticrV0epar12scINPUTa0'; % Assign simulation number
end
if VPCflag == 1 & Run == 17
    simnum= 'VV0FticrV0epar12scINPUTa2'; % Assign simulation number
end
if VPCflag == 1 & Run == 18
    simnum= 'VV0FticrV0epar12scINPUTa4'; % Assign simulation number
end

if VPCflag == 1
    datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridVV0Ft/';
end

if VWflag == 1
    datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridW0F/';
end
% simnum= 'VV0FicrV05epar4scINPUTa0'; % Assign simulation number
% datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridVV0F/';

% simnum= 'VV0FicrZ1tscINPUTa0'; % Assign simulation number
% datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridVV0F/';

% simnum= 'LA1ncscT2INPUTa0'; % Assign simulation number
% datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridLA1/';

% simnum= 'W0icr00tscINPUTa1'; % Assign simulation number
% datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridW0/';

% simnum= 'W0FicrB2scINPUTa0'; % Assign simulation number
% datadirgrid= '/Users/robertalbarran/Desktop/FULLDESKTOP/KMIOGridW0F/';

datadir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/VPCFinalSims/', simnum, '/KMIOData', simnum, '/');
dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/FFSIMS/', simnum, '/');

clear EAMagRTr M0phRTr M1ParphRTr M1Perp1phRTr M1Perp2phRTr M2ParphRTr M2Perp1phRTr ...
    M2Perp2phRTr M2phRTr ParTemp Perp1Temp Perp2Temp Temp M0FiltAvrgRTr ...
    M1ParFiltAvrgRTr M1Perp1FiltAvrg M1Perp2FiltAvrg M2ParFiltAvrg M2Perp1FiltAvrg ...
    M2Perp2FiltAvrg M2FiltAvrg ParTempFiltAvrg Perp1TempFiltAvrg Perp2TempFiltAvrg ...
    TempFiltAvrg NsnRRT rrAB ndAB Nbeg Nend TimeT FLogVperp1VparRed FLogVperp2VparRed ...
    FLogVperp1Vperp2Red FLogVperp1VparRedInterp FLogVperp2VparRedInterp ...
    FLogVperp1Vperp2RedInterp FEEnergyAlphaRed FEnergyEnergyAlphaRed DNFEnergyAlphaRed ...
    DEFEnergyAlphaRed;

% Import grid and moments
for zflat= 1:1:1
    
    clear nd TimeT Perp1Temp Perp2Temp PerpTemp Perp1Flux Perp2Flux PerpFlux ParTemp Temp ParFlux
    
    qGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'qGCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).qGC= fread(qGCID, NqUB, 'real*8');
    fclose(qGCID);
    pGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'pGCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).pGC= fread(pGCID, NqUB, 'real*8');
    fclose(pGCID);
    hqCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'hqCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).hqC= fread(hqCID, NqUB, 'real*8');
    fclose(hqCID);
    dqCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'dqCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).dqC= fread(dqCID, NqUB, 'real*8');
    fclose(dqCID);
    qGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'qGLmat.bin'));
    Rank(r).Specie(s).FluxTube(f).qGL= fread(qGLID, NqUB, 'real*8');
    fclose(qGLID);
    qGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'qGHmat.bin'));
    Rank(r).Specie(s).FluxTube(f).qGH= fread(qGHID, NqUB, 'real*8');
    fclose(qGHID);
    d3xCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'd3xCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).d3xC= fread(d3xCID, NqUB, 'real*8');
    fclose(d3xCID);
    rGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'rGCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).rGC= fread(rGCID, NqUB, 'real*8');
    fclose(rGCID);
    thetaGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'thetaGCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).thetaGC= fread(thetaGCID, NqUB, 'real*8');
    fclose(thetaGCID);
    ellGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'ellGCmat.bin'));
    Rank(r).Specie(s).FluxTube(f).ellGC= fread(ellGCID, NqUB, 'real*8');
    fclose(ellGCID);
    Rank(r).Specie(s).FluxTube(f).rGCp(:)= ...
        (Rank(r).Specie(s).FluxTube(f).rGC(:)- RE).*1e-3;
    TsPerpID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'TsPerpmat.bin'));
    Rank(r).Specie(s).FluxTube(f).TsPerp= fread(TsPerpID, NqUB, 'real*8');
    fclose(TsPerpID);
    Rank(r).Specie(s).FluxTube(f).TsPerpp(:)= Rank(r).Specie(s).FluxTube(f).TsPerp(:);
    TsParID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', ...
        'TsParmat.bin'));
    Rank(r).Specie(s).FluxTube(f).TsPar= fread(TsParID, NqUB, 'real*8');
    fclose(TsParID);
    Rank(r).Specie(s).FluxTube(f).TsParp(:)= Rank(r).Specie(s).FluxTube(f).TsPar(:);
    Rank(r).Specie(s).FluxTube(f).Ts(:)= ...
        (1e0/3e0).*Rank(r).Specie(s).FluxTube(f).TsParp(:)+ ...
        (2e0/3e0).*Rank(r).Specie(s).FluxTube(f).TsPerpp(:);
    Rank(r).Specie(s).FluxTube(f).Tsp(:)= Rank(r).Specie(s).FluxTube(f).Ts(:);
    nsnormfacTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(s), '_', ...
        num2str(f), '_', 'nsnormfacTfort.bin'));
    Rank(r).Specie(s).FluxTube(f).nsnormfacT= fread(nsnormfacTID, 1, 'real*8');
    fclose(nsnormfacTID);
    
    for nn= 1:1:NNtT+ 1
        TimeTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', num2str(f), '_', ...
            'TimeTfort.bin'));
        TimeT(nn)= fread(TimeTID, 1, 'real*8');
        fclose(TimeTID);
        TeNTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', num2str(f), '_', ...
            'TeNTfort.bin'));
        Rank(r).Specie(s).FluxTube(f).TeNT(nn)= fread(TimeTID, 1, 'real*8');
        fclose(TeNTID);
    end
    
    for Qind= 1
        if IONVPERPVECflag == 1
            
            dVperp1CID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'dVperp1Cmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp1C= ...
                fread(dVperp1CID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(dVperp1CID);
            dVperp2CID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'dVperp2Cmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp2C= ...
                fread(dVperp2CID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(dVperp2CID);
            dVparCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'dVparCmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVparC= ...
                fread(dVparCID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(dVparCID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp1C= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp1C, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp2C= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp2C, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVparC= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVparC, NVperp1G, NVperp2G, NVparG);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp1Cp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp1C(:, :, :);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp2Cp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVperp2C(:, :, :);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVparCp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).dVparC(:, :, :);
            
            Vperp1GLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'Vperp1GLmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GL= ...
                fread(Vperp1GLID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(Vperp1GLID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GL= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GL, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GLp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GL(:, :, :);
            
            Vperp1GHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'Vperp1GHmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GH= ...
                fread(Vperp1GHID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(Vperp1GHID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GH= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GH, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GHp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GH(:, :, :);
            
            Vperp1GCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'Vperp1GCmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GC= ...
                fread(Vperp1GCID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(Vperp1GCID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GC= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GC, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GCp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp1GC(:, :, :);
            
            Vperp2GLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'Vperp2GLmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GL= ...
                fread(Vperp2GLID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(Vperp2GLID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GL= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GL, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GLp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GL(:, :, :);
            
            Vperp2GHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'Vperp2GHmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GH= ...
                fread(Vperp2GHID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(Vperp2GHID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GH= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GH, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GHp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GH(:, :, :);
            
            Vperp2GCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'Vperp2GCmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GC= ...
                fread(Vperp2GCID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(Vperp2GCID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GC= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GC, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GCp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).Vperp2GC(:, :, :);
            
            VparGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'VparGLmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGL= ...
                fread(VparGLID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(VparGLID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGL= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGL, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGLp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGL(:, :, :);
            
            VparGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'VparGHmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGH= ...
                fread(VparGHID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(VparGHID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGH= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGH, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGHp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGH(:, :, :);
            
            VparGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'VparGCmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGC= ...
                fread(VparGCID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(VparGCID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGC= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGC, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGCp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGC(:, :, :);
            
            d3vCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                '_', 'd3vCmat.bin'));
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).d3vC= ...
                fread(d3vCID, NVperp1G*NVperp2G*NVparG, 'real*8');
            fclose(d3vCID);
            
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).d3vC= ...
                reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).d3vC, NVperp1G, NVperp2G, NVparG);
            Rank(r).Specie(s).FluxTube(f).QCell(Qind).d3vCp(:, :, :)= ...
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).d3vC(:, :, :);
            
        else
            
            for Vperpind= 1:1:NVperpG;
                for Vparind= 1:1:NVparG;
                    
                    VperpGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'VperpGLmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VperpGL= ...
                        fread(VperpGLID, 1, 'real*8');
                    fclose(VperpGLID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VperpGLp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VperpGL;
                    
                    VperpGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'VperpGHmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VperpGH= ...
                        fread(VperpGHID, 1, 'real*8');
                    fclose(VperpGHID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VperpGHp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VperpGH;
                    
                    VparGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'VparGLmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VparGL= ...
                        fread(VparGLID, 1, 'real*8');
                    fclose(VparGLID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGLp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VparGL;
                    
                    VparGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'VparGHmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VparGH= ...
                        fread(VparGHID, 1, 'real*8');
                    fclose(VparGHID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGHp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VparGH;
                    
                    VperpGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'VperpGCmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VperpGC= ...
                        fread(VperpGCID, 1, 'real*8');
                    fclose(VperpGCID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VperpGCp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VperpGC;
                    
                    VparGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'VparGCmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VparGC= ...
                        fread(VparGCID, 1, 'real*8');
                    fclose(VparGCID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VparGCp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).VparGC;
                    
                    d3vCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                        '_', num2str(Vperpind), '_', num2str(Vparind), '_', 'd3vCmat.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).d3vC= ...
                        fread(d3vCID, 1, 'real*8');
                    fclose(d3vCID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).d3vCp(Vperpind, Vparind)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VCell(Vperpind, Vparind).d3vC;
                end
            end
        end
        
        if QExchangeFlag == 1
            for Vpind= 1:1:NVpG;
                for Vqind= 1:1:NVqG;
                    for Vphiind= 1:1:NVphiG;
                        
                        VpGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VpGLmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VpGL= ...
                            fread(VpGLID, 1, 'real*8');
                        fclose(VpGLID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VpGLp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VpGL;
                        
                        VpGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VpGHmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VpGH= ...
                            fread(VpGHID, 1, 'real*8');
                        fclose(VpGHID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VpGHp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VpGH;
                        
                        VpGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VpGCmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VpGC= ...
                            fread(VpGCID, 1, 'real*8');
                        fclose(VpGCID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VpGCp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VpGC;
                        
                        VqGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VqGLmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VqGL= ...
                            fread(VqGLID, 1, 'real*8');
                        fclose(VqGLID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VqGLp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VqGL;
                        
                        VqGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VqGHmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VqGH= ...
                            fread(VqGHID, 1, 'real*8');
                        fclose(VqGHID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VqGHp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VqGH;
                        
                        VqGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VqGCmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VqGC= ...
                            fread(VqGCID, 1, 'real*8');
                        fclose(VqGCID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VqGCp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VqGC;
                        
                        VphiGLID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VphiGLmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VphiGL= ...
                            fread(VphiGLID, 1, 'real*8');
                        fclose(VphiGLID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VphiGLp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VphiGL;
                        
                        VphiGHID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VphiGHmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VphiGH= ...
                            fread(VphiGHID, 1, 'real*8');
                        fclose(VphiGHID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VphiGHp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VphiGH;
                        
                        VphiGCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'VphiGCmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VphiGC= ...
                            fread(VphiGCID, 1, 'real*8');
                        fclose(VphiGCID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).VphiGCp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).VphiGC;
                        
                        d33vCID= fopen(horzcat(datadirgrid, num2str(s), '_', num2str(f), '_', num2str(1), ...
                            '_', num2str(Vpind), '_', num2str(Vqind), '_', num2str(Vphiind), '_', 'd33vCmat.bin'));
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).d33vC= ...
                            fread(d33vCID, 1, 'real*8');
                        fclose(d33vCID);
                        
                        Rank(r).Specie(s).FluxTube(f).QCell(Qind).d33vCp(Vpind, Vqind, Vphiind)= ...
                            Rank(r).Specie(s).FluxTube(f).QCell(Qind).V3Cell(Vpind, Vqind, Vphiind).d33vC;
                        
                    end
                end
            end
        end
    end
    
    EPMagRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(s), '_', ...
        num2str(f), '_', 'EPMagRTfort.bin'));
    EPMagRTr(:)= fread(EPMagRTID, ...
        (((NqUB- NqLB)+ 1)), 'real*8');
    fclose(EPMagRTID);
    
    EGMagRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(s), '_', ...
        num2str(f), '_', 'EGMagRTfort.bin'));
    EGMagRTr(:)= fread(EGMagRTID, ...
        (((NqUB- NqLB)+ 1)), 'real*8');
    fclose(EGMagRTID);
    
    for nn= 1:1:NNtT+ 1
        if QExchangeFlag == 1
            sigmaIonNeutRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'sigmaIonNeutRTfort.bin'));
            Rank(r).Specie(s).FluxTube(f).sigmaIonNeutRT(nn, :)= fread(sigmaIonNeutRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(sigmaIonNeutRTID);
            
            nuIonNeutRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'nuIonNeutRTfort.bin'));
            Rank(r).Specie(s).FluxTube(f).nuIonNeutRT(nn, :)= fread(nuIonNeutRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(nuIonNeutRTID);
        end
        M0phRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'M0phRTfort.bin'));
        M0phRTr(nn, :)= fread(M0phRTID, ...
            ((NqUB- NqLB)+ 1), 'real*8');
        fclose(M0phRTID);
        
        M1ParphRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'M1ParphRTfort.bin'));
        M1ParphRTr(nn, :)= fread(M1ParphRTID, ...
            ((NqUB- NqLB)+ 1), 'real*8');
        fclose(M1ParphRTID);
        
        if SCflag == 1
            if MomentFilterFlag == 1
                M0FiltAvrgRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                    num2str(f), '_', 'M0FiltAvrgRTfort.bin'));
                M0FiltAvrgRTr(nn, :)= fread(M0FiltAvrgRTID, ...
                    ((NqUB- NqLB)+ 1), 'real*8');
                fclose(M0FiltAvrgRTID);
                
                M1ParFiltAvrgRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                    num2str(f), '_', 'M1ParFiltAvrgRTfort.bin'));
                M1ParFiltAvrgRTr(nn, :)= fread(M1ParFiltAvrgRTID, ...
                    ((NqUB- NqLB)+ 1), 'real*8');
                fclose(M1ParFiltAvrgRTID);
            end
        end
        if SCflag == 0
            M0FiltAvrgRTr(nn, :)= M0phRTr(nn, :);
            M1ParFiltAvrgRTr(nn, :)= M1ParphRTr(nn, :);
        end
        
        if IONVPERPVECflag == 1
            
            M1Perp1phRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'M1Perp1phRTfort.bin'));
            M1Perp1phRTr(nn, :)= fread(M1Perp1phRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(M1Perp1phRTID);
            
            M2Perp1phRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'M2Perp1phRTfort.bin'));
            M2Perp1phRTr(nn, :)= fread(M2Perp1phRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(M2Perp1phRTID);
            
            M1Perp2phRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'M1Perp2phRTfort.bin'));
            M1Perp2phRTr(nn, :)= fread(M1Perp2phRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(M1Perp2phRTID);
            
            M2Perp2phRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'M2Perp2phRTfort.bin'));
            M2Perp2phRTr(nn, :)= fread(M2Perp2phRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(M2Perp2phRTID);
            
        else
            
            M1PerpphRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'M1PerpphRTfort.bin'));
            Rank(r).Specie(s).FluxTube(f).M1PerpphRTr(nn, :)= fread(M1PerpphRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(M1PerpphRTID);
            
            M2PerpphRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                num2str(f), '_', 'M2PerpphRTfort.bin'));
            Rank(r).Specie(s).FluxTube(f).M2PerpphRTr(nn, :)= fread(M2PerpphRTID, ...
                ((NqUB- NqLB)+ 1), 'real*8');
            fclose(M2PerpphRTID);
            
        end
        
        M2ParphRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'M2ParphRTfort.bin'));
        M2ParphRTr(nn, :)= fread(M2ParphRTID, ...
            ((NqUB- NqLB)+ 1), 'real*8');
        fclose(M2ParphRTID);
        
        M2phRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'M2phRTfort.bin'));
        M2phRTr(nn, :)= fread(M2phRTID, ...
            ((NqUB- NqLB)+ 1), 'real*8');
        fclose(M2phRTID);
        
        EAInertialRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'EAInertialRTfort.bin'));
        Rank(r).Specie(s).FluxTube(f).EAInertialRTr(nn, :)= fread(EAInertialRTID, ...
            (((NqUB- NqLB)+ 1)), 'real*8');
        fclose(EAInertialRTID);
        
        EAPressureRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'EAPressureRTfort.bin'));
        Rank(r).Specie(s).FluxTube(f).EAPressureRTr(nn, :)= fread(EAPressureRTID, ...
            (((NqUB- NqLB)+ 1)), 'real*8');
        fclose(EAPressureRTID);
        
        EAMagRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
            num2str(f), '_', 'EAMagRTfort.bin'));
        EAMagRTr(nn, :)= fread(EAMagRTID, ...
            (((NqUB- NqLB)+ 1)), 'real*8');
        fclose(EAMagRTID);
        
        if (EAMagRTr(nn, :) ~= ...
                Rank(r).Specie(s).FluxTube(f).EAPressureRTr(nn, :)+ ...
                Rank(r).Specie(s).FluxTube(f).EAInertialRTr(nn, :))
            disp('Inconsistent Ambipolar magnitude summation')
        end
        
        for Qind= NqLB:1:NqUB
            if M0phRTr(nn, Qind) == 0e0
                M0phRTr(nn, Qind)= NaN;
                M1ParphRTr(nn, Qind)= NaN;
                M2ParphRTr(nn, Qind)= NaN;
                M1Perp1phRTr(nn, Qind)= NaN;
                M1Perp2phRTr(nn, Qind)= NaN;
                M2Perp1phRTr(nn, Qind)= NaN;
                M2Perp2phRTr(nn, Qind)= NaN;
            end
        end
    end
    Rank(r).Specie(s).FluxTube(f).Bmag(:)= ...
        mEarth.*sqrt(Rank(r).Specie(s).FluxTube(f).ellGC(:))./ ...
        (Rank(root).Specie(s).FluxTube(f).rGC(:).^3);
    
    fG(:)= (qion.*Rank(r).Specie(s).FluxTube(f).Bmag(:)./mion)./(2e0*pi);
        
    for nn= 1:1:NNtT+ 1
        for Qind= NqLB:1:NqUB;
            if M0phRTr(nn, Qind) == 0e0
                
                if ZeroNaNflag == 1
                    M0phRTr(nn, Qind)= 0e0;
                    M2phRTr(nn, Qind)= 0e0;
                    M1ParphRTr(nn, Qind)= 0e0;
                    
                    if IONVPERPVECflag == 1
                        
                        M1Perp1phRTr(nn, Qind)= 0e0;
                        M1Perp2phRTr(nn, Qind)= 0e0;
                        Perp1Temp(nn, Qind)= 0e0;
                        Perp2Temp(nn, Qind)= 0e0;
                        Perp1Flux(nn, Qind)= 0e0;
                        Perp2Flux(nn, Qind)= 0e0;
                        PitchAngleM(nn, Qind)= 0e0;
                        GyroAngleM(nn, Qind)= 0e0;
                        
                    else
                        
                        Rank(r).Specie(s).FluxTube(f).M1PerpphRTr(nn, Qind)= 0e0;
                        PerpTemp(nn, Qind)= 0e0;
                        PerpFlux(nn, Qind)= 0e0;
                        
                    end
                    
                    M2ParphRTr(nn, Qind)= 0e0;
                    Rank(r).Specie(s).FluxTube(f).M2PerpphRTr(nn, Qind)= 0e0;
                    EAMagRTr(nn, Qind)= 0e0;
                    Rank(r).Specie(s).FluxTube(f).EAPressureRTr(nn, Qind)= 0e0;
                    Rank(r).Specie(s).FluxTube(f).EAInertialRTr(nn, Qind)= 0e0;
                    ParTemp(nn, Qind)= 0e0;
                    Temp(nn, Qind)= 0e0;
                    ParFlux(nn, Qind)= 0e0;
                    
                else
                    
                    M0phRTr(nn, Qind)= NaN;
                    M2phRTr(nn, Qind)= NaN;
                    M1ParphRTr(nn, Qind)= NaN;
                    
                    if IONVPERPVECflag == 1
                        
                        M1Perp1phRTr(nn, Qind)= NaN;
                        M1Perp2phRTr(nn, Qind)= NaN;
                        Perp1Temp(nn, Qind)= NaN;
                        Perp2Temp(nn, Qind)= NaN;
                        Perp1Flux(nn, Qind)= NaN;
                        Perp2Flux(nn, Qind)= NaN;
                        PitchAngleM(nn, Qind)= NaN;
                        GyroAngleM(nn, Qind)= NaN;
                        
                    else
                        
                        Rank(r).Specie(s).FluxTube(f).M1PerpphRTr(nn, Qind)= NaN;
                        PerpTemp(nn, Qind)= NaN;
                        PerpFlux(nn, Qind)= NaN;
                        
                    end
                    
                    M2ParphRTr(nn, Qind)= NaN;
                    Rank(r).Specie(s).FluxTube(f).M2PerpphRTr(nn, Qind)= NaN;
                    EAMagRTr(nn, Qind)= NaN;
                    Rank(r).Specie(s).FluxTube(f).EAPressureRTr(nn, Qind)= NaN;
                    Rank(r).Specie(s).FluxTube(f).EAInertialRTr(nn, Qind)= NaN;
                    ParTemp(nn, Qind)= NaN;
                    Temp(nn, Qind)= NaN;
                    ParFlux(nn, Qind)= NaN;
                    
                end
            end
            
            Rank(r).Specie(s).FluxTube(f).IonPressure(nn, Qind)= ...
                2e0*M0phRTr(nn, Qind)* ...
                M2ParphRTr(nn, Qind);
            
            Rank(r).Specie(s).FluxTube(f).ElecPressure(nn, Qind)= ...
                M0phRTr(nn, Qind)*kB* ...
                Rank(r).Specie(s).FluxTube(f).TeNT(nn);
            
            Rank(r).Specie(s).FluxTube(f).PlasmaPressure(nn, Qind)= ...
                Rank(r).Specie(s).FluxTube(f).IonPressure(nn, Qind)+ ...
                Rank(r).Specie(s).FluxTube(f).ElecPressure(nn, Qind);
            
        end
    end
    
    if DensityOutputflag == 1
        datadirInput= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/MSSims/Density', simnum, '/KMIODensity', simnum, '/');
        
        DensityOutputRTID= fopen(horzcat(datadirInput, num2str(s), '_', ...
            num2str(f), '_', 'DensityOutputRTfort.bin'));
        Specie(s).FluxTube(f).DensityOutputRTr(:)= fread(DensityOutputRTID, ...
            ((NqUB- NqLB)+ 1), 'real*8');
        fclose(DensityOutputRTID);
        
        nsnormCLBOutputID= fopen(horzcat(datadirInput, num2str(s), '_', ...
            num2str(f), '_', 'nsnormCLBOutputfort.bin'));
        Specie(s).FluxTube(f).nsnormCLBOutput= fread(nsnormCLBOutputID, ...
            1, 'integer*8');
        fclose(nsnormCLBOutputID);
        
        nsnormCUBOutputID= fopen(horzcat(datadirInput, num2str(s), '_', ...
            num2str(f), '_', 'nsnormCUBOutputfort.bin'));
        Specie(s).FluxTube(f).nsnormCUBOutput= fread(nsnormCUBOutputID, ...
            1, 'integer*8');
        fclose(nsnormCUBOutputID);
        
        if Specie(s).FluxTube(f).DensityOutputRTr(:) ~= M0phRTr(end, :)
            disp('DensityOutputRTr not equal to ending M0phRtr value')
        end
    end
    
    Perp1Temp(:, :)= ...
        2e0.*M2Perp1phRTr(:, :)./kB; % [K]
    Perp2Temp(:, :)= ...
        2e0.*M2Perp2phRTr(:, :)./kB; % [K]
    PerpTemp(:, :)= ...
        (1e0/2e0).*Perp1Temp(:, :)+ ...
        (1e0/2e0).*Perp2Temp(:, :);
    Perp1Flux(:, :)= ...
        M0phRTr(:, :).* ...
        M1Perp1phRTr(:, :); % [m^2/s]
    Perp2Flux(:, :)= ...
        M0phRTr(:, :).* ...
        M1Perp2phRTr(:, :); % [m^2/s]
    PerpFlux(:, :)= ...
        M0phRTr(:, :).* ...
        sqrt(M1Perp1phRTr(:, :).^2e0+ ...
        M1Perp2phRTr(:, :).^2e0); % [m^2/s]
    
    ParTemp(:, :)= ...
        2e0.*M2ParphRTr(:, :)./kB; % [K]
    Temp(:, :)= ...
        (1e0/3e0)*ParTemp(:, :)+ ...
        (2e0/3e0)*PerpTemp(:, :);
    ParFlux(:, :)= ...
        M0phRTr(:, :).* ...
        M1ParphRTr(:, :); % [m^2/s]
    
    for Qind= NqLB:1:NqUB
        if (((2e0/3e0).*Rank(root).Specie(s).FluxTube(f).TsPerpp(Qind)+ ...
                (1e0/3e0).*Rank(root).Specie(s).FluxTube(f).TsParp(Qind)) ~= Rank(root).Specie(s).FluxTube(f).Tsp(Qind))
        end
        
        M0Tav(Qind)= ...
            sum(M0phRTr(:, Qind))/(NNtT+ 1e0);
        EAMagTav(Qind)= ...
            sum(EAMagRTr(:, Qind))/(NNtT+ 1e0);
        EAPressureTav(Qind)= ...
            sum(Rank(1).Specie(1).FluxTube(1).EAPressureRTr(:, Qind))/(NNtT+ 1e0);
        EAInertialTav(Qind)= ...
            sum(Rank(1).Specie(1).FluxTube(1).EAInertialRTr(:, Qind))/(NNtT+ 1e0);
        M1ParTav(Qind)= ...
            sum(M1ParphRTr(:, Qind))/(NNtT+ 1e0);
        
        M1Perp1Tav(Qind)= ...
            sum(M1Perp1phRTr(:, Qind))/(NNtT+ 1e0);
        M1Perp2Tav(Qind)= ...
            sum(M1Perp2phRTr(:, Qind))/(NNtT+ 1e0);
        M2Perp1Tav(Qind)= ...
            sum(M2Perp1phRTr(:, Qind))/(NNtT+ 1e0);
        M2Perp2Tav(Qind)= ...
            sum(M2Perp2phRTr(:, Qind))/(NNtT+ 1e0);
        Perp1TempTav(Qind)= ...
            sum(Perp1Temp(:, Qind))/(NNtT+ 1e0);
        Perp2TempTav(Qind)= ...
            sum(Perp2Temp(:, Qind))/(NNtT+ 1e0);
        Perp1FluxTav(Qind)= ...
            sum(Perp1Flux(:, Qind))/(NNtT+ 1e0);
        Perp2FluxTav(Qind)= ...
            sum(Perp2Flux(:, Qind))/(NNtT+ 1e0);
        PerpTempTav(Qind)= ...
            sum(PerpTemp(:, Qind))/(NNtT+ 1e0);
        PerpFluxTav(Qind)= ...
            sum(PerpFlux(:, Qind))/(NNtT+ 1e0);
        
        M2ParTav(Qind)= ...
            sum(M2ParphRTr(:, Qind))/(NNtT+ 1e0);
        
        if (MomentFilterFlag == 1)
            Rank(1).Specie(1).FluxTube(1).M0FiltAvrgTav(Qind)= ...
                sum(M0FiltAvrgRTr(:, Qind))/(NNtT+ 1e0);
            Rank(1).Specie(1).FluxTube(1).UParFiltAvrgTav(Qind)= ...
                sum(M1ParFiltAvrgRTr(:, Qind))/(NNtT+ 1e0);
        end
        
        M2Tav(Qind)= ...
            sum(M2phRTr(:, Qind))/(NNtT+ 1e0);
        TempTav(Qind)= ...
            sum(Temp(:, Qind))/(NNtT+ 1e0);
        ParTempTav(Qind)= ...
            sum(ParTemp(:, Qind))/(NNtT+ 1e0);
        ParFluxTav(Qind)= ...
            sum(ParFlux(:, Qind))/(NNtT+ 1e0);
    end
    
    Nend= NNtT+ 1;
    for nn= 1:1:Nend
        NsnRRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', num2str(f), '_', ...
            'NsnRRTfort.bin'));
        NsnRRT(nn)= fread(NsnRRTID, 1, 'integer*8');
        fclose(NsnRRTID);
    end
    
    % FILTER MOMENTS
    r= 1; % Root Rank
    if MomentFilterFlag == 1
        for nn= 1:1:NNtT+ 1
            
            % FILTER DENSITY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M0phRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M0FiltAvrgRTr(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M0FiltAvrgRTr(nn, Qind)= ...
                        M0phRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M0FiltAvrgTav(Qind)= ...
                    sum(M0FiltAvrgRTr(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PARALLEL VELOCITY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M1ParphRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M1ParFiltAvrgRTr(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M1ParFiltAvrgRTr(nn, Qind)= ...
                        M1ParphRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M1ParFiltAvrgTav(Qind)= ...
                    sum(M1ParFiltAvrgRTr(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP1 VELOCITY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M1Perp1phRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M1Perp1FiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M1Perp1FiltAvrg(nn, Qind)= ...
                        M1Perp1phRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M1Perp1FiltAvrgTav(Qind)= ...
                    sum(M1Perp1FiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP2 VELOCITY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M1Perp2phRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M1Perp2FiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M1Perp2FiltAvrg(nn, Qind)= ...
                        M1Perp2phRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M1Perp2FiltAvrgTav(Qind)= ...
                    sum(M1Perp2FiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP1 ENERGY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M2Perp1phRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M2Perp1FiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M2Perp1FiltAvrg(nn, Qind)= ...
                        M2Perp1phRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M2Perp1FiltAvrgTav(Qind)= ...
                    sum(M2Perp1FiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP2 ENERGY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M2Perp2phRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M2Perp2FiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M2Perp2FiltAvrg(nn, Qind)= ...
                        M2Perp2phRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M2Perp2FiltAvrgTav(Qind)= ...
                    sum(M2Perp2FiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PARALLEL ENERGY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M2ParphRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M2ParFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M2ParFiltAvrg(nn, Qind)= ...
                        M2ParphRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M2ParFiltAvrgTav(Qind)= ...
                    sum(M2ParFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER TOTAL ENERGY MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= M2phRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    M2FiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    M2FiltAvrg(nn, Qind)= ...
                        M2phRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                M2FiltAvrgTav(Qind)= ...
                    sum(M2FiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER INERTIAL EAMB:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Rank(1).Specie(1).FluxTube(1).EAInertialRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Rank(r).Specie(s).FluxTube(f).EAInertialFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Rank(r).Specie(s).FluxTube(f).EAInertialFiltAvrg(nn, Qind)= ...
                        Rank(r).Specie(s).FluxTube(f).EAInertialRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                EAInertialFiltAvrgTav(Qind)= ...
                    sum(Rank(r).Specie(s).FluxTube(f).EAInertialFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PRESSURE EAMB:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Rank(1).Specie(1).FluxTube(1).EAPressureRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Rank(r).Specie(s).FluxTube(f).EAPressureFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Rank(r).Specie(s).FluxTube(f).EAPressureFiltAvrg(nn, Qind)= ...
                        Rank(r).Specie(s).FluxTube(f).EAPressureRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                EAPressureFiltAvrgTav(Qind)= ...
                    sum(Rank(r).Specie(s).FluxTube(f).EAPressureFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER MAGNITUDE EAMB:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= EAMagRTr(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Rank(r).Specie(s).FluxTube(f).EAMAgFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Rank(r).Specie(s).FluxTube(f).EAMagFiltAvrg(nn, Qind)= ...
                        EAMagRTr(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                EAMagFiltAvrgTav(Qind)= ...
                    sum(Rank(r).Specie(s).FluxTube(f).EAMagFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP1 TEMP MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Perp1Temp(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Perp1TempFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Perp1TempFiltAvrg(nn, Qind)= ...
                        Perp1Temp(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                Perp1TempFiltAvrgTav(Qind)= ...
                    sum(Perp1TempFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP2 TEMP MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Perp2Temp(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Perp2TempFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Perp2TempFiltAvrg(nn, Qind)= ...
                        Perp2Temp(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                Perp2TempFiltAvrgTav(Qind)= ...
                    sum(Perp2TempFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP TEMP MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= PerpTemp(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    PerpTempFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    PerpTempFiltAvrg(nn, Qind)= ...
                        PerpTemp(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                PerpTempFiltAvrgTav(Qind)= ...
                    sum(PerpTempFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP1 FLUX MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Perp1Flux(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Perp1FluxFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Perp1FluxFiltAvrg(nn, Qind)= ...
                        Perp1Flux(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                Perp1FluxFiltAvrgTav(Qind)= ...
                    sum(Perp1FluxFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP2 FLUX MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Perp2Flux(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    Perp2FluxFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    Perp2FluxFiltAvrg(nn, Qind)= ...
                        Perp2Flux(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                Perp2FluxFiltAvrgTav(Qind)= ...
                    sum(Perp2FluxFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PERP FLUX MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= PerpFlux(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    PerpFluxFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    PerpFluxFiltAvrg(nn, Qind)= ...
                        PerpFlux(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                PerpFluxFiltAvrgTav(Qind)= ...
                    sum(PerpFluxFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PAR TEMP MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= ParTemp(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    ParTempFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    ParTempFiltAvrg(nn, Qind)= ...
                        ParTemp(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                ParTempFiltAvrgTav(Qind)= ...
                    sum(ParTempFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER TOTAL TEMP MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= Temp(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    TempFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    TempFiltAvrg(nn, Qind)= ...
                        Temp(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                TempFiltAvrgTav(Qind)= ...
                    sum(TempFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
            % FILTER PARALLEL FLUX MOMENT:
            for Qind= NqLB:1:NqUB
                MomentFiltIn(nn, Qind)= ParFlux(nn, Qind);
            end
            for Qind= NqLB:1:NqUB
                if ((Qind >= NqLB) & (Qind <= NqUB))
                    
                    % Filter low altitude moments
                    if (Qind <= round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments below given cell
                        if (Qind == NqLB)
                            FiltSum2= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg1;
                        else if (Qind == NqLB+ 1e0)
                                FiltSum2= MomentFiltIn(nn, NqLB);
                                FiltAvrg2= FiltSum2;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum2= MomentFiltIn(nn, Qind- 1);
                                for MAfilterQind2= 2:1:round(real(Qind- NqLB))
                                    FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                                end
                                FiltAvrg2= FiltSum2/round(real(Qind- NqLB));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                    
                    % Filter mid altitude moments
                    if ((Qind > round(NqLB- 1e0+ (MAfilterPt- 1e0)/2e0)) & ...
                            (Qind < (NqUB- round((MAfilterPt- 1e0)/2e0))))
                        % Average moments above (and including) given cell
                        FiltSum1= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind+ 1);
                        for MAfilterQind1= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                        end
                        % Average moments below given cell
                        FiltSum2= MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg1= FiltSum1/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        FiltAvrg2= FiltSum2/round((MAfilterPt- 1e0)/2e0);
                        MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                    end
                    
                    % Filter high altitude moments
                    if (Qind >= (NqUB- round((MAfilterPt- 1e0)/2e0)))
                        % Average moments below (and including) given cell
                        FiltSum2= MomentFiltIn(nn, Qind)+ MomentFiltIn(nn, Qind- 1);
                        for MAfilterQind2= 2:1:round((MAfilterPt- 1e0)/2e0)
                            FiltSum2= FiltSum2+ MomentFiltIn(nn, (Qind- MAfilterQind2));
                        end
                        FiltAvrg2= FiltSum2/(round((MAfilterPt- 1e0)/2e0)+ 1);
                        % Average moments above given cell
                        if (Qind == NqUB)
                            FiltSum1= 0e0;
                            MomentFiltOut(nn, Qind)= FiltAvrg2;
                        else if (Qind == NqUB- 1e0)
                                FiltSum1= MomentFiltIn(nn, NqUB);
                                FiltAvrg1= FiltSum1;
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            else
                                FiltSum1= MomentFiltIn(nn, Qind+ 1);
                                for MAfilterQind1= 2:1:round(real(NqUB- Qind))
                                    FiltSum1= FiltSum1+ MomentFiltIn(nn, (Qind+ MAfilterQind1));
                                end
                                FiltAvrg1= FiltSum1/round(real(NqUB- Qind));
                                MomentFiltOut(nn, Qind)= (FiltAvrg1+ FiltAvrg2)/2e0;
                            end
                        end
                    end
                else
                    MomentFiltOut(nn, Qind)= 0e0;
                end
            end
            for Qind= NqLB:1:NqUB
                if (Qind > NqLB) & (Qind < NqUB)
                    ParFluxFiltAvrg(nn, Qind)= MomentFiltOut(nn, Qind);
                else
                    ParFluxFiltAvrg(nn, Qind)= ...
                        ParFlux(nn, Qind);
                end
            end
            for Qind= NqLB:1:NqUB;
                ParFluxFiltAvrgTav(Qind)= ...
                    sum(ParFluxFiltAvrg(:, Qind))/(NNtT+ 1e0);
            end
            
        end
    end
    
    clear rr qq nd rrAB ndAB qqAB ndAB L LH Q0datfacVec
    Qindlen= ((NqUB- NqLB)+ 1);
    for Qind= 1:1:Qindlen;
        rr(Qind)= Rank(r).Specie(s).FluxTube(f).rGCp(Qind);
        qq(Qind)= Rank(r).Specie(s).FluxTube(f).qGC(Qind);
    end
    nd(:)= TimeT(:);
    [rrAB ndAB]= meshgrid(rr, nd);
    [qqAB ndAB]= meshgrid(qq, nd);
    
    iiNt= size(nd);
    
    for ii= 1:1:iiNt(1)
        for Qind= NqLB:1:NqUB;
            if ii == 1
                Q0datfacVec(ii, Qind)= 0;
            else
                Q0datfacVec(ii, Qind)= Q0datfacVec(ii- 1, Qind)+ Q0datfac;
            end
        end
    end
    
end

% Import distributions functions
if NCflag == 1
    NEG= 50;
    EGeVmax= 1; % max Energy grid value [eV]
end
if Zflag == 1
    NEG= 70;
    EGeVmax= 10; % max Energy grid value [eV]
end
if Vlambdaflag == 1
    NEG= 70;
    EGeVmax= 10; % max Energy grid value [eV]
end
if VPCflag == 1
    NEG= 50; 
    EGeVmax= 100; % max Energy grid value [eV]
end
if VWflag == 1
    NEG= 50; 
    EGeVmax= 100; % max Energy grid value [eV]
end
if Wflag == 1
    NEG= 80;
    EGeVmax= 10; % max Energy grid value [eV]
end
if Bflag == 1
    NEG= 80;
    EGeVmax= 85; % max Energy grid value [eV]
end
NalphaG= NEG;
NthetaG= NEG;

for zzflat= 1:1:1
    
    clear Nbeg Nend 
    if NCflag == 1
        Nbeg= 25; % Select intermediate event time
    end
    if Zflag == 1
        Nbeg= 10; % Select intermediate event time
    end
    if Wflag == 1
        Nbeg= 15; % 15 Select intermediate event time
    end
    if Bflag == 1
        Nbeg= 4; % Select intermediate event time
    end
    if Vlambdaflag == 1
        Nbeg= 9; % Select intermediate event time
    end
    if VWflag == 1
        if Run == 1 
            Nbeg= 4; 
        end
        if Run == 2
            Nbeg= 4; 
        end
        if Run == 3
            Nbeg= 4; 
        end
    end
    if VPCflag == 1
        if Run == 1 % VV0FticrV0epar13a0
            Nbeg= 6; 
        end
        if Run == 2 % epar13a2
            Nbeg= 6; 
        end
        if Run == 3 % epar13a4
            Nbeg= 8; 
        end
        if Run == 4 % epar6a0
            Nbeg= 6; 
        end
        if Run == 5 % epar6a2
            Nbeg= 6; 
        end
        if Run == 6 % epar6a4
            Nbeg= 7; 
        end
        if Run == 7 % epar7a0
            Nbeg= 6; 
        end
        if Run == 8 % epar7a2
            Nbeg= 6; 
        end
        if Run == 9 % epar7a4
            Nbeg= 6;
        end
        if Run == 10 % epar11a0
            Nbeg= 5;
        end
        if Run == 11 % epar11a2
            Nbeg= 5;
        end
        if Run == 12 % epar11a4
            Nbeg= 5; 
        end
        if Run == 13 % epar10a0
            Nbeg= 3; 
        end
        if Run == 14 % epar10a2
            Nbeg= 4; 
        end
        if Run == 15 % epar10a4
            Nbeg= 4; 
        end
        if Run == 16 % epar12a0
            Nbeg= 3; 
        end
        if Run == 17 % epar12a2
            Nbeg= 3; 
        end
        if Run == 18 % epar12a4
            Nbeg= 3; 
        end
        
    end
    Nend= NNtT+ 1;
    
    % IMPORT ION DISTRIBUTION FUNCTIONS
    NoiseFilterflag= 0;
    NoiseLimNph= 5;  % 10000;
    RedNaNflag= 0; % Set to 1 for zero values to NaN
    
    for Vperp1ind= 1:1:NVperp1G
        Vperp1GCp(Vperp1ind)= ...
            Rank(root).Specie(s).FluxTube(f).QCell(1).Vperp1GCp(Vperp1ind, 1, 1);
    end
    for Vperp2ind= 1:1:NVperp2G
        Vperp2GCp(Vperp2ind)= ...
            Rank(root).Specie(s).FluxTube(f).QCell(1).Vperp2GCp(1, Vperp2ind, 1);
    end
    for Vparind= 1:1:NVparG
        VparGCp(Vparind)= ...
            Rank(root).Specie(s).FluxTube(f).QCell(1).VparGCp(1, 1, Vparind);
    end
    
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB
                
                N2PerpphRTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                    num2str(f), '_', num2str(Qind), '_', 'N2PerpphRTfort.bin'));
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTf(:, :, :, nn)= ...
                    fread(N2PerpphRTID, NVperp1G*NVperp2G*NVparG, 'real*8');
                fclose(N2PerpphRTID);
                
                Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, :, :, nn)= ...
                    reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTf(:, :, :, nn), ...
                    NVperp1G, NVperp2G, NVparG); % (Vperp2= Vx, Vperp1= Vy, Vpar= Vz)
                
                Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn)= ...
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, :, :, nn)./ ...
                    Rank(r).Specie(s).FluxTube(f).QCell(1).d3vCp(:, :, :);
                
                Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(:, :, :, nn)= ...
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, :, :, nn).* ...
                    (Rank(root).Specie(s).FluxTube(f).d3xC(Qind)/ ...
                    Rank(root).Specie(s).FluxTube(f).nsnormfacT(1));
                
                Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormERRORRTp(:, :, :, nn)= ...
                    (Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(:, :, :, nn)).^(-1e0/2e0);
                
                if (NoiseFilterflag == 1)
                    for Vperp1ind= 1:1:NVperp1G
                        for Vperp2ind= 1:1:NVperp2G
                            for Vparind= 1:1:NVparG
                                if (Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                        N2PerpphReNormRT(Vperp1ind, Vperp2ind, Vparind, nn) < NoiseLimNph)
                                    Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                        N2PerpphReNormRT(Vperp1ind, Vperp2ind, Vparind, nn)= 0e0;
                                end
                            end
                        end
                    end
                    
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, :, :, nn)= ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(:, :, :, nn)./ ...
                        (Rank(root).Specie(s).FluxTube(f).d3xC(Qind)/ ...
                        Rank(root).Specie(s).FluxTube(f).nsnormfacT(1));
                    
                    Rank(r).Specie(s).FluxTube(f).NqRTp(nn, Qind)= ...
                        sum(sum(sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, :, :, nn))));
                    
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn)= ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, :, :, nn)./ ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).d3vCp(:, :, :);
                    
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormERRORRTp(:, :, :, nn)= ...
                        (Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(:, :, :, nn)).^(-1e0/2e0);
                end
                
                Rank(root).Specie(s).FluxTube(f).N2PerpphReNormRTp(:, :, :, Qind, nn)= ...
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(:, :, :, nn);
                
                for Vperp1ind= 1:1:NVperp1G
                    for Vperp2ind= 1:1:NVperp2G
                        for Vparind= 1:1:NVparG
                            if (isinf(Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                    N2PerpphReNormERRORRTp(Vperp1ind, Vperp2ind, Vparind, nn)) == 1) | ...
                                    (isnan(Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                    N2PerpphReNormERRORRTp(Vperp1ind, Vperp2ind, Vparind, nn)) == 1)
                                Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                    N2PerpphReNormERRORRTp(Vperp1ind, Vperp2ind, Vparind, nn)= 0e0;
                            end
                        end
                    end
                end
                
                if QExchangeFlag == 1
                    NphENARTID= fopen(horzcat(datadir, num2str(r- 1), '_', num2str(nn), '_', num2str(s), '_', ...
                        num2str(f), '_', num2str(Qind), '_', 'NphENARTfort.bin'));
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).NphENARTf(:, :, :, nn)= ...
                        fread(NphENARTID, NVpG*NVqG*NVphiG, 'real*8');
                    fclose(NphENARTID);
                    
                    Rank(r).Specie(s).FluxTube(f).QCell(Qind).NphENARTp(:, :, :, nn)= ...
                        reshape(Rank(r).Specie(s).FluxTube(f).QCell(Qind).NphENARTf(:, :, :, nn), ...
                        NVpG, NVqG, NVphiG);
                    
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).FphENARTp(:, :, :, nn)= ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphENARTp(:, :, :, nn)./ ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).d33vCp(:, :, :);
                    
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphReNormENART(:, :, :, nn)= ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphENARTp(:, :, :, nn).* ...
                        (Rank(root).Specie(s).FluxTube(f).QCell(Qind).d3xC(1)/ ...
                        Rank(root).Specie(s).FluxTube(f).nsnormfacT(1));
                    
                    Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphReNormERRORENARTp(:, :, :, nn)= ...
                        (Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphReNormENART(:, :, :, nn)).^(-1e0/2e0);
                    
                    for Vpind= 1:1:NVpG
                        for Vqind= 1:1:NVqG
                            for Vphiind= 1:1:NVphiG
                                if (isinf(Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                        NphReNormERRORENARTp(Vpind, Vqind, Vphiind, nn)) == 1) | ...
                                        (isnan(Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                        NphReNormERRORENARTp(Vpind, Vqind, Vphiind, nn)) == 1)
                                    Rank(root).Specie(s).FluxTube(f).QCell(Qind). ...
                                        NphReNormERRORENARTp(Vpind, Vqind, Vphiind, nn)= 0e0;
                                end
                            end
                        end
                    end
                    
                end
            end
            
            Rank(root).Specie(s).FluxTube(f).TotalParticles(nn)= ...
                sum(sum(sum(sum(Rank(root).Specie(s).FluxTube(f).N2PerpphReNormRTp(:, :, :, :, nn)))));
        end
    end
    
    % Compute noise-filtered moments:
    if (NoiseFilterflag == 1)
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend
                if nn == 1 | nn == Nbeg | nn == Nend
                    
                    ggg0(:, :, :, nn)= ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    ggg1Perp1(:, :, :, nn)= ...
                        Rank(1).Specie(1).FluxTube(1).QCell(1).Vperp1GCp(:, :, :).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    ggg1Perp2(:, :, :, nn)= ...
                        Rank(1).Specie(1).FluxTube(1).QCell(1).Vperp2GCp(:, :, :).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    ggg1Par(:, :, :, nn)= ...
                        Rank(1).Specie(1).FluxTube(1).QCell(1).VparGCp(:, :, :).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    
                    ggg0Int(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg0(:, :, :, nn);
                    ggg1Perp1Int(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg1Perp1(:, :, :, nn);
                    ggg1Perp2Int(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg1Perp2(:, :, :, nn);
                    ggg1ParInt(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg1Par(:, :, :, nn);
                    
                    ggg0Sum(nn)= sum(sum(sum(ggg0Int(:, :, :, nn))));
                    ggg1Perp1Sum(nn)= sum(sum(sum(ggg1Perp1Int(:, :, :, nn))));
                    ggg1Perp2Sum(nn)= sum(sum(sum(ggg1Perp2Int(:, :, :, nn))));
                    ggg1ParSum(nn)= sum(sum(sum(ggg1ParInt(:, :, :, nn))));
                    
                    Rank(root).Specie(s).FluxTube(f).M0phRTr(nn, Qind)= ggg0Sum(nn);
                    Rank(root).Specie(s).FluxTube(f).M1Perp1phRTr(nn, Qind)= ggg1Perp1Sum(nn)/ggg0Sum(nn);
                    Rank(root).Specie(s).FluxTube(f).M1Perp2phRTr(nn, Qind)= ggg1Perp2Sum(nn)/ggg0Sum(nn);
                    Rank(root).Specie(s).FluxTube(f).M1ParphRTr(nn, Qind)= ggg1ParSum(nn)/ggg0Sum(nn);
                    
                    ggg2(:, :, :, nn)= ...
                        (Rank(1).Specie(1).FluxTube(1).QCell(1).Vperp1GCp(:, :, :).^2e0+ ...
                        Rank(1).Specie(1).FluxTube(1).QCell(1).Vperp2GCp(:, :, :).^2e0+ ...
                        (Rank(1).Specie(1).FluxTube(1).QCell(1).VparGCp(:, :, :)- ...
                        Rank(root).Specie(s).FluxTube(f).M1ParphRTr(nn, Qind)).^2e0).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    ggg2Perp1(:, :, :, nn)= ...
                        (Rank(1).Specie(1).FluxTube(1).QCell(1).Vperp1GCp(:, :, :).^2e0).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    ggg2Perp2(:, :, :, nn)= ...
                        (Rank(1).Specie(1).FluxTube(1).QCell(1).Vperp2GCp(:, :, :).^2e0).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    ggg2Par(:, :, :, nn)= ...
                        ((Rank(1).Specie(1).FluxTube(1).QCell(1).VparGCp(:, :, :)- ...
                        Rank(root).Specie(s).FluxTube(f).M1ParphRTr(nn, Qind)).^2e0).* ...
                        Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                    
                    ggg2Int(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg2(:, :, :, nn);
                    ggg2Perp1Int(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg2Perp1(:, :, :, nn);
                    ggg2Perp2Int(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg2Perp2(:, :, :, nn);
                    ggg2ParInt(:, :, :, nn)= ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp1Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVperp2Cp(:, :, :).* ...
                        Rank(r).Specie(s).FluxTube(f).QCell(1).dVparCp(:, :, :).* ...
                        ggg2Par(:, :, :, nn);
                    
                    ggg2Sum(nn)= sum(sum(sum(ggg2Int(:, :, :, nn))));
                    ggg2Perp1Sum(nn)= sum(sum(sum(ggg2Perp1Int(:, :, :, nn))));
                    ggg2Perp2Sum(nn)= sum(sum(sum(ggg2Perp2Int(:, :, :, nn))));
                    ggg2ParSum(nn)= sum(sum(sum(ggg2ParInt(:, :, :, nn))));
                    
                    Rank(root).Specie(s).FluxTube(f).M2phRTr(nn, Qind)= ...
                        (mion/2e0)*ggg2Sum(nn)/ggg0Sum(nn);
                    Rank(root).Specie(s).FluxTube(f).M2Perp1phRTr(nn, Qind)= ...
                        (mion/2e0)*ggg2Perp1Sum(nn)/ggg0Sum(nn);
                    Rank(root).Specie(s).FluxTube(f).M2Perp2phRTr(nn, Qind)= ...
                        (mion/2e0)*ggg2Perp2Sum(nn)/ggg0Sum(nn);
                    Rank(root).Specie(s).FluxTube(f).M2ParphRTr(nn, Qind)= ...
                        (mion/2e0)*ggg2ParSum(nn)/ggg0Sum(nn);
                    
                    if (Rank(root).Specie(s).FluxTube(f).M0phRTr(nn, Qind) == 0e0)
                        Rank(root).Specie(s).FluxTube(f).M0phRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M1Perp1phRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M1Perp2phRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M1ParphRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M2phRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M2Perp1phRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M2Perp2phRTr(nn, Qind)= NaN;
                        Rank(root).Specie(s).FluxTube(f).M2ParphRTr(nn, Qind)= NaN;
                    end
                end
            end
            
            M0Tav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M0phRTr(:, Qind))/(NNtT+ 1);
            M1Perp1Tav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M1Perp1phRTr(:, Qind))/(NNtT+ 1);
            M1Perp2Tav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M1Perp2phRTr(:, Qind))/(NNtT+ 1);
            M1ParTav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M1ParphRTr(:, Qind))/(NNtT+ 1);
            M2Tav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M2phRTr(:, Qind))/(NNtT+ 1);
            M2Perp1Tav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M2Perp1phRTr(:, Qind))/(NNtT+ 1);
            M2Perp2Tav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M2Perp2phRTr(:, Qind))/(NNtT+ 1);
            M2ParTav(Qind)= ...
                sum(Rank(root).Specie(s).FluxTube(f).M2ParphRTr(:, Qind))/(NNtT+ 1);
        end
        
        Rank(r).Specie(s).FluxTube(f).Perp1Temp(:, :)= ...
            2e0.*M2Perp1phRTr(:, :)./kB; % [K]
        Rank(r).Specie(s).FluxTube(f).Perp2Temp(:, :)= ...
            2e0.*M2Perp2phRTr(:, :)./kB; % [K]
        Rank(r).Specie(s).FluxTube(f).PerpTemp(:, :)= ...
            (1e0/2e0).*Rank(r).Specie(s).FluxTube(f).Perp1Temp(:, :)+ ...
            (1e0/2e0).*Rank(r).Specie(s).FluxTube(f).Perp2Temp(:, :);
        Rank(r).Specie(s).FluxTube(f).Perp1Flux(:, :)= ...
            M0phRTr(:, :).* ...
            M1Perp1phRTr(:, :); % [m^2/s]
        Rank(r).Specie(s).FluxTube(f).Perp2Flux(:, :)= ...
            M0phRTr(:, :).* ...
            M1Perp2phRTr(:, :); % [m^2/s]
        Rank(r).Specie(s).FluxTube(f).PerpFlux(:, :)= ...
            M0phRTr(:, :).* ...
            sqrt(M1Perp1phRTr(:, :).^2e0+ ...
            M1Perp2phRTr(:, :).^2e0); % [m^2/s]
        
        Rank(r).Specie(s).FluxTube(f).ParTemp(:, :)= ...
            2e0.*M2ParphRTr(:, :)./kB; % [K]
        Rank(r).Specie(s).FluxTube(f).Temp(:, :)= ...
            (1e0/3e0)*Rank(r).Specie(s).FluxTube(f).ParTemp(:, :)+ ...
            (2e0/3e0)*Rank(r).Specie(s).FluxTube(f).PerpTemp(:, :);
        Rank(r).Specie(s).FluxTube(f).ParFlux(:, :)= ...
            M0phRTr(:, :).* ...
            M1ParphRTr(:, :); % [m^2/s]
    end
    
    % Compute reduced distribution functions:
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB;
                for Vparind= 1:1:NVparG
                    FLogVparRed(Vparind, Qind, nn)= ...
                        sum(sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, Vparind, nn)));
                end
                for Vperp1ind= 1:1:NVperp1G
                    FLogVperp1Red(Vperp1ind, Qind, nn)= ...
                        sum(sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(Vperp1ind, :, :, nn)));
                end
                for Vperp2ind= 1:1:NVperp2G
                    FLogVperp2Red(Vperp2ind, Qind, nn)= ...
                        sum(sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, Vperp2ind, :, nn)));
                end
                for Vperp1ind= 1:1:NVperp1G
                    for Vparind= 1:1:NVparG
                        NLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= ...
                            sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(Vperp1ind, :, Vparind, nn));
                        FLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= ...
                            sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(Vperp1ind, :, Vparind, nn));
                        NReNormLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= ...
                            sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(Vperp1ind, :, Vparind, nn));
                        NReNormERRORLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= ...
                            (NReNormLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn))^(-1e0/2e0);
                        if (RedNaNflag == 1)
                            if (NLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn) == 0e0)
                                NLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= NaN;
                            end
                            if (FLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn) == 0e0)
                                FLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= NaN;
                            end
                            if (NReNormLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn) == 0e0)
                                NReNormLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= NaN;
                            end
                            if (NReNormERRORLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn) == 0e0)
                                NReNormERRORLogVperp1VparRed(Vperp1ind, Vparind, Qind, nn)= NaN;
                            end
                        end
                    end
                end
                for Vperp2ind= 1:1:NVperp2G
                    for Vparind= 1:1:NVparG
                        NLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= ...
                            sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(:, Vperp2ind, Vparind, nn));
                        FLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= ...
                            sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, Vperp2ind, Vparind, nn));
                        NReNormLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= ...
                            sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(:, Vperp2ind, Vparind, nn));
                        NReNormERRORLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= ...
                            (NReNormLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn))^(-1e0/2e0);
                        if (RedNaNflag == 1)
                            if (NLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn) == 0e0)
                                NLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= NaN;
                            end
                            if (FLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn) == 0e0)
                                FLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= NaN;
                            end
                            if (NReNormLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn) == 0e0)
                                NReNormLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= NaN;
                            end
                            if (NReNormERRORLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn) == 0e0)
                                NReNormERRORLogVperp2VparRed(Vperp2ind, Vparind, Qind, nn)= NaN;
                            end
                        end
                        
                    end
                end
                for Vperp1ind= 1:1:NVperp1G
                    for Vperp2ind= 1:1:NVperp2G
                        NLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= ...
                            sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).N2PerpphRTp(Vperp1ind, Vperp2ind, :, nn));
                        FLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= ...
                            sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(Vperp1ind, Vperp2ind, :, nn));
                        NReNormLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= ...
                            sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).N2PerpphReNormRT(Vperp1ind, Vperp2ind, :, nn));
                        NReNormERRORLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= ...
                            (NReNormLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn))^(-1e0/2e0);
                        if (RedNaNflag == 1)
                            if (NLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn) == 0e0)
                                NLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= NaN;
                            end
                            if (FLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn) == 0e0)
                                FLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= NaN;
                            end
                            if (NReNormLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn) == 0e0)
                                NReNormLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= NaN;
                            end
                            if (NReNormERRORLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn) == 0e0)
                                NReNormERRORLogVperp1Vperp2Red(Vperp1ind, Vperp2ind, Qind, nn)= NaN;
                            end
                        end
                    end
                end
                if QExchangeFlag == 1
                    for Vpind= 1:1:NVpLog
                        for Vphiind= 1:1:NVphiLog
                            NLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphENARTp(Vpind, :, Vphiind, nn));
                            FLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).FphENARTp(Vpind, :, Vphiind, nn));
                            NReNormLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= ...
                                sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).NphReNormENART(Vpind, :, Vphiind, nn));
                            NReNormERRORLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphReNormERRORENARTp(Vpind, :, Vphiind, nn));
                            if (RedNaNflag == 1)
                                if (NLogVpVphiENARed(Vpind, Vphiind, Qind, nn) == 0e0)
                                    NLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= NaN;
                                end
                                if (FLogVpVphiENARed(Vpind, Vphiind, Qind, nn) == 0e0)
                                    FLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= NaN;
                                end
                                if (NReNormLogVpVphiENARed(Vpind, Vphiind, Qind, nn) == 0e0)
                                    NReNormLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= NaN;
                                end
                                if (NReNormERRORLogVpVphiENARed(Vpind, Vphiind, Qind, nn) == 0e0)
                                    NReNormERRORLogVpVphiENARed(Vpind, Vphiind, Qind, nn)= NaN;
                                end
                            end
                        end
                    end
                    for Vqind= 1:1:NVqLog
                        for Vphiind= 1:1:NVphiLog
                            NLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphENARTp(:, Vqind, Vphiind, nn));
                            FLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).FphENARTp(:, Vqind, Vphiind, nn));
                            NReNormLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= ...
                                sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).NphReNormENART(:, Vqind, Vphiind, nn));
                            NReNormERRORLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphReNormERRORENARTp(:, Vqind, Vphiind, nn));
                            if (RedNaNflag == 1)
                                if (NLogVqVphiENARed(Vqind, Vphiind, Qind, nn) == 0e0)
                                    NLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= NaN;
                                end
                                if (FLogVqVphiENARed(Vqind, Vphiind, Qind, nn) == 0e0)
                                    FLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= NaN;
                                end
                                if (NReNormLogVqVphiENARed(Vqind, Vphiind, Qind, nn) == 0e0)
                                    NReNormLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= NaN;
                                end
                                if (NReNormERRORLogVqVphiENARed(Vqind, Vphiind, Qind, nn) == 0e0)
                                    NReNormERRORLogVqVphiENARed(Vqind, Vphiind, Qind, nn)= NaN;
                                end
                            end
                            
                        end
                    end
                    for Vpind= 1:1:NVpLog
                        for Vqind= 1:1:NVqLog
                            NLogVpVqENARed(Vpind, Vqind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphENARTp(Vpind, Vqind, :, nn));
                            FLogVpVqENARed(Vpind, Vqind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).FphENARTp(Vpind, Vqind, :, nn));
                            NReNormLogVpVqENARed(Vpind, Vqind, Qind, nn)= ...
                                sum(Rank(r).Specie(s).FluxTube(f).QCell(Qind).NphReNormENART(Vpind, Vqind, :, nn));
                            NReNormERRORLogVpVqENARed(Vpind, Vqind, Qind, nn)= ...
                                sum(Rank(root).Specie(s).FluxTube(f).QCell(Qind).NphReNormERRORENARTp(Vpind, Vqind, :, nn));
                            if (RedNaNflag == 1)
                                if (NLogVpVqENARed(Vpind, Vqind, Qind, nn) == 0e0)
                                    NLogVpVqENARed(Vpind, Vqind, Qind, nn)= NaN;
                                end
                                if (FLogVpVqENARed(Vpind, Vqind, Qind, nn) == 0e0)
                                    FLogVpVqENARed(Vpind, Vqind, Qind, nn)= NaN;
                                end
                                if (NReNormLogVpVqENARed(Vpind, Vqind, Qind, nn) == 0e0)
                                    NReNormLogVpVqENARed(Vpind, Vqind, Qind, nn)= NaN;
                                end
                                if (NReNormERRORLogVpVqENARed(Vpind, Vqind, Qind, nn) == 0e0)
                                    NReNormERRORLogVpVqENARed(Vpind, Vqind, Qind, nn)= NaN;
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    
    % COMPUTE PITCH ANGLE DISTRIBUTIONS AND DIFFERENTIAL NUMBER AND ENERGY
    % FLUXES:
    
    clear EnergyG alphaG thetaG Vperp2E Vperp1E VparE
    clear EnergyRTp VelRTp VelPerp1RTp VelPerp2RTp VelPerpRTp VelParRTp AlphaRTp ThetaRTp
    for Vperp1ind= 1:1:NVperp1G
        for Vperp2ind= 1:1:NVperp2G
            for Vparind= 1:1:NVparG
                % Energy Grid [J]
                EnergyRTp(Vperp1ind, Vperp2ind, Vparind)= ...
                    (mion/2e0)*(Vperp1GCp(Vperp1ind)^2e0+ ...
                    Vperp2GCp(Vperp2ind)^2e0+ VparGCp(Vparind)^2e0);
                % Velocity Grid [m/s]
                VelRTp(Vperp1ind, Vperp2ind, Vparind)= ...
                    sqrt(Vperp1GCp(Vperp1ind)^2e0+ Vperp2GCp(Vperp2ind)^2e0+ ...
                    VparGCp(Vparind)^2e0);
                % Perp1 Velocity Grid [m/s]
                VelPerp1RTp(Vperp1ind, Vperp2ind, Vparind)= Vperp1GCp(Vperp1ind);
                % Perp2 Velocity Grid [m/s]
                VelPerp2RTp(Vperp1ind, Vperp2ind, Vparind)= Vperp2GCp(Vperp2ind);
                % Perp Velocity Grid [m/s]
                VelPerpRTp(Vperp1ind, Vperp2ind, Vparind)= ...
                    sqrt(Vperp1GCp(Vperp1ind)^2e0+ Vperp2GCp(Vperp2ind)^2e0);
                % Par Velocity Grid [m/s]
                VelParRTp(Vperp1ind, Vperp2ind, Vparind)= VparGCp(Vparind);
                % Pitch Angle Grid [degs]
                AlphaRTp(Vperp1ind, Vperp2ind, Vparind)= ...
                    abs(90e0- atand(VelPerpRTp(Vperp1ind, Vperp2ind, Vparind)/ ...
                    VelParRTp(Vperp1ind, Vperp2ind, Vparind)));
                % Gyro Angle Grid [degs]
                ThetaRTp(Vperp1ind, Vperp2ind, Vparind)= ...
                    acosd(VelPerp2RTp(Vperp1ind, Vperp2ind, Vparind)/ ...
                    VelPerpRTp(Vperp1ind, Vperp2ind, Vparind));
            end
        end
    end
    
    % Set query points:
    
    EnergyG= linspace(0e0, EGeVmax/eVfac, NEG); % set energy grid [J]
    alphaG= linspace(1e0, 180e0, NalphaG); % set pitch-angle grid [degs]
    thetaG= linspace(1e0, 360e0, NthetaG); % set gyro-angle grid [degs]
    [EnergyGG alphaGG thetaGG]= ndgrid(EnergyG, alphaG, thetaG);
    Vperp2E(:, :, :)= sqrt(2e0.*EnergyGG(:, :, :)./mion).*sind(alphaGG(:, :, :)).*cosd(thetaGG(:, :, :));
    Vperp1E(:, :, :)= sqrt(2e0.*EnergyGG(:, :, :)./mion).*sind(alphaGG(:, :, :)).*sind(thetaGG(:, :, :));
    VparE(:, :, :)= sqrt(2e0.*EnergyGG(:, :, :)./mion).*cosd(alphaGG(:, :, :));
    
    % Set known points:
    [Vperp1GCm1 Vperp2GCm1 VparGCm1]= ndgrid(Vperp1GCp, Vperp2GCp, VparGCp);
    
    clear FinterpIn FinterpOut FEInterp
    % Interpolate vel distribs:
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB
                FinterpIn(:, :, :)= Rank(root).Specie(s).FluxTube(f).QCell(Qind).F2PerpphRTp(:, :, :, nn);
                FinterpOut(:, :, :)= interpn(Vperp1GCm1, Vperp2GCm1, VparGCm1, FinterpIn, Vperp1E, Vperp2E, VparE);
                FEInterp(:, :, :, Qind, nn)= FinterpOut(:, :, :);
            end
        end
    end
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB
                for Eind= 1:1:NEG
                    for alphaind= 1:1:NalphaG
                        for thetaind= 1:1:NthetaG
                            if isnan(FEInterp(Eind, alphaind, thetaind, Qind, nn)) == 1
                                FEInterp(Eind, alphaind, thetaind, Qind, nn)= 0e0;
                            end
                        end
                    end
                end
            end
        end
    end
    
    clear FEnergy DNF DEF
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB
                % Pitch Angle Distributions [m^-3 eV^-1 sr^-1]
                FEnergy(:, :, :, Qind, nn)= ...
                    ((1e0/mion).*(sqrt(2e0.*EnergyGG(:, :, :)./mion)).* ...
                    FEInterp(:, :, :, Qind, nn))./(6.242e18);
                % Differential Number Flux [m^-2 s^-1 eV^-1 sr^-1]
                DNF(:, :, :, Qind, nn)= ...
                    ((2e0.*EnergyGG(:, :, :)./(mion^2e0)).* ...
                    FEInterp(:, :, :, Qind, nn))./(6.242e18);
                % Differential Energy Flux [eV m^-2 s^-1 eV^-1 sr^-1]
%                 DEF(:, :, :, Qind, nn)= ...
%                     (2e0.*(EnergyGG(:, :, :)).^2e0)./(mion^2e0).* ...
%                     FEInterp(:, :, :, Qind, nn);
                DEF(:, :, :, Qind, nn)= ...
                    (6.242e18).*EnergyGG(:, :, :).*DNF(:, :, :, Qind, nn);
                
            end
        end
    end
    
    % Compute Reduced Distributions
    clear FEnergyEnergyAlphaRed DNFEnergyAlphaRed DEFEnergyAlphaRed ...
        FEnergyEnergyThetaRed DNFEnergyThetaRed DEFEnergyThetaRed ...
        FEnergyAlphaThetaRed DNFAlphaThetaRed DEFAlphaThetaRed
    
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB
                for Eind= 1:1:NEG
                    for alphaind= 1:1:NalphaG
                        FEEnergyAlphaRed(Eind, alphaind, Qind, nn)= ...
                            sum(FEInterp(Eind, alphaind, :, Qind, nn));
                        FEnergyEnergyAlphaRed(Eind, alphaind, Qind, nn)= ...
                            sum(FEnergy(Eind, alphaind, :, Qind, nn));
                        DNFEnergyAlphaRed(Eind, alphaind, Qind, nn)= ...
                            sum(DNF(Eind, alphaind, :, Qind, nn));
                        DEFEnergyAlphaRed(Eind, alphaind, Qind, nn)= ...
                            sum(DEF(Eind, alphaind, :, Qind, nn));
                        
                        if Vlambdaflag == 1
                            if 1e0 <= alphaind & alphaind <= 18e0 % upwards 0-45degs
                                FEEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(FEInterp(Eind, alphaind, :, Qind, nn));
                                FEnergyEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(FEnergy(Eind, alphaind, :, Qind, nn));
                                DNFEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(DNF(Eind, alphaind, :, Qind, nn));
                                DEFEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(DEF(Eind, alphaind, :, Qind, nn));
                            end
                            if 18e0 < alphaind & alphaind < 53e0 % transverse 45-135degs
                                FEEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(FEInterp(Eind, alphaind, :, Qind, nn));
                                FEnergyEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(FEnergy(Eind, alphaind, :, Qind, nn));
                                DNFEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(DNF(Eind, alphaind, :, Qind, nn));
                                DEFEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(DEF(Eind, alphaind, :, Qind, nn));
                            end
                            if 53e0 <= alphaind & alphaind <= 70e0 % downwards 135-180degs
                                FEEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(FEInterp(Eind, alphaind, :, Qind, nn));
                                FEnergyEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(FEnergy(Eind, alphaind, :, Qind, nn));
                                DNFEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(DNF(Eind, alphaind, :, Qind, nn));
                                DEFEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(DEF(Eind, alphaind, :, Qind, nn));
                            end
                        end
                        if VPCflag == 1 | VWflag == 1
                            if 1e0 <= alphaind & alphaind <= 9e0 % upwards 0-30degs
                                FEEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(FEInterp(Eind, alphaind, :, Qind, nn));
                                FEnergyEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(FEnergy(Eind, alphaind, :, Qind, nn));
                                DNFEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(DNF(Eind, alphaind, :, Qind, nn));
                                DEFEnergyAlphaRedU(Eind, alphaind, Qind, nn)= ...
                                    sum(DEF(Eind, alphaind, :, Qind, nn));
                            end
                            if 17e0 < alphaind & alphaind < 34e0 % transverse 60-120degs
                                FEEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(FEInterp(Eind, alphaind, :, Qind, nn));
                                FEnergyEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(FEnergy(Eind, alphaind, :, Qind, nn));
                                DNFEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(DNF(Eind, alphaind, :, Qind, nn));
                                DEFEnergyAlphaRedT(Eind, alphaind, Qind, nn)= ...
                                    sum(DEF(Eind, alphaind, :, Qind, nn));
                            end
                            if 42e0 <= alphaind & alphaind <= 50e0 % downwards 150-180degs
                                FEEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(FEInterp(Eind, alphaind, :, Qind, nn));
                                FEnergyEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(FEnergy(Eind, alphaind, :, Qind, nn));
                                DNFEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(DNF(Eind, alphaind, :, Qind, nn));
                                DEFEnergyAlphaRedD(Eind, alphaind, Qind, nn)= ...
                                    sum(DEF(Eind, alphaind, :, Qind, nn));
                            end
                        end
                    end
                end
                for Eind= 1:1:NEG
                    for thetaind= 1:1:NthetaG
                        FEEnergyThetaRed(Eind, thetaind, Qind, nn)= ...
                            sum(FEInterp(Eind, :, thetaind, Qind, nn));
                        FEnergyEnergyThetaRed(Eind, thetaind, Qind, nn)= ...
                            sum(FEnergy(Eind, :, thetaind, Qind, nn));
                        DNFEnergyThetaRed(Eind, thetaind, Qind, nn)= ...
                            sum(DNF(Eind, :, thetaind, Qind, nn));
                        DEFEnergyThetaRed(Eind, thetaind, Qind, nn)= ...
                            sum(DEF(Eind, :, thetaind, Qind, nn));
                    end
                end
                for alphaind= 1:1:NalphaG
                    for thetaind= 1:1:NthetaG
                        FEAlphaThetaRed(alphaind, thetaind, Qind, nn)= ...
                            sum(FEInterp(:, alphaind, thetaind, Qind, nn));
                        FEnergyAlphaThetaRed(alphaind, thetaind, Qind, nn)= ...
                            sum(FEnergy(:, alphaind, thetaind, Qind, nn));
                        DNFAlphaThetaRed(alphaind, thetaind, Qind, nn)= ...
                            sum(DNF(:, alphaind, thetaind, Qind, nn));
                        DEFAlphaThetaRed(alphaind, thetaind, Qind, nn)= ...
                            sum(DEF(:, alphaind, thetaind, Qind, nn));
                    end
                end
            end
        end
    end
    
    % COMPUTE LINEAR INTERPOLATIONS OF DISTRIBUTION FUNCTIONS:
    
    % Set known points:
    [VparGCm1 Vperp1GCm1]= meshgrid(VparGCp, Vperp1GCp);
    [VparGCm2 Vperp2GCm2]= meshgrid(VparGCp, Vperp2GCp);
    [Vperp2GCm3 Vperp1GCm3]= meshgrid(Vperp2GCp, Vperp1GCp);
    
    % Set query points:
    NVperp1GCq= 1e2;
    NVperp2GCq= 1e2;
    NVparGCq= 1e2;
    Vperp1GCqq= linspace(Vperp1GCp(1), Vperp1GCp(end), NVperp1GCq);
    Vperp2GCqq= linspace(Vperp2GCp(1), Vperp2GCp(end), NVperp2GCq);
    VparGCqq= linspace(VparGCp(1), VparGCp(end), NVparGCq);
    
    [VparGCq1 Vperp1GCq1]= meshgrid(VparGCqq, Vperp1GCqq);
    [VparGCq2 Vperp2GCq2]= meshgrid(VparGCqq, Vperp2GCqq);
    [Vperp2GCq3 Vperp1GCq3]= meshgrid(Vperp2GCqq, Vperp1GCqq);
    
    clear FinterpIn FinterpOut
    for nn= 1:1:Nend
        if nn == 1 | nn == Nbeg | nn == Nend
            for Qind= NqLB:1:NqUB
                
                % Interpolate Raw Ion Counts:
                FinterpIn(:, :)= NReNormLogVperp1VparRed(:, :, Qind, nn);
                FinterpOut(:, :)= interpn(Vperp1GCm1, VparGCm1, FinterpIn, Vperp1GCq1, VparGCq1);
                NReNormLogVperp1VparRedInterp(:, :, Qind, nn)= FinterpOut(:, :);
                NReNormERRORLogVperp1VparRedInterp(:, :, Qind, nn)= ...
                    NReNormLogVperp1VparRedInterp(:, :, Qind, nn).^(-1e0/2e0);
                
                FinterpIn(:, :)= NReNormLogVperp2VparRed(:, :, Qind, nn);
                FinterpOut(:, :)= interpn(Vperp2GCm2, VparGCm2, FinterpIn, Vperp2GCq2, VparGCq2);
                NReNormLogVperp2VparRedInterp(:, :, Qind, nn)= FinterpOut(:, :);
                NReNormERRORLogVperp2VparRedInterp(:, :, Qind, nn)= ...
                    NReNormLogVperp2VparRedInterp(:, :, Qind, nn).^(-1e0/2e0);
                
                FinterpIn(:, :)= NReNormLogVperp1Vperp2Red(:, :, Qind, nn);
                FinterpOut(:, :)= interpn(Vperp1GCm3, Vperp2GCm3, FinterpIn, Vperp1GCq3, Vperp2GCq3);
                NReNormLogVperp1Vperp2RedInterp(:, :, Qind, nn)= FinterpOut(:, :);
                NReNormERRORLogVperp1Vperp2RedInterp(:, :, Qind, nn)= ...
                    NReNormLogVperp1Vperp2RedInterp(:, :, Qind, nn).^(-1e0/2e0);
                
                % Interpolate Distribution Functions:
                FinterpIn(:, :)= FLogVperp1VparRed(:, :, Qind, nn);
                FinterpOut(:, :)= interpn(Vperp1GCm1, VparGCm1, FinterpIn, Vperp1GCq1, VparGCq1);
                FLogVperp1VparRedInterp(:, :, Qind, nn)= FinterpOut(:, :);
                
                FinterpIn(:, :)= FLogVperp2VparRed(:, :, Qind, nn);
                FinterpOut(:, :)= interpn(Vperp2GCm2, VparGCm2, FinterpIn, Vperp2GCq2, VparGCq2);
                FLogVperp2VparRedInterp(:, :, Qind, nn)= FinterpOut(:, :);
                
                FinterpIn(:, :)= FLogVperp1Vperp2Red(:, :, Qind, nn);
                FinterpOut(:, :)= interpn(Vperp1GCm3, Vperp2GCm3, FinterpIn, Vperp1GCq3, Vperp2GCq3);
                FLogVperp1Vperp2RedInterp(:, :, Qind, nn)= FinterpOut(:, :);
                
            end
        end
    end
end

if Run == 1
    if Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1
        FEEnergyAlphaRedU1(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU1(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU1(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU1(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT1(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT1(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT1(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT1(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD1(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD1(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD1(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD1(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    TeNT1(:)= Rank(1).Specie(1).FluxTube(1).TeNT(:);
    EAMag1(:, :)= EAMagRTr(:, :);
    EPMag1(:, :)= EPMagRTr(:, :);
    EGMag1(:, :)= EGMagRTr(:, :);
    Dens1(:, :)= M0phRTr(:, :);
    UPar1(:, :)= M1ParphRTr(:, :);
    UPerp11(:, :)= M1Perp1phRTr(:, :);
    UPerp21(:, :)= M1Perp2phRTr(:, :);
    WPar1(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp11(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp21(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W1(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp1(:, :)= ParTemp(:, :);
    Perp1Temp1(:, :)= Perp1Temp(:, :);
    Perp2Temp1(:, :)= Perp2Temp(:, :);
    PerpTemp1(:, :)= PerpTemp(:, :);
    Temp1(:, :)= Temp(:, :);
    
    DensFiltAvrg1(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg1(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg1(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg1(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg1(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg1(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg1(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg1(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg1(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg1(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg1(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg1(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg1(:, :)= TempFiltAvrg(:, :);
    
    Ns1(:)= NsnRRT(:);
    rrAB1= rrAB;
    ndAB1= ndAB;
    Nbeg1= Nbeg;
    Nend1= Nend;
    TimeT1(:)= TimeT(:);
    
    FLogVperp1VparRed1(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed1(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red1(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp1(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp1(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp1(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed1(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed1(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed1(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed1(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed1(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed1(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed1(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed1(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed1(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed1(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed1(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed1(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG1(:, :)= fG(:, :);
end
if Run == 2
    if Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1
        FEEnergyAlphaRedU2(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU2(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU2(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU2(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT2(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT2(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT2(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT2(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD2(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD2(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD2(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD2(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    TeNT2(:)= Rank(1).Specie(1).FluxTube(1).TeNT(:);
    EAMag2(:, :)= EAMagRTr(:, :);
    EPMag2(:, :)= EPMagRTr(:, :);
    EGMag2(:, :)= EGMagRTr(:, :);
    Dens2(:, :)= M0phRTr(:, :);
    UPar2(:, :)= M1ParphRTr(:, :);
    UPerp12(:, :)= M1Perp1phRTr(:, :);
    UPerp22(:, :)= M1Perp2phRTr(:, :);
    WPar2(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp12(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp22(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W2(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp2(:, :)= ParTemp(:, :);
    Perp1Temp2(:, :)= Perp1Temp(:, :);
    Perp2Temp2(:, :)= Perp2Temp(:, :);
    PerpTemp2(:, :)= PerpTemp(:, :);
    Temp2(:, :)= Temp(:, :);
    
    DensFiltAvrg2(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg2(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg2(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg2(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg2(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg2(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg2(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg2(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg2(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg2(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg2(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg2(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg2(:, :)= TempFiltAvrg(:, :);
    
    Ns2(:)= NsnRRT(:);
    rrAB2= rrAB;
    ndAB2= ndAB;
    Nbeg2= Nbeg;
    Nend2= Nend;
    TimeT2(:)= TimeT(:);
    
    FLogVperp1VparRed2(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed2(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red2(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp2(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp2(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp2(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed2(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed2(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed2(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed2(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed2(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed2(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed2(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed2(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed2(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed2(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed2(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed2(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG2(:, :)= fG(:, :);
end
if Run == 3
    if Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1
        FEEnergyAlphaRedU3(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU3(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU3(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU3(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT3(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT3(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT3(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT3(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD3(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD3(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD3(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD3(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    TeNT3(:)= Rank(1).Specie(1).FluxTube(1).TeNT(:);
    EAMag3(:, :)= EAMagRTr(:, :);
    EPMag3(:, :)= EPMagRTr(:, :);
    EGMag3(:, :)= EGMagRTr(:, :);
    Dens3(:, :)= M0phRTr(:, :);
    UPar3(:, :)= M1ParphRTr(:, :);
    UPerp13(:, :)= M1Perp1phRTr(:, :);
    UPerp23(:, :)= M1Perp2phRTr(:, :);
    WPar3(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp13(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp23(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W3(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp3(:, :)= ParTemp(:, :);
    Perp1Temp3(:, :)= Perp1Temp(:, :);
    Perp2Temp3(:, :)= Perp2Temp(:, :);
    PerpTemp3(:, :)= PerpTemp(:, :);
    Temp3(:, :)= Temp(:, :);
    
    DensFiltAvrg3(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg3(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg3(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg3(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg3(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg3(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg3(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg3(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg3(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg3(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg3(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg3(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg3(:, :)= TempFiltAvrg(:, :);
    
    Ns3(:)= NsnRRT(:);
    rrAB3= rrAB;
    ndAB3= ndAB;
    Nbeg3= Nbeg;
    Nend3= Nend;
    TimeT3(:)= TimeT(:);
    
    FLogVperp1VparRed3(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed3(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red3(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp3(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp3(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp3(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed3(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed3(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed3(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed3(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed3(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed3(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed3(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed3(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed3(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed3(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed3(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed3(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG3(:, :)= fG(:, :);
end
if Run == 4
    if Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1
        FEEnergyAlphaRedU4(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU4(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU4(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU4(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT4(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT4(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT4(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT4(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD4(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD4(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD4(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD4(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    TeNT4(:)= Rank(1).Specie(1).FluxTube(1).TeNT(:);
    EAMag4(:, :)= EAMagRTr(:, :);
    EPMag4(:, :)= EPMagRTr(:, :);
    EGMag4(:, :)= EGMagRTr(:, :);
    Dens4(:, :)= M0phRTr(:, :);
    UPar4(:, :)= M1ParphRTr(:, :);
    UPerp14(:, :)= M1Perp1phRTr(:, :);
    UPerp24(:, :)= M1Perp2phRTr(:, :);
    WPar4(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp14(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp24(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W4(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp4(:, :)= ParTemp(:, :);
    Perp1Temp4(:, :)= Perp1Temp(:, :);
    Perp2Temp4(:, :)= Perp2Temp(:, :);
    PerpTemp4(:, :)= PerpTemp(:, :);
    Temp4(:, :)= Temp(:, :);
    
    DensFiltAvrg4(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg4(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg4(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg4(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg4(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg4(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg4(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg4(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg4(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg4(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg4(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg4(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg4(:, :)= TempFiltAvrg(:, :);
    
    Ns4(:)= NsnRRT(:);
    rrAB4= rrAB;
    ndAB4= ndAB;
    Nbeg4= Nbeg;
    Nend4= Nend;
    TimeT4(:)= TimeT(:);
    
    FLogVperp1VparRed4(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed4(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red4(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp4(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp4(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp4(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed4(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed4(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed4(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed4(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed4(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed4(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed4(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed4(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed4(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed4(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed4(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed4(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG4(:, :)= fG(:, :);
end
if Run == 5
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU5(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU5(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU5(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU5(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT5(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT5(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT5(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT5(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD5(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD5(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD5(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD5(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    TeNT5(:)= Rank(1).Specie(1).FluxTube(1).TeNT(:);
    EAMag5(:, :)= EAMagRTr(:, :);
    EPMag5(:, :)= EPMagRTr(:, :);
    EGMag5(:, :)= EGMagRTr(:, :);
    Dens5(:, :)= M0phRTr(:, :);
    UPar5(:, :)= M1ParphRTr(:, :);
    UPerp15(:, :)= M1Perp1phRTr(:, :);
    UPerp25(:, :)= M1Perp2phRTr(:, :);
    WPar5(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp15(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp25(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W5(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp5(:, :)= ParTemp(:, :);
    Perp1Temp5(:, :)= Perp1Temp(:, :);
    Perp2Temp5(:, :)= Perp2Temp(:, :);
    PerpTemp5(:, :)= PerpTemp(:, :);
    Temp5(:, :)= Temp(:, :);
    
    DensFiltAvrg5(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg5(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg5(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg5(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg5(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg5(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg5(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg5(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg5(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg5(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg5(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg5(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg5(:, :)= TempFiltAvrg(:, :);
    
    Ns5(:)= NsnRRT(:);
    rrAB5= rrAB;
    ndAB5= ndAB;
    Nbeg5= Nbeg;
    Nend5= Nend;
    TimeT5(:)= TimeT(:);
    
    FLogVperp1VparRed5(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed5(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red5(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp5(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp5(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp5(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed5(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed5(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed5(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed5(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed5(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed5(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed5(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed5(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed5(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed5(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed5(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed5(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG5(:, :)= fG(:, :);
end
if Run == 6
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU6(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU6(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU6(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU6(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT6(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT6(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT6(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT6(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD6(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD6(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD6(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD6(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    TeNT6(:)= Rank(1).Specie(1).FluxTube(1).TeNT(:);
    EAMag6(:, :)= EAMagRTr(:, :);
    EPMag6(:, :)= EPMagRTr(:, :);
    EGMag6(:, :)= EGMagRTr(:, :);
    Dens6(:, :)= M0phRTr(:, :);
    UPar6(:, :)= M1ParphRTr(:, :);
    UPerp16(:, :)= M1Perp1phRTr(:, :);
    UPerp26(:, :)= M1Perp2phRTr(:, :);
    WPar6(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp16(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp26(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W6(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp6(:, :)= ParTemp(:, :);
    Perp1Temp6(:, :)= Perp1Temp(:, :);
    Perp2Temp6(:, :)= Perp2Temp(:, :);
    PerpTemp6(:, :)= PerpTemp(:, :);
    Temp6(:, :)= Temp(:, :);
    
    DensFiltAvrg6(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg6(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg6(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg6(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg6(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg6(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg6(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg6(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg6(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg6(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg6(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg6(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg6(:, :)= TempFiltAvrg(:, :);
    
    Ns6(:)= NsnRRT(:);
    rrAB6= rrAB;
    ndAB6= ndAB;
    Nbeg6= Nbeg;
    Nend6= Nend;
    TimeT6(:)= TimeT(:);
    
    FLogVperp1VparRed6(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed6(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red6(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp6(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp6(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp6(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed6(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed6(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed6(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed6(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed6(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed6(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed6(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed6(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed6(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed6(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed6(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed6(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG6(:, :)= fG(:, :);
end
if Run == 7
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU7(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU7(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU7(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU7(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT7(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT7(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT7(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT7(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD7(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD7(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD7(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD7(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag7(:, :)= EAMagRTr(:, :);
    EPMag7(:, :)= EPMagRTr(:, :);
    EGMag7(:, :)= EGMagRTr(:, :);
    Dens7(:, :)= M0phRTr(:, :);
    UPar7(:, :)= M1ParphRTr(:, :);
    UPerp17(:, :)= M1Perp1phRTr(:, :);
    UPerp27(:, :)= M1Perp2phRTr(:, :);
    WPar7(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp17(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp27(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W7(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp7(:, :)= ParTemp(:, :);
    Perp1Temp7(:, :)= Perp1Temp(:, :);
    Perp2Temp7(:, :)= Perp2Temp(:, :);
    PerpTemp7(:, :)= PerpTemp(:, :);
    Temp7(:, :)= Temp(:, :);
    
    DensFiltAvrg7(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg7(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg7(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg7(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg7(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg7(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg7(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg7(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg7(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg7(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg7(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg7(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg7(:, :)= TempFiltAvrg(:, :);
    
    Ns7(:)= NsnRRT(:);
    rrAB7= rrAB;
    ndAB7= ndAB;
    Nbeg7= Nbeg;
    Nend7= Nend;
    TimeT7(:)= TimeT(:);
    
    FLogVperp1VparRed7(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed7(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red7(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp7(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp7(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp7(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed7(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed7(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed7(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed7(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed7(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed7(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed7(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed7(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed7(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed7(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed7(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed7(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG7(:, :)= fG(:, :);
end
if Run == 8
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU8(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU8(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU8(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU8(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT8(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT8(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT8(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT8(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD8(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD8(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD8(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD8(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag8(:, :)= EAMagRTr(:, :);
    EPMag8(:, :)= EPMagRTr(:, :);
    EGMag8(:, :)= EGMagRTr(:, :);
    Dens8(:, :)= M0phRTr(:, :);
    UPar8(:, :)= M1ParphRTr(:, :);
    UPerp18(:, :)= M1Perp1phRTr(:, :);
    UPerp28(:, :)= M1Perp2phRTr(:, :);
    WPar8(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp18(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp28(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W8(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp8(:, :)= ParTemp(:, :);
    Perp1Temp8(:, :)= Perp1Temp(:, :);
    Perp2Temp8(:, :)= Perp2Temp(:, :);
    PerpTemp8(:, :)= PerpTemp(:, :);
    Temp8(:, :)= Temp(:, :);
    
    DensFiltAvrg8(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg8(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg8(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg8(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg8(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg8(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg8(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg8(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg8(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg8(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg8(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg8(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg8(:, :)= TempFiltAvrg(:, :);
    
    Ns8(:)= NsnRRT(:);
    rrAB8= rrAB;
    ndAB8= ndAB;
    Nbeg8= Nbeg;
    Nend8= Nend;
    TimeT8(:)= TimeT(:);
    
    FLogVperp1VparRed8(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed8(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red8(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp8(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp8(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp8(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed8(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed8(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed8(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed8(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed8(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed8(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed8(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed8(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed8(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed8(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed8(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed8(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG8(:, :)= fG(:, :);
end
if Run == 9
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU9(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU9(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU9(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU9(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT9(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT9(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT9(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT9(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD9(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD9(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD9(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD9(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag9(:, :)= EAMagRTr(:, :);
    EPMag9(:, :)= EPMagRTr(:, :);
    EGMag9(:, :)= EGMagRTr(:, :);
    Dens9(:, :)= M0phRTr(:, :);
    UPar9(:, :)= M1ParphRTr(:, :);
    UPerp19(:, :)= M1Perp1phRTr(:, :);
    UPerp29(:, :)= M1Perp2phRTr(:, :);
    WPar9(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp19(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp29(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W9(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp9(:, :)= ParTemp(:, :);
    Perp1Temp9(:, :)= Perp1Temp(:, :);
    Perp2Temp9(:, :)= Perp2Temp(:, :);
    PerpTemp9(:, :)= PerpTemp(:, :);
    Temp9(:, :)= Temp(:, :);
    
    DensFiltAvrg9(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg9(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg9(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg9(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg9(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg9(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg9(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg9(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg9(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg9(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg9(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg9(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg9(:, :)= TempFiltAvrg(:, :);
    
    Ns9(:)= NsnRRT(:);
    rrAB9= rrAB;
    ndAB9= ndAB;
    Nbeg9= Nbeg;
    Nend9= Nend;
    TimeT9(:)= TimeT(:);
    
    FLogVperp1VparRed9(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed9(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red9(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp9(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp9(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp9(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed9(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed9(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed9(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed9(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed9(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed9(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed9(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed9(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed9(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed9(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed9(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed9(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG9(:, :)= fG(:, :);
end
if Run == 10
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU10(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU10(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU10(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU10(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT10(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT10(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT10(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT10(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD10(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD10(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD10(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD10(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag10(:, :)= EAMagRTr(:, :);
    EPMag10(:, :)= EPMagRTr(:, :);
    EGMag10(:, :)= EGMagRTr(:, :);
    Dens10(:, :)= M0phRTr(:, :);
    UPar10(:, :)= M1ParphRTr(:, :);
    UPerp110(:, :)= M1Perp1phRTr(:, :);
    UPerp210(:, :)= M1Perp2phRTr(:, :);
    WPar10(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp110(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp210(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W10(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp10(:, :)= ParTemp(:, :);
    Perp1Temp10(:, :)= Perp1Temp(:, :);
    Perp2Temp10(:, :)= Perp2Temp(:, :);
    PerpTemp10(:, :)= PerpTemp(:, :);
    Temp10(:, :)= Temp(:, :);
    
    DensFiltAvrg10(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg10(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg10(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg10(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg10(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg10(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg10(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg10(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg10(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg10(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg10(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg10(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg10(:, :)= TempFiltAvrg(:, :);
    
    Ns10(:)= NsnRRT(:);
    rrAB10= rrAB;
    ndAB10= ndAB;
    Nbeg10= Nbeg;
    Nend10= Nend;
    TimeT10(:)= TimeT(:);
    
    FLogVperp1VparRed10(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed10(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red10(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp10(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp10(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp10(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed10(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed10(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed10(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed10(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed10(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed10(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed10(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed10(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed10(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed10(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed10(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed10(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG10(:, :)= fG(:, :);
end
if Run == 11
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU11(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU11(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU11(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU11(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT11(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT11(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT11(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT11(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD11(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD11(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD11(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD11(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag11(:, :)= EAMagRTr(:, :);
    EPMag11(:, :)= EPMagRTr(:, :);
    EGMag11(:, :)= EGMagRTr(:, :);
    Dens11(:, :)= M0phRTr(:, :);
    UPar11(:, :)= M1ParphRTr(:, :);
    UPerp111(:, :)= M1Perp1phRTr(:, :);
    UPerp211(:, :)= M1Perp2phRTr(:, :);
    WPar11(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp111(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp211(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W11(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp11(:, :)= ParTemp(:, :);
    Perp1Temp11(:, :)= Perp1Temp(:, :);
    Perp2Temp11(:, :)= Perp2Temp(:, :);
    PerpTemp11(:, :)= PerpTemp(:, :);
    Temp11(:, :)= Temp(:, :);
    
    DensFiltAvrg11(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg11(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg11(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg11(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg11(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg11(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg11(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg11(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg11(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg11(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg11(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg11(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg11(:, :)= TempFiltAvrg(:, :);
    
    Ns11(:)= NsnRRT(:);
    rrAB11= rrAB;
    ndAB11= ndAB;
    Nbeg11= Nbeg;
    Nend11= Nend;
    TimeT11(:)= TimeT(:);
    
    FLogVperp1VparRed11(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed11(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red11(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp11(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp11(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp11(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed11(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed11(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed11(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed11(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed11(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed11(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed11(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed11(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed11(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed11(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed11(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed11(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG11(:, :)= fG(:, :);
end
if Run == 12
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU12(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU12(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU12(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU12(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT12(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT12(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT12(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT12(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD12(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD12(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD12(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD12(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag12(:, :)= EAMagRTr(:, :);
    EPMag12(:, :)= EPMagRTr(:, :);
    EGMag12(:, :)= EGMagRTr(:, :);
    Dens12(:, :)= M0phRTr(:, :);
    UPar12(:, :)= M1ParphRTr(:, :);
    UPerp112(:, :)= M1Perp1phRTr(:, :);
    UPerp212(:, :)= M1Perp2phRTr(:, :);
    WPar12(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp112(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp212(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W12(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp12(:, :)= ParTemp(:, :);
    Perp1Temp12(:, :)= Perp1Temp(:, :);
    Perp2Temp12(:, :)= Perp2Temp(:, :);
    PerpTemp12(:, :)= PerpTemp(:, :);
    Temp12(:, :)= Temp(:, :);
    
    DensFiltAvrg12(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg12(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg12(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg12(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg12(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg12(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg12(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg12(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg12(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg12(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg12(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg12(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg12(:, :)= TempFiltAvrg(:, :);
    
    Ns12(:)= NsnRRT(:);
    rrAB12= rrAB;
    ndAB12= ndAB;
    Nbeg12= Nbeg;
    Nend12= Nend;
    TimeT12(:)= TimeT(:);
    
    FLogVperp1VparRed12(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed12(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red12(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp12(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp12(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp12(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed12(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed12(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed12(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed12(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed12(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed12(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed12(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed12(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed12(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed12(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed12(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed12(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG12(:, :)= fG(:, :);
end
if Run == 13
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU13(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU13(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU13(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU13(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT13(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT13(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT13(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT13(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD13(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD13(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD13(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD13(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag13(:, :)= EAMagRTr(:, :);
    EPMag13(:, :)= EPMagRTr(:, :);
    EGMag13(:, :)= EGMagRTr(:, :);
    Dens13(:, :)= M0phRTr(:, :);
    UPar13(:, :)= M1ParphRTr(:, :);
    UPerp113(:, :)= M1Perp1phRTr(:, :);
    UPerp213(:, :)= M1Perp2phRTr(:, :);
    WPar13(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp113(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp213(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W13(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp13(:, :)= ParTemp(:, :);
    Perp1Temp13(:, :)= Perp1Temp(:, :);
    Perp2Temp13(:, :)= Perp2Temp(:, :);
    PerpTemp13(:, :)= PerpTemp(:, :);
    Temp13(:, :)= Temp(:, :);
    
    DensFiltAvrg13(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg13(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg13(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg13(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg13(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg13(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg13(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg13(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg13(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg13(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg13(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg13(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg13(:, :)= TempFiltAvrg(:, :);
    
    Ns13(:)= NsnRRT(:);
    rrAB13= rrAB;
    ndAB13= ndAB;
    Nbeg13= Nbeg;
    Nend13= Nend;
    TimeT13(:)= TimeT(:);
    
    FLogVperp1VparRed13(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed13(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red13(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp13(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp13(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp13(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed13(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed13(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed13(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed13(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed13(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed13(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed13(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed13(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed13(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed13(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed13(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed13(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG13(:, :)= fG(:, :);
end
if Run == 14
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU14(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU14(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU14(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU14(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT14(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT14(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT14(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT14(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD14(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD14(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD14(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD14(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag14(:, :)= EAMagRTr(:, :);
    EPMag14(:, :)= EPMagRTr(:, :);
    EGMag14(:, :)= EGMagRTr(:, :);
    Dens14(:, :)= M0phRTr(:, :);
    UPar14(:, :)= M1ParphRTr(:, :);
    UPerp114(:, :)= M1Perp1phRTr(:, :);
    UPerp214(:, :)= M1Perp2phRTr(:, :);
    WPar14(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp114(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp214(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W14(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp14(:, :)= ParTemp(:, :);
    Perp1Temp14(:, :)= Perp1Temp(:, :);
    Perp2Temp14(:, :)= Perp2Temp(:, :);
    PerpTemp14(:, :)= PerpTemp(:, :);
    Temp14(:, :)= Temp(:, :);
    
    DensFiltAvrg14(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg14(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg14(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg14(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg14(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg14(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg14(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg14(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg14(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg14(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg14(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg14(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg14(:, :)= TempFiltAvrg(:, :);
    
    Ns14(:)= NsnRRT(:);
    rrAB14= rrAB;
    ndAB14= ndAB;
    Nbeg14= Nbeg;
    Nend14= Nend;
    TimeT14(:)= TimeT(:);
    
    FLogVperp1VparRed14(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed14(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red14(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp14(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp14(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp14(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed14(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed14(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed14(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed14(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed14(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed14(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed14(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed14(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed14(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed14(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed14(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed14(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG14(:, :)= fG(:, :);
end
if Run == 15
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU15(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU15(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU15(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU15(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT15(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT15(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT15(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT15(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD15(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD15(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD15(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD15(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag15(:, :)= EAMagRTr(:, :);
    EPMag15(:, :)= EPMagRTr(:, :);
    EGMag15(:, :)= EGMagRTr(:, :);
    Dens15(:, :)= M0phRTr(:, :);
    UPar15(:, :)= M1ParphRTr(:, :);
    UPerp115(:, :)= M1Perp1phRTr(:, :);
    UPerp215(:, :)= M1Perp2phRTr(:, :);
    WPar15(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp115(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp215(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W15(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp15(:, :)= ParTemp(:, :);
    Perp1Temp15(:, :)= Perp1Temp(:, :);
    Perp2Temp15(:, :)= Perp2Temp(:, :);
    PerpTemp15(:, :)= PerpTemp(:, :);
    Temp15(:, :)= Temp(:, :);
    
    DensFiltAvrg15(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg15(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg15(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg15(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg15(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg15(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg15(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg15(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg15(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg15(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg15(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg15(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg15(:, :)= TempFiltAvrg(:, :);
    
    Ns15(:)= NsnRRT(:);
    rrAB15= rrAB;
    ndAB15= ndAB;
    Nbeg15= Nbeg;
    Nend15= Nend;
    TimeT15(:)= TimeT(:);
    
    FLogVperp1VparRed15(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed15(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red15(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp15(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp15(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp15(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed15(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed15(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed15(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed15(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed15(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed15(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed15(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed15(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed15(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed15(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed15(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed15(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG15(:, :)= fG(:, :);
end
if Run == 16 
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU16(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU16(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU16(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU16(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT16(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT16(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT16(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT16(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD16(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD16(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD16(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD16(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag16(:, :)= EAMagRTr(:, :);
    EPMag16(:, :)= EPMagRTr(:, :);
    EGMag16(:, :)= EGMagRTr(:, :);
    Dens16(:, :)= M0phRTr(:, :);
    UPar16(:, :)= M1ParphRTr(:, :);
    UPerp116(:, :)= M1Perp1phRTr(:, :);
    UPerp216(:, :)= M1Perp2phRTr(:, :);
    WPar16(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp116(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp216(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W16(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp16(:, :)= ParTemp(:, :);
    Perp1Temp16(:, :)= Perp1Temp(:, :);
    Perp2Temp16(:, :)= Perp2Temp(:, :);
    PerpTemp16(:, :)= PerpTemp(:, :);
    Temp16(:, :)= Temp(:, :);
    
    DensFiltAvrg16(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg16(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg16(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg16(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg16(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg16(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg16(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg16(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg16(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg16(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg16(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg16(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg16(:, :)= TempFiltAvrg(:, :);
    
    Ns16(:)= NsnRRT(:);
    rrAB16= rrAB;
    ndAB16= ndAB;
    Nbeg16= Nbeg;
    Nend16= Nend;
    TimeT16(:)= TimeT(:);
    
    FLogVperp1VparRed16(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed16(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red16(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp16(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp16(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp16(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed16(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed16(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed16(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed16(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed16(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed16(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed16(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed16(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed16(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed16(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed16(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed16(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG16(:, :)= fG(:, :);
end
if Run == 17
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU17(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU17(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU17(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU17(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT17(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT17(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT17(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT17(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD17(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD17(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD17(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD17(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag17(:, :)= EAMagRTr(:, :);
    EPMag17(:, :)= EPMagRTr(:, :);
    EGMag17(:, :)= EGMagRTr(:, :);
    Dens17(:, :)= M0phRTr(:, :);
    UPar17(:, :)= M1ParphRTr(:, :);
    UPerp117(:, :)= M1Perp1phRTr(:, :);
    UPerp217(:, :)= M1Perp2phRTr(:, :);
    WPar17(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp117(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp217(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W17(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp17(:, :)= ParTemp(:, :);
    Perp1Temp17(:, :)= Perp1Temp(:, :);
    Perp2Temp17(:, :)= Perp2Temp(:, :);
    PerpTemp17(:, :)= PerpTemp(:, :);
    Temp17(:, :)= Temp(:, :);
    
    DensFiltAvrg17(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg17(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg17(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg17(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg17(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg17(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg17(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg17(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg17(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg17(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg17(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg17(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg17(:, :)= TempFiltAvrg(:, :);
    
    Ns17(:)= NsnRRT(:);
    rrAB17= rrAB;
    ndAB17= ndAB;
    Nbeg17= Nbeg;
    Nend17= Nend;
    TimeT17(:)= TimeT(:);
    
    FLogVperp1VparRed17(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed17(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red17(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp17(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp17(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp17(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed17(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed17(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed17(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed17(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed17(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed17(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed17(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed17(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed17(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed17(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed17(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed17(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG17(:, :)= fG(:, :);
end
if Run == 18
    if Vlambdaflag == 1 | VPCflag == 1
        FEEnergyAlphaRedU18(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU18(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU18(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU18(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT18(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT18(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT18(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT18(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD18(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD18(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD18(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD18(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag18(:, :)= EAMagRTr(:, :);
    EPMag18(:, :)= EPMagRTr(:, :);
    EGMag18(:, :)= EGMagRTr(:, :);
    Dens18(:, :)= M0phRTr(:, :);
    UPar18(:, :)= M1ParphRTr(:, :);
    UPerp118(:, :)= M1Perp1phRTr(:, :);
    UPerp218(:, :)= M1Perp2phRTr(:, :);
    WPar18(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp118(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp218(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W18(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp18(:, :)= ParTemp(:, :);
    Perp1Temp18(:, :)= Perp1Temp(:, :);
    Perp2Temp18(:, :)= Perp2Temp(:, :);
    PerpTemp18(:, :)= PerpTemp(:, :);
    Temp18(:, :)= Temp(:, :);
    
    DensFiltAvrg18(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg18(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg18(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg18(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg18(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg18(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg18(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg18(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg18(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg18(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg18(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg18(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg18(:, :)= TempFiltAvrg(:, :);
    
    Ns18(:)= NsnRRT(:);
    rrAB18= rrAB;
    ndAB18= ndAB;
    Nbeg18= Nbeg;
    Nend18= Nend;
    TimeT18(:)= TimeT(:);
    
    FLogVperp1VparRed18(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed18(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red18(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp18(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp18(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp18(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed18(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed18(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed18(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed18(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed18(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed18(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed18(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed18(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed18(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed18(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed18(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed18(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG18(:, :)= fG(:, :);
end
if Run == 19
    if Vlambdaflag == 1
        FEEnergyAlphaRedU19(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU19(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU19(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU19(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT19(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT19(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT19(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT19(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD19(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD19(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD19(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD19(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag19(:, :)= EAMagRTr(:, :);
    EPMag19(:, :)= EPMagRTr(:, :);
    EGMag19(:, :)= EGMagRTr(:, :);
    Dens19(:, :)= M0phRTr(:, :);
    UPar19(:, :)= M1ParphRTr(:, :);
    UPerp119(:, :)= M1Perp1phRTr(:, :);
    UPerp219(:, :)= M1Perp2phRTr(:, :);
    WPar19(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp119(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp219(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W19(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp19(:, :)= ParTemp(:, :);
    Perp1Temp19(:, :)= Perp1Temp(:, :);
    Perp2Temp19(:, :)= Perp2Temp(:, :);
    PerpTemp19(:, :)= PerpTemp(:, :);
    Temp19(:, :)= Temp(:, :);
    
    DensFiltAvrg19(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg19(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg19(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg19(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg19(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg19(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg19(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg19(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg19(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg19(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg19(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg19(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg19(:, :)= TempFiltAvrg(:, :);
    
    Ns19(:)= NsnRRT(:);
    rrAB19= rrAB;
    ndAB19= ndAB;
    Nbeg19= Nbeg;
    Nend19= Nend;
    TimeT19(:)= TimeT(:);
    
    FLogVperp1VparRed19(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed19(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red19(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp19(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp19(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp19(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed19(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed19(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed19(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed19(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed19(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed19(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed19(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed19(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed19(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed19(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed19(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed19(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG19(:, :)= fG(:, :);
end
if Run == 20
    if Vlambdaflag == 1
        FEEnergyAlphaRedU20(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU20(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU20(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU20(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT20(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT20(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT20(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT20(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD20(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD20(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD20(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD20(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag20(:, :)= EAMagRTr(:, :);
    EPMag20(:, :)= EPMagRTr(:, :);
    EGMag20(:, :)= EGMagRTr(:, :);
    Dens20(:, :)= M0phRTr(:, :);
    UPar20(:, :)= M1ParphRTr(:, :);
    UPerp120(:, :)= M1Perp1phRTr(:, :);
    UPerp220(:, :)= M1Perp2phRTr(:, :);
    WPar20(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp120(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp220(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W20(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp20(:, :)= ParTemp(:, :);
    Perp1Temp20(:, :)= Perp1Temp(:, :);
    Perp2Temp20(:, :)= Perp2Temp(:, :);
    PerpTemp20(:, :)= PerpTemp(:, :);
    Temp20(:, :)= Temp(:, :);
    
    DensFiltAvrg20(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg20(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg20(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg20(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg20(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg20(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg20(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg20(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg20(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg20(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg20(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg20(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg20(:, :)= TempFiltAvrg(:, :);
    
    Ns20(:)= NsnRRT(:);
    rrAB20= rrAB;
    ndAB20= ndAB;
    Nbeg20= Nbeg;
    Nend20= Nend;
    TimeT20(:)= TimeT(:);
    
    FLogVperp1VparRed20(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed20(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red20(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp20(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp20(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp20(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed20(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed20(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed20(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed20(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed20(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed20(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed20(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed20(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed20(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed20(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed20(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed20(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG20(:, :)= fG(:, :);
end
if Run == 21
    if Vlambdaflag == 1
        FEEnergyAlphaRedU21(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU21(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU21(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU21(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT21(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT21(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT21(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT21(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD21(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD21(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD21(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD21(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag21(:, :)= EAMagRTr(:, :);
    EPMag21(:, :)= EPMagRTr(:, :);
    EGMag21(:, :)= EGMagRTr(:, :);
    Dens21(:, :)= M0phRTr(:, :);
    UPar21(:, :)= M1ParphRTr(:, :);
    UPerp121(:, :)= M1Perp1phRTr(:, :);
    UPerp221(:, :)= M1Perp2phRTr(:, :);
    WPar21(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp121(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp221(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W21(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp21(:, :)= ParTemp(:, :);
    Perp1Temp21(:, :)= Perp1Temp(:, :);
    Perp2Temp21(:, :)= Perp2Temp(:, :);
    PerpTemp21(:, :)= PerpTemp(:, :);
    Temp21(:, :)= Temp(:, :);
    
    DensFiltAvrg21(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg21(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg21(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg21(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg21(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg21(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg21(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg21(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg21(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg21(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg21(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg21(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg21(:, :)= TempFiltAvrg(:, :);
    
    Ns21(:)= NsnRRT(:);
    rrAB21= rrAB;
    ndAB21= ndAB;
    Nbeg21= Nbeg;
    Nend21= Nend;
    TimeT21(:)= TimeT(:);
    
    FLogVperp1VparRed21(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed21(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red21(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp21(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp21(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp21(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed21(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed21(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed21(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed21(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed21(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed21(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed21(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed21(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed21(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed21(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed21(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed21(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG21(:, :)= fG(:, :);
end
if Run == 22
    if Vlambdaflag == 1
        FEEnergyAlphaRedU22(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU22(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU22(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU22(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT22(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT22(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT22(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT22(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD22(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD22(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD22(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD22(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag22(:, :)= EAMagRTr(:, :);
    EPMag22(:, :)= EPMagRTr(:, :);
    EGMag22(:, :)= EGMagRTr(:, :);
    Dens22(:, :)= M0phRTr(:, :);
    UPar22(:, :)= M1ParphRTr(:, :);
    UPerp122(:, :)= M1Perp1phRTr(:, :);
    UPerp222(:, :)= M1Perp2phRTr(:, :);
    WPar22(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp122(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp222(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W22(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp22(:, :)= ParTemp(:, :);
    Perp1Temp22(:, :)= Perp1Temp(:, :);
    Perp2Temp22(:, :)= Perp2Temp(:, :);
    PerpTemp22(:, :)= PerpTemp(:, :);
    Temp22(:, :)= Temp(:, :);
    
    DensFiltAvrg22(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg22(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg22(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg22(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg22(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg22(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg22(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg22(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg22(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg22(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg22(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg22(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg22(:, :)= TempFiltAvrg(:, :);
    
    Ns22(:)= NsnRRT(:);
    rrAB22= rrAB;
    ndAB22= ndAB;
    Nbeg22= Nbeg;
    Nend22= Nend;
    TimeT22(:)= TimeT(:);
    
    FLogVperp1VparRed22(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed22(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red22(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp22(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp22(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp22(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed22(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed22(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed22(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed22(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed22(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed22(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed22(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed22(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed22(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed22(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed22(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed22(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG22(:, :)= fG(:, :);
end
if Run == 23
    if Vlambdaflag == 1
        FEEnergyAlphaRedU23(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU23(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU23(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU23(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT23(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT23(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT23(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT23(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD23(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD23(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD23(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD23(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag23(:, :)= EAMagRTr(:, :);
    EPMag23(:, :)= EPMagRTr(:, :);
    EGMag23(:, :)= EGMagRTr(:, :);
    Dens23(:, :)= M0phRTr(:, :);
    UPar23(:, :)= M1ParphRTr(:, :);
    UPerp123(:, :)= M1Perp1phRTr(:, :);
    UPerp223(:, :)= M1Perp2phRTr(:, :);
    WPar23(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp123(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp223(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W23(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp23(:, :)= ParTemp(:, :);
    Perp1Temp23(:, :)= Perp1Temp(:, :);
    Perp2Temp23(:, :)= Perp2Temp(:, :);
    PerpTemp23(:, :)= PerpTemp(:, :);
    Temp23(:, :)= Temp(:, :);
    
    DensFiltAvrg23(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg23(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg23(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg23(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg23(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg23(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg23(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg23(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg23(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg23(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg23(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg23(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg23(:, :)= TempFiltAvrg(:, :);
    
    Ns23(:)= NsnRRT(:);
    rrAB23= rrAB;
    ndAB23= ndAB;
    Nbeg23= Nbeg;
    Nend23= Nend;
    TimeT23(:)= TimeT(:);
    
    FLogVperp1VparRed23(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed23(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red23(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp23(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp23(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp23(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed23(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed23(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed23(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed23(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed23(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed23(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed23(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed23(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed23(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed23(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed23(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed23(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG23(:, :)= fG(:, :);
end
if Run == 24
    if Vlambdaflag == 1
        FEEnergyAlphaRedU24(:, :, :, :)= FEEnergyAlphaRedU(:, :, :, :);
        FEnergyEnergyAlphaRedU24(:, :, :, :)= FEnergyEnergyAlphaRedU(:, :, :, :);
        DNFEnergyAlphaRedU24(:, :, :, :)= DNFEnergyAlphaRedU(:, :, :, :);
        DEFEnergyAlphaRedU24(:, :, :, :)= DEFEnergyAlphaRedU(:, :, :, :);
        FEEnergyAlphaRedT24(:, :, :, :)= FEEnergyAlphaRedT(:, :, :, :);
        FEnergyEnergyAlphaRedT24(:, :, :, :)= FEnergyEnergyAlphaRedT(:, :, :, :);
        DNFEnergyAlphaRedT24(:, :, :, :)= DNFEnergyAlphaRedT(:, :, :, :);
        DEFEnergyAlphaRedT24(:, :, :, :)= DEFEnergyAlphaRedT(:, :, :, :);
        FEEnergyAlphaRedD24(:, :, :, :)= FEEnergyAlphaRedD(:, :, :, :);
        FEnergyEnergyAlphaRedD24(:, :, :, :)= FEnergyEnergyAlphaRedD(:, :, :, :);
        DNFEnergyAlphaRedD24(:, :, :, :)= DNFEnergyAlphaRedD(:, :, :, :);
        DEFEnergyAlphaRedD24(:, :, :, :)= DEFEnergyAlphaRedD(:, :, :, :);
    end
    EAMag24(:, :)= EAMagRTr(:, :);
    EPMag24(:, :)= EPMagRTr(:, :);
    EGMag24(:, :)= EGMagRTr(:, :);
    Dens24(:, :)= M0phRTr(:, :);
    UPar24(:, :)= M1ParphRTr(:, :);
    UPerp124(:, :)= M1Perp1phRTr(:, :);
    UPerp224(:, :)= M1Perp2phRTr(:, :);
    WPar24(:, :)= (6.242e18).*M2ParphRTr(:, :);
    WPerp124(:, :)= (6.242e18).*M2Perp1phRTr(:, :);
    WPerp224(:, :)= (6.242e18).*M2Perp2phRTr(:, :);
    W24(:, :)= (6.242e18).*M2phRTr(:, :);
    ParTemp24(:, :)= ParTemp(:, :);
    Perp1Temp24(:, :)= Perp1Temp(:, :);
    Perp2Temp24(:, :)= Perp2Temp(:, :);
    PerpTemp24(:, :)= PerpTemp(:, :);
    Temp24(:, :)= Temp(:, :);
    
    DensFiltAvrg24(:, :)= M0FiltAvrgRTr(:, :);
    UParFiltAvrg24(:, :)= M1ParFiltAvrgRTr(:, :);
    UPerp1FiltAvrg24(:, :)= M1Perp1FiltAvrg(:, :);
    UPerp2FiltAvrg24(:, :)= M1Perp2FiltAvrg(:, :);
    WParFiltAvrg24(:, :)= (6.242e18).*M2ParFiltAvrg(:, :);
    WPerp1FiltAvrg24(:, :)= (6.242e18).*M2Perp1FiltAvrg(:, :);
    WPerp2FiltAvrg24(:, :)= (6.242e18).*M2Perp2FiltAvrg(:, :);
    WFiltAvrg24(:, :)= (6.242e18).*M2FiltAvrg(:, :);
    ParTempFiltAvrg24(:, :)= ParTempFiltAvrg(:, :);
    Perp1TempFiltAvrg24(:, :)= Perp1TempFiltAvrg(:, :);
    Perp2TempFiltAvrg24(:, :)= Perp2TempFiltAvrg(:, :);
    PerpTempFiltAvrg24(:, :)= PerpTempFiltAvrg(:, :);
    TempFiltAvrg24(:, :)= TempFiltAvrg(:, :);
    
    Ns24(:)= NsnRRT(:);
    rrAB24= rrAB;
    ndAB24= ndAB;
    Nbeg24= Nbeg;
    Nend24= Nend;
    TimeT24(:)= TimeT(:);
    
    FLogVperp1VparRed24(:, :, :, :)= FLogVperp1VparRed(:, :, : ,:);
    FLogVperp2VparRed24(:, :, :, :)= FLogVperp2VparRed(:, :, : ,:);
    FLogVperp1Vperp2Red24(:, :, :, :)= FLogVperp1Vperp2Red(:, :, : ,:);
    FLogVperp1VparRedInterp24(:, :, :, :)= FLogVperp1VparRedInterp(:, :, :, :);
    FLogVperp2VparRedInterp24(:, :, :, :)= FLogVperp2VparRedInterp(:, :, :, :);
    FLogVperp1Vperp2RedInterp24(:, :, :, :)= FLogVperp1Vperp2RedInterp(:, :, :, :);
    
    FEEnergyAlphaRed24(:, :, :, :)= FEEnergyAlphaRed(:, :, :, :);
    FEnergyEnergyAlphaRed24(:, :, :, :)= FEnergyEnergyAlphaRed(:, :, :, :);
    DNFEnergyAlphaRed24(:, :, :, :)= DNFEnergyAlphaRed(:, :, :, :);
    DEFEnergyAlphaRed24(:, :, :, :)= DEFEnergyAlphaRed(:, :, :, :);
    FEEnergyThetaRed24(:, :, :, :)= FEEnergyThetaRed(:, :, :, :);
    FEnergyEnergyThetaRed24(:, :, :, :)= FEnergyEnergyThetaRed(:, :, :, :);
    DNFEnergyThetaRed24(:, :, :, :)= DNFEnergyThetaRed(:, :, :, :);
    DEFEnergyThetaRed24(:, :, :, :)= DEFEnergyThetaRed(:, :, :, :);
    FEAlphaThetaRed24(:, :, :, :)= FEAlphaThetaRed(:, :, :, :);
    FEnergyAlphaThetaRed24(:, :, :, :)= FEnergyAlphaThetaRed(:, :, :, :);
    DNFAlphaThetaRed24(:, :, :, :)= DNFAlphaThetaRed(:, :, :, :);
    DEFAlphaThetaRed24(:, :, :, :)= DEFAlphaThetaRed(:, :, :, :);
    fG24(:, :)= fG(:, :);
end

toc

disp(horzcat('RUN= ', num2str(Run), ' IMPORT COMPLETE'))

%% PLOT MOMENTS

clc
close all

NCflag= 0;
Wflag= 0;
W99flag= 0;
Bflag= 0;
Bpflag= 0;
Vlambdaflag= 0;
VPCflag= 0;
VWflag= 1;
Zflag= 0;

Runn= 3;

if VPCflag == 1
    nlim1= 2;
    nlim2= 12;
    Tlim1= 0;
    Tlim2= 100;
    uparlim1= -20;
    uparlim2= 20;
    wperplim1= 0;
    wperplim2= 2;
    wparlim1= 0;
    wparlim2= 15;
end
if VWflag == 1
    nlim1= 3.5;
    nlim2= 7.5;
    Tlim1= 0;
    Tlim2= 400;
    uparlim1= -10;
    uparlim2= 20;
    wperplim1= 0;
    wperplim2= 25;
    wparlim1= 0;
    wparlim2= 7;
end
xlim1= 0;
xlim2= 50;

if Runn == 1
    ndABp= ndAB1;
    rrABp= rrAB1;
    EAMagp= EAMag1;
    TempFiltAvrgp= TempFiltAvrg1;
    DensFiltAvrgp= DensFiltAvrg1;
    UPerp1FiltAvrgp= UPerp1FiltAvrg1;
    UPerp2FiltAvrgp= UPerp2FiltAvrg1;
    UParFiltAvrgp= UParFiltAvrg1;
    WPerp1FiltAvrgp= WPerp1FiltAvrg1;
    WPerp2FiltAvrgp= WPerp2FiltAvrg1;
    WParFiltAvrgp= WParFiltAvrg1;
end
if Runn == 2
    ndABp= ndAB2;
    rrABp= rrAB2;
    EAMagp= EAMag2;
    TempFiltAvrgp= TempFiltAvrg2;
    DensFiltAvrgp= DensFiltAvrg2;
    UPerp1FiltAvrgp= UPerp1FiltAvrg2;
    UPerp2FiltAvrgp= UPerp2FiltAvrg2;
    UParFiltAvrgp= UParFiltAvrg2;
    WPerp1FiltAvrgp= WPerp1FiltAvrg2;
    WPerp2FiltAvrgp= WPerp2FiltAvrg2;
    WParFiltAvrgp= WParFiltAvrg2;
end
if Runn == 3
    ndABp= ndAB3;
    rrABp= rrAB3;
    EAMagp= EAMag3;
    TempFiltAvrgp= TempFiltAvrg3;
    DensFiltAvrgp= DensFiltAvrg3;
    UPerp1FiltAvrgp= UPerp1FiltAvrg3;
    UPerp2FiltAvrgp= UPerp2FiltAvrg3;
    UParFiltAvrgp= UParFiltAvrg3;
    WPerp1FiltAvrgp= WPerp1FiltAvrg3;
    WPerp2FiltAvrgp= WPerp2FiltAvrg3;
    WParFiltAvrgp= WParFiltAvrg3;
end
if Runn == 4
    ndABp= ndAB4;
    rrABp= rrAB4;
    EAMagp= EAMag4;
    TempFiltAvrgp= TempFiltAvrg4;
    DensFiltAvrgp= DensFiltAvrg4;
    UPerp1FiltAvrgp= UPerp1FiltAvrg4;
    UPerp2FiltAvrgp= UPerp2FiltAvrg4;
    UParFiltAvrgp= UParFiltAvrg4;
    WPerp1FiltAvrgp= WPerp1FiltAvrg4;
    WPerp2FiltAvrgp= WPerp2FiltAvrg4;
    WParFiltAvrgp= WParFiltAvrg4;
end
if Runn == 5
    ndABp= ndAB5;
    rrABp= rrAB5;
    EAMagp= EAMag5;
    TempFiltAvrgp= TempFiltAvrg5;
    DensFiltAvrgp= DensFiltAvrg5;
    UPerp1FiltAvrgp= UPerp1FiltAvrg5;
    UPerp2FiltAvrgp= UPerp2FiltAvrg5;
    UParFiltAvrgp= UParFiltAvrg5;
    WPerp1FiltAvrgp= WPerp1FiltAvrg5;
    WPerp2FiltAvrgp= WPerp2FiltAvrg5;
    WParFiltAvrgp= WParFiltAvrg5;
end
if Runn == 6
    ndABp= ndAB6;
    rrABp= rrAB6;
    EAMagp= EAMag6;
    TempFiltAvrgp= TempFiltAvrg6;
    DensFiltAvrgp= DensFiltAvrg6;
    UPerp1FiltAvrgp= UPerp1FiltAvrg6;
    UPerp2FiltAvrgp= UPerp2FiltAvrg6;
    UParFiltAvrgp= UParFiltAvrg6;
    WPerp1FiltAvrgp= WPerp1FiltAvrg6;
    WPerp2FiltAvrgp= WPerp2FiltAvrg6;
    WParFiltAvrgp= WParFiltAvrg6;
end
if Runn == 7
    ndABp= ndAB7;
    rrABp= rrAB7;
    EAMagp= EAMag7;
    TempFiltAvrgp= TempFiltAvrg7;
    DensFiltAvrgp= DensFiltAvrg7;
    UPerp1FiltAvrgp= UPerp1FiltAvrg7;
    UPerp2FiltAvrgp= UPerp2FiltAvrg7;
    UParFiltAvrgp= UParFiltAvrg7;
    WPerp1FiltAvrgp= WPerp1FiltAvrg7;
    WPerp2FiltAvrgp= WPerp2FiltAvrg7;
    WParFiltAvrgp= WParFiltAvrg7;
end
if Runn == 8
    ndABp= ndAB8;
    rrABp= rrAB8;
    EAMagp= EAMag8;
    TempFiltAvrgp= TempFiltAvrg8;
    DensFiltAvrgp= DensFiltAvrg8;
    UPerp1FiltAvrgp= UPerp1FiltAvrg8;
    UPerp2FiltAvrgp= UPerp2FiltAvrg8;
    UParFiltAvrgp= UParFiltAvrg8;
    WPerp1FiltAvrgp= WPerp1FiltAvrg8;
    WPerp2FiltAvrgp= WPerp2FiltAvrg8;
    WParFiltAvrgp= WParFiltAvrg8;
end
if Runn == 9
    ndABp= ndAB9;
    rrABp= rrAB9;
    EAMagp= EAMag9;
    TempFiltAvrgp= TempFiltAvrg9;
    DensFiltAvrgp= DensFiltAvrg9;
    UPerp1FiltAvrgp= UPerp1FiltAvrg9;
    UPerp2FiltAvrgp= UPerp2FiltAvrg9;
    UParFiltAvrgp= UParFiltAvrg9;
    WPerp1FiltAvrgp= WPerp1FiltAvrg9;
    WPerp2FiltAvrgp= WPerp2FiltAvrg9;
    WParFiltAvrgp= WParFiltAvrg9;
end
if Runn == 10
    ndABp= ndAB10;
    rrABp= rrAB10;
    EAMagp= EAMag10;
    TempFiltAvrgp= TempFiltAvrg10;
    DensFiltAvrgp= DensFiltAvrg10;
    UPerp1FiltAvrgp= UPerp1FiltAvrg10;
    UPerp2FiltAvrgp= UPerp2FiltAvrg10;
    UParFiltAvrgp= UParFiltAvrg10;
    WPerp1FiltAvrgp= WPerp1FiltAvrg10;
    WPerp2FiltAvrgp= WPerp2FiltAvrg10;
    WParFiltAvrgp= WParFiltAvrg10;
end
if Runn == 11
    ndABp= ndAB11;
    rrABp= rrAB11;
    EAMagp= EAMag11;
    TempFiltAvrgp= TempFiltAvrg11;
    DensFiltAvrgp= DensFiltAvrg11;
    UPerp1FiltAvrgp= UPerp1FiltAvrg11;
    UPerp2FiltAvrgp= UPerp2FiltAvrg11;
    UParFiltAvrgp= UParFiltAvrg11;
    WPerp1FiltAvrgp= WPerp1FiltAvrg11;
    WPerp2FiltAvrgp= WPerp2FiltAvrg11;
    WParFiltAvrgp= WParFiltAvrg11;
end
if Runn == 12
    ndABp= ndAB12;
    rrABp= rrAB12;
    EAMagp= EAMag12;
    TempFiltAvrgp= TempFiltAvrg12;
    DensFiltAvrgp= DensFiltAvrg12;
    UPerp1FiltAvrgp= UPerp1FiltAvrg12;
    UPerp2FiltAvrgp= UPerp2FiltAvrg12;
    UParFiltAvrgp= UParFiltAvrg12;
    WPerp1FiltAvrgp= WPerp1FiltAvrg12;
    WPerp2FiltAvrgp= WPerp2FiltAvrg12;
    WParFiltAvrgp= WParFiltAvrg12;
end
if Runn == 13
    ndABp= ndAB13;
    rrABp= rrAB13;
    EAMagp= EAMag13;
    TempFiltAvrgp= TempFiltAvrg13;
    DensFiltAvrgp= DensFiltAvrg13;
    UPerp1FiltAvrgp= UPerp1FiltAvrg13;
    UPerp2FiltAvrgp= UPerp2FiltAvrg13;
    UParFiltAvrgp= UParFiltAvrg13;
    WPerp1FiltAvrgp= WPerp1FiltAvrg13;
    WPerp2FiltAvrgp= WPerp2FiltAvrg13;
    WParFiltAvrgp= WParFiltAvrg13;
end
if Runn == 14
    ndABp= ndAB14;
    rrABp= rrAB14;
    EAMagp= EAMag14;
    TempFiltAvrgp= TempFiltAvrg14;
    DensFiltAvrgp= DensFiltAvrg14;
    UPerp1FiltAvrgp= UPerp1FiltAvrg14;
    UPerp2FiltAvrgp= UPerp2FiltAvrg14;
    UParFiltAvrgp= UParFiltAvrg14;
    WPerp1FiltAvrgp= WPerp1FiltAvrg14;
    WPerp2FiltAvrgp= WPerp2FiltAvrg14;
    WParFiltAvrgp= WParFiltAvrg14;
end
if Runn == 15
    ndABp= ndAB15;
    rrABp= rrAB15;
    EAMagp= EAMag15;
    TempFiltAvrgp= TempFiltAvrg15;
    DensFiltAvrgp= DensFiltAvrg15;
    UPerp1FiltAvrgp= UPerp1FiltAvrg15;
    UPerp2FiltAvrgp= UPerp2FiltAvrg15;
    UParFiltAvrgp= UParFiltAvrg15;
    WPerp1FiltAvrgp= WPerp1FiltAvrg15;
    WPerp2FiltAvrgp= WPerp2FiltAvrg15;
    WParFiltAvrgp= WParFiltAvrg15;
end
if Runn == 16
    ndABp= ndAB16;
    rrABp= rrAB16;
    EAMagp= EAMag16;
    TempFiltAvrgp= TempFiltAvrg16;
    DensFiltAvrgp= DensFiltAvrg16;
    UPerp1FiltAvrgp= UPerp1FiltAvrg16;
    UPerp2FiltAvrgp= UPerp2FiltAvrg16;
    UParFiltAvrgp= UParFiltAvrg16;
    WPerp1FiltAvrgp= WPerp1FiltAvrg16;
    WPerp2FiltAvrgp= WPerp2FiltAvrg16;
    WParFiltAvrgp= WParFiltAvrg16;
end
if Runn == 17
    ndABp= ndAB17;
    rrABp= rrAB17;
    EAMagp= EAMag17;
    TempFiltAvrgp= TempFiltAvrg17;
    DensFiltAvrgp= DensFiltAvrg17;
    UPerp1FiltAvrgp= UPerp1FiltAvrg17;
    UPerp2FiltAvrgp= UPerp2FiltAvrg17;
    UParFiltAvrgp= UParFiltAvrg17;
    WPerp1FiltAvrgp= WPerp1FiltAvrg17;
    WPerp2FiltAvrgp= WPerp2FiltAvrg17;
    WParFiltAvrgp= WParFiltAvrg17;
end
if Runn == 18
    ndABp= ndAB18;
    rrABp= rrAB18;
    EAMagp= EAMag18;
    TempFiltAvrgp= TempFiltAvrg18;
    DensFiltAvrgp= DensFiltAvrg18;
    UPerp1FiltAvrgp= UPerp1FiltAvrg18;
    UPerp2FiltAvrgp= UPerp2FiltAvrg18;
    UParFiltAvrgp= UParFiltAvrg18;
    WPerp1FiltAvrgp= WPerp1FiltAvrg18;
    WPerp2FiltAvrgp= WPerp2FiltAvrg18;
    WParFiltAvrgp= WParFiltAvrg18;
end
if Runn == 19
    ndABp= ndAB19;
    rrABp= rrAB19;
    EAMagp= EAMag19;
    TempFiltAvrgp= TempFiltAvrg19;
    DensFiltAvrgp= DensFiltAvrg19;
    UPerp1FiltAvrgp= UPerp1FiltAvrg19;
    UPerp2FiltAvrgp= UPerp2FiltAvrg19;
    UParFiltAvrgp= UParFiltAvrg19;
    WPerp1FiltAvrgp= WPerp1FiltAvrg19;
    WPerp2FiltAvrgp= WPerp2FiltAvrg19;
    WParFiltAvrgp= WParFiltAvrg19;
end
if Runn == 20
    ndABp= ndAB20;
    rrABp= rrAB20;
    EAMagp= EAMag20;
    TempFiltAvrgp= TempFiltAvrg20;
    DensFiltAvrgp= DensFiltAvrg20;
    UPerp1FiltAvrgp= UPerp1FiltAvrg20;
    UPerp2FiltAvrgp= UPerp2FiltAvrg20;
    UParFiltAvrgp= UParFiltAvrg20;
    WPerp1FiltAvrgp= WPerp1FiltAvrg20;
    WPerp2FiltAvrgp= WPerp2FiltAvrg20;
    WParFiltAvrgp= WParFiltAvrg20;
end
if Runn == 21
    ndABp= ndAB21;
    rrABp= rrAB21;
    EAMagp= EAMag21;
    TempFiltAvrgp= TempFiltAvrg21;
    DensFiltAvrgp= DensFiltAvrg21;
    UPerp1FiltAvrgp= UPerp1FiltAvrg21;
    UPerp2FiltAvrgp= UPerp2FiltAvrg21;
    UParFiltAvrgp= UParFiltAvrg21;
    WPerp1FiltAvrgp= WPerp1FiltAvrg21;
    WPerp2FiltAvrgp= WPerp2FiltAvrg21;
    WParFiltAvrgp= WParFiltAvrg21;
end
if Runn == 22
    ndABp= ndAB22;
    rrABp= rrAB22;
    EAMagp= EAMag22;
    TempFiltAvrgp= TempFiltAvrg22;
    DensFiltAvrgp= DensFiltAvrg22;
    UPerp1FiltAvrgp= UPerp1FiltAvrg22;
    UPerp2FiltAvrgp= UPerp2FiltAvrg22;
    UParFiltAvrgp= UParFiltAvrg22;
    WPerp1FiltAvrgp= WPerp1FiltAvrg22;
    WPerp2FiltAvrgp= WPerp2FiltAvrg22;
    WParFiltAvrgp= WParFiltAvrg22;
end
if Runn == 23
    ndABp= ndAB23;
    rrABp= rrAB23;
    EAMagp= EAMag23;
    TempFiltAvrgp= TempFiltAvrg23;
    DensFiltAvrgp= DensFiltAvrg23;
    UPerp1FiltAvrgp= UPerp1FiltAvrg23;
    UPerp2FiltAvrgp= UPerp2FiltAvrg23;
    UParFiltAvrgp= UParFiltAvrg23;
    WPerp1FiltAvrgp= WPerp1FiltAvrg23;
    WPerp2FiltAvrgp= WPerp2FiltAvrg23;
    WParFiltAvrgp= WParFiltAvrg23;
end
if Runn == 24
    ndABp= ndAB24;
    rrABp= rrAB24;
    EAMagp= EAMag24;
    TempFiltAvrgp= TempFiltAvrg24;
    DensFiltAvrgp= DensFiltAvrg24;
    UPerp1FiltAvrgp= UPerp1FiltAvrg24;
    UPerp2FiltAvrgp= UPerp2FiltAvrg24;
    UParFiltAvrgp= UParFiltAvrg24;
    WPerp1FiltAvrgp= WPerp1FiltAvrg24;
    WPerp2FiltAvrgp= WPerp2FiltAvrg24;
    WParFiltAvrgp= WParFiltAvrg24;
end

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';

if NCflag == 1
    textx= -15; texty= 1200;
end
if Wflag == 1 | Bflag == 1
    textx= -100; texty= 19000;
end

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

if NCflag == 1
    subplot(2, 3, 1)
    pp= pcolor(ndABp/60, rrABp, real(abs(EAMagp)));
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    ylim([133 1e3]);
    hold off
end

if Wflag == 1 | W99flag == 1 | Bflag == 1 | Bpflag == 1 | Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1 | Zflag == 1
    subplot(2, 3, 1)
    pp= pcolor(ndABp/60, rrABp/1000e0, log10(DensFiltAvrgp));
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
%     xlim([xlim1 xlim2]);
    if Wflag == 1 | Bflag == 1 | Bpflag == 1
%         if Wflag == 1 & Runn ~= 5
%             caxis([5 8]);
%         end
%         if Wflag == 1 & Runn == 5
            caxis([1.5 7.5]);
%         end
    end
    if Zflag == 1
        caxis([7 11]);
    end
    if Vlambdaflag == 1
        if Runn == 4 | Runn == 24 | Runn == 8 | Runn == 12 | Runn == 16 | Runn == 20
            caxis([6 11]);
        else
          caxis([8 11]);          
        end
    end
    if VPCflag == 1
        caxis([nlim1 nlim2]);
    end
    if VWflag == 1
        caxis([nlim1 nlim2]);
    end
    hold off
end

if NCflag == 1
    subplot(2, 3, 2)
    pp= pcolor(ndABp/60, rrABp, log10(DensFiltAvrgp));
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    ylim([133 1e3]);
    caxis([8 11.5]);
    hold off
end

if Wflag == 1 | W99flag == 1 | Bflag == 1 | Bpflag == 1 | Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1 | Zflag == 1
    subplot(2, 3, 2)
    pp= pcolor(ndABp/60, rrABp/1000e0, TempFiltAvrgp/1000e0);
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$T_i$ [1000 K]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
%     xlim([xlim1 xlim2]);
    if Wflag == 1
%         if Runn ~= 5
%             caxis([2 22]);
%         end
%         if Runn == 5
            caxis([1 60]);
%         end
    end
    if Bflag == 1
        caxis([2 250]);
    end
    if Bpflag == 1
        caxis([2 7]);
    end
    if Vlambdaflag == 1 
        if Runn == 4 | Runn == 24 | Runn == 8 | Runn == 12 | Runn == 16 | Runn == 20
            caxis([4 25]);
        else
            caxis([4 14]);
        end
    end
    if VPCflag == 1 
        caxis([Tlim1 Tlim2]);
    end
    if VWflag == 1 
        caxis([Tlim1 Tlim2]);
    end
    if Zflag == 1
        caxis([4 16]);
    end
    hold off
end

if NCflag == 1
    subplot(2, 3, 3)
    pp= pcolor(ndABp/60, rrABp, TempFiltAvrgp/1000e0);
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$T_i$ [1000 K]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    ylim([133 1e3]);
    caxis([800/1000e0 1150/1000e0]);
    hold off
end

if Wflag == 1 | W99flag == 1 | Bflag == 1 | Bpflag == 1 | Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1 | Zflag == 1 
    subplot(2, 3, 3)
    pp= pcolor(ndABp/60, rrABp/1000e0, -UParFiltAvrgp.*1e-3);
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
%     xlim([xlim1 xlim2]);
    if Wflag == 1
%         if Runn ~= 5
%             caxis([-1 3]);
%         end
%         if Runn == 5
            caxis([-4 5]);
%         end
    end
    if Bflag == 1
        caxis([0 15]);
    end
    if Bpflag == 1
        caxis([0 2]);
    end
    if Zflag == 1 
        caxis([-0.5 1.5]);
    end
    if Vlambdaflag == 1 
        if Runn == 4 | Rnn == 8 | Runn == 12 | Runn == 16 | Runn == 20
            caxis([-2.2 3.5]);
        else
            caxis([-0.5 1.5]);
        end
    end
    if VPCflag == 1 
        caxis([uparlim1 uparlim2]);
    end
    if VWflag == 1 
        caxis([uparlim1 uparlim2]);
    end
    hold off
end

if NCflag == 1
    subplot(2, 3, 4)
    pp= pcolor(ndABp/60, rrABp, UPerp1FiltAvrgp.*1e-3);
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$u_{\perp 1}$ [km/s]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    ylim([133 1e3]);
    caxis([-1 1]);
    hold off
end

if Wflag == 1 | W99flag == 1 | Bflag == 1 | Bpflag == 1 | Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1 | Zflag == 1 
    subplot(2, 3, 4)
    if W99flag == 0
        pp= pcolor(ndABp/60, rrABp/1000e0, WPerp1FiltAvrgp);
    end
    if W99flag == 1 
        pp= pcolor(ndABp/60, rrABp/1000e0, WPerp1FiltAvrgp);
    end
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    if W99flag == 0
        xlabel(cbar, horzcat('$w_{\perp 1}$ [eV]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    end
    if W99flag == 1
        xlabel(cbar, horzcat('$w_{\perp 1}$ [eV]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    end
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
%     xlim([xlim1 xlim2]);
    if Wflag == 1
%         if Runn ~= 5
%             caxis([0 1.5]);
%         end
%         if Runn == 5
            caxis([0 3]);
%         end
    end
    if Bflag == 1
        caxis([0 15]);
    end
    if Bpflag == 1
        caxis([0 0.4]);
    end
    if Vlambdaflag == 1 
        if Runn == 4 | Runn == 24 | Runn == 8 | Runn == 12 | Runn == 16 | Runn == 20
            caxis([0 1.7]);
        else
            caxis([0 0.8]);
        end
    end
    if VPCflag == 1
        caxis([wperplim1 wperplim2]);
    end
    if VWflag == 1
        caxis([wperplim1 wperplim2]);
    end
    if Zflag == 1
        caxis([0 1]);
    end
    hold off
end

if NCflag == 1
    subplot(2, 3, 5)
    pp= pcolor(ndABp/60, rrABp, UPerp1FiltAvrgp.*1e-3);
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$u_{\perp 2}$ [km/s]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    ylim([133 1e3]);
    caxis([-1 1]);
    hold off
end

if Wflag == 1 | W99flag == 1 | Bflag == 1 | Bpflag == 1 | Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1 | Zflag == 1
    subplot(2, 3, 5)
    if W99flag == 0
        pp= pcolor(ndABp/60, rrABp/1000e0, WPerp2FiltAvrgp);
    end
    if W99flag == 1 
%         pp= pcolor(ndABp/60, rrABp/1000e0, Perp2TempFiltAvrg*1e-3);
        pp= pcolor(ndABp/60, rrABp/1000e0, WPerp2FiltAvrgp);
    end
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    if W99flag == 0
        xlabel(cbar, horzcat('$w_{\perp 2}$ [eV]'), ...
            'interpreter', 'latex', 'FontSize', 25)
    end
    if W99flag == 1
%         xlabel(cbar, horzcat('$T_{\perp 2}$ [1000 K]'), ...
%             'interpreter', 'latex', 'FontSize', 25)
        xlabel(cbar, horzcat('$w_{\perp 2}$ [eV]'), ...
            'interpreter', 'latex', 'FontSize', 25)
    end
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
%     xlim([xlim1 xlim2]);
    if Wflag == 1
%         if Runn ~= 5
%             caxis([0 1.5]);
%         end
%         if Runn == 5
            caxis([0 3]);
%         end
    end
    if Bflag == 1
        caxis([0 15]);
    end
    if Bpflag == 1
        caxis([0 0.4]);
    end
    if Vlambdaflag == 1 
        if Runn == 4 | Runn == 24 | Runn == 8 | Runn == 12 | Runn == 16 | Runn == 20
            caxis([0 1.7]);
        else
            caxis([0 0.8]);
        end
    end
    if VPCflag == 1
        caxis([wperplim1 wperplim2]);
    end
    if VWflag == 1
        caxis([wperplim1 wperplim2]);
    end
    if Zflag == 1
        caxis([0 1]);
    end
    hold off
end

if NCflag == 1
    subplot(2, 3, 6)
    pp= pcolor(ndABp/60, rrABp, -UParFiltAvrgp.*1e-3);
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    ylim([133 1e3]);
    caxis([-1 1]);
    hold off
end

if Wflag == 1 | W99flag == 1 | Bflag == 1 | Bpflag == 1 | Vlambdaflag == 1 | VPCflag == 1 | VWflag == 1 | Zflag == 1
    subplot(2, 3, 6)
    if W99flag == 0
        pp= pcolor(ndABp/60, rrABp/1000e0, WParFiltAvrgp);
    end
    if W99flag == 1
        pp= pcolor(ndABp/60, rrABp/1000e0, WParFiltAvrgp);
    end
    set(pp, 'EdgeColor', 'none');
    shading interp
    colormap(fignum, cmapset);
    cbar= colorbar(cbarloc);
    set(gca, 'FontSize', fsize);
%     xlim([xlim1 xlim2]);
    xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
    if W99flag == 0
        xlabel(cbar, horzcat('$w_{\parallel}$ [eV]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    end
    if W99flag == 1
        xlabel(cbar, horzcat('$w_{\parallel}$ [eV]'), ...
        'interpreter', 'latex', 'FontSize', 25)
    end
    set(gca, 'xaxisLocation', 'top')
    ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gcf, 'color','white');
    if Wflag == 1
%         if Runn ~= 5
%             caxis([0 0.5]);
%         end
%         if Runn == 5
            caxis([0 1]);
%         end
    end
    if Bflag == 1
        caxis([0 3]);
    end
    if Bpflag == 1
        caxis([0 0.2]);
    end
    if Zflag == 1
        caxis([0.1 0.2]);
    end
    if Vlambdaflag == 1 | Zflag == 1
        if Runn == 4 | Runn == 24 | Runn == 8 | Runn == 12 | Runn == 16 | Runn == 20
            caxis([0 1.1]);
        else
            caxis([0.1 0.2]);
        end
    end
    if VPCflag == 1 
        caxis([wparlim1 wparlim2]);
    end
    if VWflag == 1 
        caxis([wparlim1 wparlim2]);
    end
    hold off
end

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'StaticVSactiveEaF.png')]);

%% PLOT B MOMENT PROFILES

clc
close all

Bflag= 1;
Bpflag= 0;

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 600; dyfigsize= 150; legloc= 'SouthWest';

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

if NCflag == 1
    textx= -15; texty= 1200;
end
if Wflag == 1 | Bflag == 1
    textx= -1.25; texty= 2.8;
end

for Qind= NqLB:1:NqUB
    DensFiltAvrgTav1(Qind)= sum(DensFiltAvrg1(:, Qind))/Nend1;
    DensFiltAvrgTav2(Qind)= sum(DensFiltAvrg2(:, Qind))/Nend2;
    DensFiltAvrgTav3(Qind)= sum(DensFiltAvrg3(:, Qind))/Nend3;
    DensFiltAvrgTav4(Qind)= sum(DensFiltAvrg4(:, Qind))/Nend4;
    UParFiltAvrgTav1(Qind)= sum(UParFiltAvrg1(:, Qind))/Nend1;
    UParFiltAvrgTav2(Qind)= sum(UParFiltAvrg2(:, Qind))/Nend2;
    UParFiltAvrgTav3(Qind)= sum(UParFiltAvrg3(:, Qind))/Nend3;
    UParFiltAvrgTav4(Qind)= sum(UParFiltAvrg4(:, Qind))/Nend4;
    PerpTempFiltAvrgTav1(Qind)= sum(PerpTempFiltAvrg1(:, Qind))/Nend1;
    PerpTempFiltAvrgTav2(Qind)= sum(PerpTempFiltAvrg2(:, Qind))/Nend2;
    PerpTempFiltAvrgTav3(Qind)= sum(PerpTempFiltAvrg3(:, Qind))/Nend3;
    PerpTempFiltAvrgTav4(Qind)= sum(PerpTempFiltAvrg4(:, Qind))/Nend4;
    ParTempFiltAvrgTav1(Qind)= sum(ParTempFiltAvrg1(:, Qind))/Nend1;
    ParTempFiltAvrgTav2(Qind)= sum(ParTempFiltAvrg2(:, Qind))/Nend2;
    ParTempFiltAvrgTav3(Qind)= sum(ParTempFiltAvrg3(:, Qind))/Nend3;
    ParTempFiltAvrgTav4(Qind)= sum(ParTempFiltAvrg4(:, Qind))/Nend4;
end

ylim1= 1.5;
ylim2= 2.5; 


clear LH L
subplot(2, 3, 1)
plot(smooth(smooth(log10(DensFiltAvrg1(end, :)*1e-6))), rrAB1(1, :)*1e3/RE, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(smooth(log10(DensFiltAvrg3(end, :)*1e-6))), rrAB3(1, :)*1e3/RE, 'b', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 10$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
xlim([-2.5 2])
ylim([ylim1 ylim2]);
text(-3.05, 2.65, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel('log$_{10}(n)$ [cm$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25);
ylabel('$r$ [$R_E$]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 2)
plot(smooth(smooth(log10(abs(UParFiltAvrg1(end, :))*1e2))), rrAB1(1, :)*1e3/RE, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(smooth(log10(abs(UParFiltAvrg3(end, :))*1e2))), rrAB2(1, :)*1e3/RE, 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlabel('log$_{10}(u_\parallel)$ [cm/s]', 'interpreter', 'latex', 'FontSize', 25);
ylabel('$r$ [$R_E$]', 'interpreter', 'latex', 'FontSize', 25);
xlim([3.5 6.5])
ylim([ylim1 ylim2]);
text(3.12, 2.65, '(b)', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 4)
plot(smooth(smooth(log10(PerpTempFiltAvrg1(end, :)))), rrAB1(1, :)*1e3/RE, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(smooth(log10(PerpTempFiltAvrg3(end, :)))), rrAB2(1, :)*1e3/RE, 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlabel('log$_{10}(T_\perp)$ [K]', 'interpreter', 'latex', 'FontSize', 25);
ylabel('$r$ [$R_E$]', 'interpreter', 'latex', 'FontSize', 25);
xlim([3.5 6])
ylim([ylim1 ylim2]);
text(3.2, 2.65, '(c)', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 5)
plot(smooth(smooth(log10(ParTempFiltAvrg1(end, :)))), rrAB1(1, :)*1e3/RE, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(smooth(log10(ParTempFiltAvrg3(end, :)))), rrAB2(1, :)*1e3/RE, 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlabel('log$_{10}(T_\parallel)$ [K]', 'interpreter', 'latex', 'FontSize', 25);
ylabel('$r$ [$R_E$]', 'interpreter', 'latex', 'FontSize', 25);
xlim([3.25 4.75])
ylim([ylim1 ylim2]);
text(3.05, 2.65, '(d)', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'Bmoments.png')]);

%% PLOT FINAL B PERP WAVELENGTH AND HEATING RATE

clc
close all

lambdaG1= 0e0;
lambdaG2= 100e0;
lambdaG3= 10e0;
lambdaG4= 1e0;
Xiperp1= 0.5e0;
Xiperp2= 0.5e0;
etaLB= 0.125e0;
chiperp1= 1.7;
chiperp2= 1.7;
S0= 1.2e-6; % [(V^2/m^2)/Hz]
fG0= 5.6; % [Hz]

clear UperpG1 UperpG2 UperpG3 UperpG4 rhoG1 rhoG2 rhoG3 rhoG4 sigmaG1 sigmaG2 sigmaG3 sigmaG4 
clear Dperp1G1 Dperp2G1 Dperp1G2 Dperp2G2 Dperp1G3 Dperp2G3 Dperp1G4 Dperp2G4
clear Wdotperp1G1 Wdotperp2G1 WdotG1 Wdotperp1G2 Wdotperp2G2 WdotG2 Wdotperp1G3 Wdotperp2G3 WdotG3 
clear Wdotperp1G4 Wdotperp2G4 WdotG4
for Qind= NqLB:1:NqUB
    UperpG1(:, Qind)= (sqrt(UPerp1FiltAvrg1(:, Qind).^2e0+ UPerp2FiltAvrg1(:, Qind).^2e0));
    UperpG3(:, Qind)= (sqrt(UPerp1FiltAvrg3(:, Qind).^2e0+ UPerp2FiltAvrg3(:, Qind).^2e0));
    rhoG1(:, Qind)= UperpG1(:, Qind)/fG1(Qind);
    rhoG3(:, Qind)= UperpG3(:, Qind)/fG3(Qind);
end
for Qind= NqLB:1:NqUB
    rhoG1mean(Qind)= mean(rhoG1(:, Qind));
    rhoG3mean(Qind)= mean(rhoG3(:, Qind));
end

clear rrk1 rrk3 rrq1 rrq3 rhoG1meanInterp rhoG3meanInterp
% Set interpolation known points:
rrk1(:)= rrAB1(1, :);
rrk3(:)= rrAB3(1, :);
% Set interpolation query points:
rrq1(:)= linspace(rrk1(1), rrk1(end), 1d2);
rrq3(:)= linspace(rrk3(1), rrk3(end), 1d2);

rhoG1meanInterp= interpn(rrk1, rhoG1mean, rrq1);
rhoG3meanInterp= interpn(rrk3, rhoG3mean, rrq3);

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 450; legloc= 'NorthEast';

textx= -80; texty= 17.5;
textx2= 1.3; texty2= 70;

clim1= 0; clim2= 10;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(2, 3, 1:2)
plot(rrq1(:)*1e3/RE, smooth(rhoG1meanInterp), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(rrq3(:)*1e3/RE, smooth(rhoG3meanInterp), 'b', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 10$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest')
ylabel('$\bar \rho_g$ [m]', 'interpreter', 'latex', 'FontSize', 25);
% text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$r$ [$R_E$]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
xlim([rrAB1(1, 1)*1e3/RE rrAB1(1, end)*1e3/RE])
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'BrhoGWdot.png')]);

%% PLOT FINAL V-lambda PERP WAVELENGTH

clc
close all

lambdaG1= 0e0;
lambdaG2= 0.25e0;
lambdaG3= 10e0;
lambdaG4= 1e0;
Xiperp1= 0.5e0;
Xiperp2= 0.5e0;
etaLB= 0.125e0;
chiperp1= 1.7;
chiperp2= 1.7;
S0= 1.2e-6; % [(V^2/m^2)/Hz]
fG0= 5.6; % [Hz]

clear UperpG1 UperpG21 UperpG4 UperpG24 rhoG1 rhoG21 rhoG4 rhoG24
for Qind= NqLB:1:NqUB
    UperpG1(:, Qind)= (sqrt(UPerp1FiltAvrg1(:, Qind).^2e0+ UPerp2FiltAvrg1(:, Qind).^2e0));
    UperpG21(:, Qind)= (sqrt(UPerp1FiltAvrg21(:, Qind).^2e0+ UPerp2FiltAvrg21(:, Qind).^2e0));
    UperpG4(:, Qind)= (sqrt(UPerp1FiltAvrg4(:, Qind).^2e0+ UPerp2FiltAvrg4(:, Qind).^2e0));
    UperpG24(:, Qind)= (sqrt(UPerp1FiltAvrg24(:, Qind).^2e0+ UPerp2FiltAvrg24(:, Qind).^2e0));
    rhoG1(:, Qind)= UperpG1(:, Qind)/fG1(Qind);
    rhoG21(:, Qind)= UperpG21(:, Qind)/fG21(Qind);
    rhoG4(:, Qind)= UperpG4(:, Qind)/fG4(Qind);
    rhoG24(:, Qind)= UperpG24(:, Qind)/fG24(Qind);
end
for Qind= NqLB:1:NqUB
    rhoG1mean(Qind)= mean(rhoG1(:, Qind));
    rhoG21mean(Qind)= mean(rhoG21(:, Qind));
    rhoG4mean(Qind)= mean(rhoG4(:, Qind));
    rhoG24mean(Qind)= mean(rhoG24(:, Qind));
end

clear rrk1 rrk3 rrq1 rrq3 rhoG1meanInterp rhoG3meanInterp
% Set interpolation known points:
rrk1(:)= rrAB1(1, :);
rrk21(:)= rrAB21(1, :);
rrk4(:)= rrAB4(1, :);
rrk24(:)= rrAB24(1, :);
% Set interpolation query points:
rrq1(:)= linspace(rrk1(1), rrk1(end), 1d2);
rrq21(:)= linspace(rrk21(1), rrk21(end), 1d2);
rrq4(:)= linspace(rrk4(1), rrk4(end), 1d2);
rrq24(:)= linspace(rrk24(1), rrk24(end), 1d2);

rhoG1meanInterp= interpn(rrk1, rhoG1mean, rrq1);
rhoG21meanInterp= interpn(rrk21, rhoG21mean, rrq21);
rhoG4meanInterp= interpn(rrk4, rhoG4mean, rrq4);
rhoG24meanInterp= interpn(rrk24, rhoG24mean, rrq24);

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 450; legloc= 'NorthWest';

textx= -80; texty= 17.5;
textx2= 1.3; texty2= 70;

clim1= 0; clim2= 10;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(2, 3, 1:2)
plot(rrq1(:)*1e3/RE, smooth(rhoG1meanInterp), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(rrq21(:)*1e3/RE, smooth(rhoG21meanInterp), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(rrq4(:)*1e3/RE, smooth(rhoG4meanInterp), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(rrq24(:)*1e3/RE, smooth(rhoG24meanInterp), 'g', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B1');
L{2}= horzcat('Sim. B2');
L{3}= horzcat('Sim. B3');
L{4}= horzcat('Sim. B4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
ylabel('$\bar \rho_g$ [m]', 'interpreter', 'latex', 'FontSize', 25);
% text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$r$ [$1000$ km]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
xlim([rrq1(1)*1e3/RE rrq1(end)*1e3/RE])
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'BrhoGWdot.png')]);

%% PLOT W POTENTIALS

clc
close all

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 450; legloc= 'NorthEast';

textx= -80; texty= 17.5;
textx2= 1.3; texty2= 70;

clim1= 0; clim2= 10;
% Epar04= 1e-7; % for W study
% Epar05= 5e-7;
Epar04= 4e-6; % For VPC study
Epar05= 5e-6;
for Qind= NqLB:1:NqUB
    Pot4(Qind)= Epar04* ...
        sum(Rank(r).Specie(s).FluxTube(f).hqC(1:Qind).*Rank(r).Specie(s).FluxTube(f).dqC(1:Qind));
    Pot5(Qind)= Epar05* ...
        sum(Rank(r).Specie(s).FluxTube(f).hqC(1:Qind).*Rank(r).Specie(s).FluxTube(f).dqC(1:Qind));
end

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(2, 2, 1)
plot(rrAB1(1, :)*1e-3, qion.*Pot4.*eVfac, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(rrAB3(1, :)*1e-3, qion.*Pot5.*eVfac, 'b', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 4 \times 10^{-6}$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 5 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest')
ylabel('$q\Delta \Phi_\parallel$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
xlim([rrAB4(1, 1)*1e-3 rrAB4(1, end)*1e-3])
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'Wpotentials.png')]);

%% PLOT STATIC VS ACTIVE EA several

clc
close all

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(2, 3, 4)
pp= pcolor(ndAB2/60, rrAB2, real(abs(EAMag2)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([0 2.7e-6])
hold off

subplot(2, 3, 1)
pp= pcolor(ndAB1/60, rrAB1, real(abs(EAMag1)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
hold off

subplot(2, 3, 5)
pp= pcolor(ndAB2/60, rrAB2, log10(DensFiltAvrg2));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([8 11.5]);
hold off

subplot(2, 3, 2)
pp= pcolor(ndAB1/60, rrAB1, log10(DensFiltAvrg1));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([8 11.5]);
hold off

subplot(2, 3, 6)
pp= pcolor(ndAB2/60, rrAB2, TempFiltAvrg2);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$T_i$ [K]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([800 1150]);
hold off

subplot(2, 3, 3)
pp= pcolor(ndAB1/60, rrAB1, TempFiltAvrg1);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$T_i$ [K]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([800 1150]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');
%
% saveas(figure(fignum), [horzcat(dataexpdir, 'StaticVSactiveEaF.png')]);

%% PLOT UPFLOW 1

clc
close all

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(2, 3, 1)
pp= pcolor(ndAB5/60, rrAB5, real(abs(EAMag5)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
hold off

subplot(2, 3, 2)
pp= pcolor(ndAB5/60, rrAB5, log10(DensFiltAvrg5));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([8 11.5]);
hold off

subplot(2, 3, 3)
pp= pcolor(ndAB5/60, rrAB5, TempFiltAvrg5);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$T_i$ [K]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([800 1150]);
hold off

subplot(2, 3, 4)
pp= pcolor(ndAB5/60, rrAB5, UPerp15.*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\perp 1}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([-1 1])
hold off

subplot(2, 3, 5)
pp= pcolor(ndAB5/60, rrAB5, UPerp25.*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\perp 2}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([-1 1])
hold off

subplot(2, 3, 6)
pp= pcolor(ndAB5/60, rrAB5, -UPar5.*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([-1 1])
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'StaticVSactiveEaF.png')]);

%% PLOT UPFLOW 2

clc
close all

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(2, 3, 1)
pp= pcolor(ndAB6/60, rrAB6, real(abs(EAMag6)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
hold off

subplot(2, 3, 2)
pp= pcolor(ndAB6/60, rrAB6, log10(DensFiltAvrg6));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([8 11.5]);
hold off

subplot(2, 3, 3)
pp= pcolor(ndAB6/60, rrAB6, TempFiltAvrg6);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$T_i$ [K]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([800 1150]);
hold off

subplot(2, 3, 4)
pp= pcolor(ndAB6/60, rrAB6, UPerp16.*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\perp 1}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([-1 1])
hold off

subplot(2, 3, 5)
pp= pcolor(ndAB6/60, rrAB6, UPerp26.*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\perp 2}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([-1 1])
hold off

subplot(2, 3, 6)
pp= pcolor(ndAB6/60, rrAB6, -UPar6.*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
% text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([133 1e3]);
caxis([-1 1])
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'StaticVSactiveEaF.png')]);

%% PLOT ACTIVE EA NOMINAL CASES

clc
close all

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 7)
pp= pcolor(ndAB4/60, rrAB4, real(abs(EAMag4)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([0 2.7e-6])
hold off

subplot(3, 3, 4)
pp= pcolor(ndAB3/60, rrAB3, real(abs(EAMag3)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([0 2.7e-6])
hold off

subplot(3, 3, 1)
pp= pcolor(ndAB2/60, rrAB2, real(abs(EAMag2)));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$E_A$ [V/m]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([0 2.7e-6])
hold off

subplot(3, 3, 8)
pp= pcolor(ndAB4/60, rrAB4, log10(DensFiltAvrg4));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([8 11.5]);
hold off

subplot(3, 3, 5)
pp= pcolor(ndAB3/60, rrAB3, log10(DensFiltAvrg3));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([8 11.5]);
hold off

subplot(3, 3, 2)
pp= pcolor(ndAB2/60, rrAB2, log10(DensFiltAvrg2));
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('log$_{10}(n)$ [m$^{-3}$]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([8 11.5]);
hold off

subplot(3, 3, 9)
pp= pcolor(ndAB4/60, rrAB4, -UParFiltAvrg4*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([-1 1]);
hold off

subplot(3, 3, 6)
pp= pcolor(ndAB3/60, rrAB3, -UParFiltAvrg3*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([-1 1]);
hold off

subplot(3, 3, 3)
pp= pcolor(ndAB2/60, rrAB2, -UParFiltAvrg2*1e-3);
set(pp, 'EdgeColor', 'none');
shading interp
colormap(fignum, cmapset);
cbar= colorbar(cbarloc);
set(gca, 'FontSize', fsize);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25)
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(cbar, horzcat('$u_{\parallel}$ [km/s]'), ...
    'interpreter', 'latex', 'FontSize', 25)
set(gca, 'xaxisLocation', 'top')
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([150 1e3]);
caxis([-1 1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'StaticVSactiveEaF.png')]);

%% PLOT FINAL STATIC VS ACTIVE EA PARTICLE NUMBERS

clc
close all

clear L LH
cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize yfigsize])

plot(ndAB1(:, 1)/60, smooth(Ns1(1:size(ndAB1(:, 1)))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(ndAB2(:, 1)/60, smooth(Ns2(1:size(ndAB2(:, 1)))), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(ndAB3(:, 1)/60, smooth(Ns3(1:size(ndAB3(:, 1)))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(ndAB4(:, 1)/60, smooth(Ns4(1:size(ndAB4(:, 1)))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. A1');
L{2}= horzcat('Sim. A2');
L{3}= horzcat('Sim. A3');
L{4}= horzcat('Sim. A4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
ylim([0.8e7 1.4e7]);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25);
ylabel(horzcat('$N_s$'), 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

saveas(figure(fignum), [horzcat(dataexpdir, 'StaticVSactiveEaNs.png')]);

%% PLOT FINAL V-lambda PARTICLE NUMBERS

clc
close all

clear L LH
cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'East';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize yfigsize])

plot(ndAB1(:, 1)/60, smooth(Ns1(1:size(ndAB1(:, 1)))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(ndAB21(:, 1)/60, smooth(Ns21(1:size(ndAB21(:, 1)))), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(ndAB4(:, 1)/60, smooth(Ns4(1:size(ndAB4(:, 1)))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(ndAB24(:, 1)/60, smooth(Ns24(1:size(ndAB24(:, 1)))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B1');
L{2}= horzcat('Sim. B2');
L{3}= horzcat('Sim. B3');
L{4}= horzcat('Sim. B4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
% ylim([0.8e7 1.4e7]);
xlim([0 238.5]);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25);
ylabel(horzcat('$N_s$'), 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

saveas(figure(fignum), [horzcat(dataexpdir, 'VlambdaNs.png')]);

%% PLOT FINAL UPFLOW PARTICLE NUMBERS AND TE

clc
close all

clear L LH

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 1150; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'SouthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize yfigsize])

subplot(1, 2, 1)
plot(ndAB5(:, 1)/60, smooth(Ns5(1:size(ndAB5(:, 1)))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(ndAB6(:, 1)/60, smooth(Ns6(1:size(ndAB6(:, 1)))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\delta T_e= 0.26$ K/s');
L{2}= horzcat('$\delta T_e= 1.28$ K/s');
ylim([0.8e7 2e7]);
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25);
ylabel(horzcat('$N_s$'), 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(1, 2, 2)
plot(ndAB5(:, 1)/60, smooth(TeNT5(1:size(ndAB5(:, 1)))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(ndAB6(:, 1)/60, smooth(TeNT6(1:size(ndAB6(:, 1)))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
grid on
ylim([1e3 3e3]);
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25);
ylabel(horzcat('$T_e$ [K]'), 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

saveas(figure(fignum), [horzcat(dataexpdir, 'UpflowNsTe.png')]);

%% PLOT LINE MOMENTS V0 Epar0= 0

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$E_{\parallel 0}= 0$ V/m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg1(end, :)*1e-3), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg5(end, :)*1e-3), rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg9(end, :)*1e-3), rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg13(end, :)*1e-3), rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg17(end, :)*1e-3), rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg21(end, :)*1e-3), rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 Epar0= 1e-8 V/m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg2(end, :)*1e-3), rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg6(end, :)*1e-3), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg10(end, :)*1e-3), rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg14(end, :)*1e-3), rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg18(end, :)*1e-3), rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg22(end, :)*1e-3), rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 Epar0= 1e-7 V/m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg3(end, :)*1e-3), rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg7(end, :)*1e-3), rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg11(end, :)*1e-3), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg15(end, :)*1e-3), rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg19(end, :)*1e-3), rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg23(end, :)*1e-3), rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 Epar0= 1e-6 V/m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg4(end, :)*1e-3), rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg8(end, :)*1e-3), rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg12(end, :)*1e-3), rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg16(end, :)*1e-3), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg20(end, :)*1e-3), rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg24(end, :)*1e-3), rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'm', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 lambda= infinity

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 0$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m');
L{3}= horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m');
L{4}= horzcat('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$\lambda_\perp= \infty$', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg1(end, :)*1e-3), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg2(end, :)*1e-3), rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg3(end, :)*1e-3), rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg4(end, :)*1e-3), rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg1(end, :)), rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg2(end, :)), rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg3(end, :)), rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg4(end, :)), rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg1(end, :))/1000e0, rrAB1(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg2(end, :))/1000e0, rrAB2(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg3(end, :))/1000e0, rrAB3(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg4(end, :))/1000e0, rrAB4(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 lambda= 100m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 0$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m');
L{3}= horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m');
L{4}= horzcat('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$\lambda_\perp= 100$ m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg5(end, :)*1e-3), rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg6(end, :)*1e-3), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg7(end, :)*1e-3), rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg8(end, :)*1e-3), rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg5(end, :)), rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg6(end, :)), rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg7(end, :)), rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg8(end, :)), rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg5(end, :))/1000e0, rrAB5(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg6(end, :))/1000e0, rrAB6(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg7(end, :))/1000e0, rrAB7(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg8(end, :))/1000e0, rrAB8(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 lambda= 10m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 0$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m');
L{3}= horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m');
L{4}= horzcat('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$\lambda_\perp= 10$ m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg9(end, :)*1e-3), rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg10(end, :)*1e-3), rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg11(end, :)*1e-3), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg12(end, :)*1e-3), rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg9(end, :)), rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg10(end, :)), rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg11(end, :)), rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg12(end, :)), rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg9(end, :))/1000e0, rrAB9(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg10(end, :))/1000e0, rrAB10(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg11(end, :))/1000e0, rrAB11(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg12(end, :))/1000e0, rrAB12(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 lambda= 1m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 0$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m');
L{3}= horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m');
L{4}= horzcat('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$\lambda_\perp= 1$ m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg13(end, :)*1e-3), rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg14(end, :)*1e-3), rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg15(end, :)*1e-3), rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg16(end, :)*1e-3), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg13(end, :)), rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg14(end, :)), rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg15(end, :)), rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg16(end, :)), rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg13(end, :))/1000e0, rrAB13(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg14(end, :))/1000e0, rrAB14(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg15(end, :))/1000e0, rrAB15(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg16(end, :))/1000e0, rrAB16(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 lambda= 0.5m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 0$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m');
L{3}= horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m');
L{4}= horzcat('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$\lambda_\perp= 0.5$ m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg17(end, :)*1e-3), rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg18(end, :)*1e-3), rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg19(end, :)*1e-3), rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg20(end, :)*1e-3), rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg17(end, :)), rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg18(end, :)), rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg19(end, :)), rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg20(end, :)), rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg17(end, :))/1000e0, rrAB17(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg18(end, :))/1000e0, rrAB18(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg19(end, :))/1000e0, rrAB19(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg20(end, :))/1000e0, rrAB20(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% PLOT LINE MOMENTS V0 lambda= 0.25m

clc
close all

clear LH L

cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= 0; texty= 1200;

fignum= 0;
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize+ dxfigsize yfigsize+ dyfigsize])

subplot(3, 3, 1)
plot(smooth(DensFiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(DensFiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(DensFiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$n$ [m$^{-3}$]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$E_{\parallel 0}= 0$ V/m');
L{2}= horzcat('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m');
L{3}= horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m');
L{4}= horzcat('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 2)
plot(smooth(TempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(TempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(TempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
title('$\lambda_\perp= 0.25$ m', 'interpreter', 'latex', 'FontSize', 25)
xlabel('$T_i$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 3)
plot(smooth(-UParFiltAvrg21(end, :)*1e-3), rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(-UParFiltAvrg22(end, :)*1e-3), rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg23(end, :)*1e-3), rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(-UParFiltAvrg24(end, :)*1e-3), rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$u_{\parallel}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 4)
plot(smooth(WPerp1FiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp1FiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp1FiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 1}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 5)
plot(smooth(WPerp2FiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WPerp2FiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WPerp2FiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\perp 2}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 6)
plot(smooth(WParFiltAvrg21(end, :)), rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(WParFiltAvrg22(end, :)), rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg23(end, :)), rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(WParFiltAvrg24(end, :)), rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$w_{\parallel}$ [eV]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 7)
plot(smooth(Perp1TempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp1TempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp1TempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 1}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 8)
plot(smooth(Perp2TempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(Perp2TempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(Perp2TempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\perp 2}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

subplot(3, 3, 9)
plot(smooth(ParTempFiltAvrg21(end, :))/1000e0, rrAB21(1, :)/1000e0, 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(smooth(ParTempFiltAvrg22(end, :))/1000e0, rrAB22(1, :)/1000e0, 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg23(end, :))/1000e0, rrAB23(1, :)/1000e0, 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(smooth(ParTempFiltAvrg24(end, :))/1000e0, rrAB24(1, :)/1000e0, 'g', 'MarkerSize', 20, 'LineWidth', 2)
set(gca, 'FontSize', fsize);
xlabel('$T_{\parallel}$ [1000 K]', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$r$ [1000 km]', 'interpreter', 'latex', 'FontSize', 25)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gcf, 'color','white');
ylim([0.34 3.1]);
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCMoments.png')]);

%% RUN QUARTIC DIPOLE POLYNOMIAL ROOT-FINDER BOUNDARY ALTITUDES:

clc
close all

tic

for s= 1:1:Stot;
    for f= 1:1:1;
        pdip(:)= Rank(r).Specie(s).FluxTube(f).pGC(:);
        qdip(:)= Rank(r).Specie(s).FluxTube(f).qGL(:);
        
        for Qind= NqLB:1:NqUB;
            
            Specie(s).FluxTube(f).QCell(Qind).Ap= 0e0; % From quartic form
            Specie(s).FluxTube(f).QCell(Qind).Bp= 0e0;
            Specie(s).FluxTube(f).QCell(Qind).Cp= 1e0/(pdip(Qind)* ...
                qdip(Qind)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).Dp= -1e0/(qdip(Qind)^2e0);
            
            Specie(s).FluxTube(f).QCell(Qind).Ab= -Specie(s).FluxTube(f).QCell(Qind).Bp; % From resolvent cubic form
            Specie(s).FluxTube(f).QCell(Qind).Bb= Specie(s).FluxTube(f).QCell(Qind).Ap* ...
                Specie(s).FluxTube(f).QCell(Qind).Cp- 4e0*Specie(s).FluxTube(f).QCell(Qind).Dp;
            Specie(s).FluxTube(f).QCell(Qind).Cb= 4e0*Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Dp- Specie(s).FluxTube(f).QCell(Qind).Cp^2e0 ...
                - Specie(s).FluxTube(f).QCell(Qind).Ap^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Dp;
            
            Specie(s).FluxTube(f).QCell(Qind).D3= Specie(s).FluxTube(f).QCell(Qind).Bb^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ab^2e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Cb* ...
                Specie(s).FluxTube(f).QCell(Qind).Ab^3e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Bb^3e0 ...
                + 18e0*Specie(s).FluxTube(f).QCell(Qind).Ab* ...
                Specie(s).FluxTube(f).QCell(Qind).Bb* ...
                Specie(s).FluxTube(f).QCell(Qind).Cb ...
                - 27e0*Specie(s).FluxTube(f).QCell(Qind).Cb^2e0; % Resolvent cubic discriminant
            
            Specie(s).FluxTube(f).QCell(Qind).D4= (Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Cp^3e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^3e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp^3e0 ...
                + 18e0*Specie(s).FluxTube(f).QCell(Qind).Cp^3e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap ...
                - 27e0*Specie(s).FluxTube(f).QCell(Qind).Cp^4e0+ ...
                256e0*Specie(s).FluxTube(f).QCell(Qind).Dp^3e0) ...
                + Specie(s).FluxTube(f).QCell(Qind).Dp* ...
                (-4e0*Specie(s).FluxTube(f).QCell(Qind).Bp^3e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                + 18e0*Specie(s).FluxTube(f).QCell(Qind).Cp* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^3e0 ...
                + 16e0*Specie(s).FluxTube(f).QCell(Qind).Bp^4e0- ...
                80e0*Specie(s).FluxTube(f).QCell(Qind).Cp* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp^2e0 ...
                *Specie(s).FluxTube(f).QCell(Qind).Ap- ...
                6e0*Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                + 144e0*Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp)+ ...
                Specie(s).FluxTube(f).QCell(Qind).Dp^2e0 ...
                *(-27e0*Specie(s).FluxTube(f).QCell(Qind).Ap^4e0+ ...
                144e0*Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                - 128e0*Specie(s).FluxTube(f).QCell(Qind).Bp^2e0- ...
                192e0*Specie(s).FluxTube(f).QCell(Qind).Cp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap); % Original quartic disrcriminant
            
            Specie(s).FluxTube(f).QCell(Qind).Abb= Specie(s).FluxTube(f).QCell(Qind).Bb- ...
                Specie(s).FluxTube(f).QCell(Qind).Ab^2e0/3e0;
            Specie(s).FluxTube(f).QCell(Qind).Bbb= 2e0*Specie(s).FluxTube(f).QCell(Qind).Ab^3e0/27e0- ...
                Specie(s).FluxTube(f).QCell(Qind).Ab ...
                *Specie(s).FluxTube(f).QCell(Qind).Bb/3e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).Cb;
            Specie(s).FluxTube(f).QCell(Qind).Delta= -Specie(s).FluxTube(f).QCell(Qind).Bbb/2e0;
            Specie(s).FluxTube(f).QCell(Qind).Epsilon= Specie(s).FluxTube(f).QCell(Qind).Abb/3e0;
            
            Specie(s).FluxTube(f).QCell(Qind).Thetap= acos(Specie(s).FluxTube(f).QCell(Qind).Delta ...
                /sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon^3e0));
            Specie(s).FluxTube(f).QCell(Qind).sigma21= ...
                2e0*sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon) ...
                *cos(Specie(s).FluxTube(f).QCell(Qind).Thetap/3e0) ...
                - Specie(s).FluxTube(f).QCell(Qind).Ab/3e0; % Resolvent cubic roots for D3< 0
            Specie(s).FluxTube(f).QCell(Qind).sigma22= ...
                2e0*sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon) ...
                *cos((Specie(s).FluxTube(f).QCell(Qind).Thetap+ 2e0*pi)/3e0) ...
                - Specie(s).FluxTube(f).QCell(Qind).Ab/3e0;
            Specie(s).FluxTube(f).QCell(Qind).sigma23= ...
                2e0*sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon)...
                *cos((Specie(s).FluxTube(f).QCell(Qind).Thetap+ 4e0*pi)/3e0) ...
                - Specie(s).FluxTube(f).QCell(Qind).Ab/3e0;
            Specie(s).FluxTube(f).QCell(Qind).sigma2= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).sigma23)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).sigma23)^2e0); % Choose real cubic root
            Specie(s).FluxTube(f).QCell(Qind).sigma= ...
                Specie(s).FluxTube(f).QCell(Qind).sigma2;
            
            Specie(s).FluxTube(f).QCell(Qind).mu= ...
                sqrt(Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                Specie(s).FluxTube(f).QCell(Qind).Bp+ ...
                Specie(s).FluxTube(f).QCell(Qind).sigma);
            
            if Specie(s).FluxTube(f).QCell(Qind).mu ~= 0;
                Specie(s).FluxTube(f).QCell(Qind).nu= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    Specie(s).FluxTube(f).QCell(Qind).mu^2e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp+ ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).Ap* ...
                    Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    8e0*Specie(s).FluxTube(f).QCell(Qind).Cp- ...
                    Specie(s).FluxTube(f).QCell(Qind).Ap^3e0)/ ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).mu));
                Specie(s).FluxTube(f).QCell(Qind).pii= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    Specie(s).FluxTube(f).QCell(Qind).mu^2e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).Ap* ...
                    Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    8e0*Specie(s).FluxTube(f).QCell(Qind).Cp- ...
                    Specie(s).FluxTube(f).QCell(Qind).Ap^3e0)/ ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).mu));
            else
                Specie(s).FluxTube(f).QCell(Qind).nu= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp+ ...
                    2e0*sqrt(Specie(s).FluxTube(f).QCell(Qind).sigma^2e0- ...
                    4e0*Specie(s).FluxTube(f).QCell(Qind).Dp));
                Specie(s).FluxTube(f).QCell(Qind).pii= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    2e0*sqrt(Specie(s).FluxTube(f).QCell(Qind).sigma^2e0- ...
                    4e0*Specie(s).FluxTube(f).QCell(Qind).Dp));
            end
            
            Specie(s).FluxTube(f).QCell(Qind).gamma1p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).nu/2e0; % Original quartic roots
            Specie(s).FluxTube(f).QCell(Qind).gamma2p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0- ...
                Specie(s).FluxTube(f).QCell(Qind).nu/2e0;
            Specie(s).FluxTube(f).QCell(Qind).gamma3p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0- ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).pii/2e0;
            Specie(s).FluxTube(f).QCell(Qind).gamma4p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0- ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0- ...
                Specie(s).FluxTube(f).QCell(Qind).pii/2e0;
            
            Specie(s).FluxTube(f).QCell(Qind).gamma1= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma1p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma1p)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).gamma2= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma2p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma2p)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).gamma3= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma3p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma3p)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).gamma4= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma4p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma4p)^2e0);
            
            Specie(s).FluxTube(f).QCell(Qind).r1= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma1*RE; % Revert quartic roots with (q, p) into (r, theta)
            Specie(s).FluxTube(f).QCell(Qind).r2= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma2*RE;
            Specie(s).FluxTube(f).QCell(Qind).r3= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma3*RE;
            Specie(s).FluxTube(f).QCell(Qind).r4= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma4*RE;
            Specie(s).FluxTube(f).QCell(Qind).theta1= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r1/ ...
                (RE*pdip(Qind))));
            Specie(s).FluxTube(f).QCell(Qind).theta2= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r2/...
                (RE*pdip(Qind))));
            Specie(s).FluxTube(f).QCell(Qind).theta3= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r3/ ...
                (RE*pdip(Qind))));
            Specie(s).FluxTube(f).QCell(Qind).theta4= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r4/ ...
                (RE*pdip(Qind))));
            
            Specie(s).FluxTube(f).QCell(Qind).qtest1= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta1)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r1^2e0); % Revert back to (q, p)
            Specie(s).FluxTube(f).QCell(Qind).qtest2= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta2)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r2^2e0);
            Specie(s).FluxTube(f).QCell(Qind).qtest3= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta3)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r3^2e0);
            Specie(s).FluxTube(f).QCell(Qind).qtest4= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta4)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r4^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest1= ...
                Specie(s).FluxTube(f).QCell(Qind).r1/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta1))^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest2= ...
                Specie(s).FluxTube(f).QCell(Qind).r2/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta2))^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest3= ...
                Specie(s).FluxTube(f).QCell(Qind).r3/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta3))^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest4= ...
                Specie(s).FluxTube(f).QCell(Qind).r4/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta4))^2e0);
            
            % Note gamma 3 is real positive root. For q< 0 (q> 0), phase-shift theta by
            % pi (0) to get correct sign of q. (above and below dipole equator)
            
            Specie(s).FluxTube(f).QCell(Qind).rfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).r3; % Get final (r, theta) values
            
            if qdip(Qind)< 0 | ...
                    qdip(Qind)== 0e0; % Phase shift root 3 solution
                Specie(s).FluxTube(f).QCell(Qind).thetafinalG= ...
                    pi- Specie(s).FluxTube(f).QCell(Qind).theta3;
            else if qdip(Qind)> 0;
                    Specie(s).FluxTube(f).QCell(Qind).thetafinalG= ...
                        Specie(s).FluxTube(f).QCell(Qind).theta3;
                end
            end
            
            % Get final (x, y, z) values
            
            Specie(s).FluxTube(f).QCell(Qind).phifinalG= pi/2e0;
            Specie(s).FluxTube(f).QCell(Qind).xfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG* ...
                sin(Specie(s).FluxTube(f).QCell(Qind).thetafinalG)* ...
                cos(Specie(s).FluxTube(f).QCell(Qind).phifinalG);
            Specie(s).FluxTube(f).QCell(Qind).yfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG* ...
                sin(Specie(s).FluxTube(f).QCell(Qind).thetafinalG)* ...
                sin(Specie(s).FluxTube(f).QCell(Qind).phifinalG);
            Specie(s).FluxTube(f).QCell(Qind).zfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG* ...
                cos(Specie(s).FluxTube(f).QCell(Qind).thetafinalG);
            
            %             Specie(s).FluxTube(f).QCell(Qind).phifinalG= ...
            %                 atan2(Specie(s).FluxTube(f).QCell(Qind).yfinalG, ...
            %                 Specie(s).FluxTube(f).QCell(Qind).xfinalG);
            
            % Get final (q, p) value to compare with initial input:
            
            Specie(s).FluxTube(f).QCell(Qind).qfinalG= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).thetafinalG)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).rfinalG^2e0);
            Specie(s).FluxTube(f).QCell(Qind).pfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).thetafinalG))^2e0);
            
            Specie(s).FluxTube(f).QCell(Qind).qfinalp= ...
                isnan(real(Specie(s).FluxTube(f).QCell(Qind).qfinalG)); % Set NaN values to zero
            Specie(s).FluxTube(f).QCell(Qind).pfinalp= ...
                isnan(real(Specie(s).FluxTube(f).QCell(Qind).pfinalG)); % Set NaN values to zero
            if Specie(s).FluxTube(f).QCell(Qind).qfinalp == 1;
                Specie(s).FluxTube(f).QCell(Qind).qfinalG= 0e0;
            end
            if Specie(s).FluxTube(f).QCell(Qind).pfinalp == 1;
                Specie(s).FluxTube(f).QCell(Qind).pfinalG= 0e0;
            end
            
            if abs(qdip(Qind)- ...
                    Specie(s).FluxTube(f).QCell(Qind).qfinalG) > 1e-14
                disp('BAD Q')
            end
            
            if abs(pdip(Qind)- Specie(s).FluxTube(f).QCell(Qind).pfinalG) > 1e-13
                disp('BAD P')
            end
            
            Specie(s).FluxTube(f).rfinalG(Qind)= Specie(s).FluxTube(f).QCell(Qind).rfinalG;
            
        end
        
        Rank(r).Specie(s).FluxTube(f).rGL(:)= Specie(s).FluxTube(f).rfinalG(:);
        
        pdip(:)= Rank(r).Specie(s).FluxTube(f).pGC(:);
        qdip(:)= Rank(r).Specie(s).FluxTube(f).qGH(:);
        
        for Qind= NqLB:1:NqUB;
            
            Specie(s).FluxTube(f).QCell(Qind).Ap= 0e0; % From quartic form
            Specie(s).FluxTube(f).QCell(Qind).Bp= 0e0;
            Specie(s).FluxTube(f).QCell(Qind).Cp= 1e0/(pdip(Qind)* ...
                qdip(Qind)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).Dp= -1e0/(qdip(Qind)^2e0);
            
            Specie(s).FluxTube(f).QCell(Qind).Ab= -Specie(s).FluxTube(f).QCell(Qind).Bp; % From resolvent cubic form
            Specie(s).FluxTube(f).QCell(Qind).Bb= Specie(s).FluxTube(f).QCell(Qind).Ap* ...
                Specie(s).FluxTube(f).QCell(Qind).Cp- 4e0*Specie(s).FluxTube(f).QCell(Qind).Dp;
            Specie(s).FluxTube(f).QCell(Qind).Cb= 4e0*Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Dp- Specie(s).FluxTube(f).QCell(Qind).Cp^2e0 ...
                - Specie(s).FluxTube(f).QCell(Qind).Ap^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Dp;
            
            Specie(s).FluxTube(f).QCell(Qind).D3= Specie(s).FluxTube(f).QCell(Qind).Bb^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ab^2e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Cb* ...
                Specie(s).FluxTube(f).QCell(Qind).Ab^3e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Bb^3e0 ...
                + 18e0*Specie(s).FluxTube(f).QCell(Qind).Ab* ...
                Specie(s).FluxTube(f).QCell(Qind).Bb* ...
                Specie(s).FluxTube(f).QCell(Qind).Cb ...
                - 27e0*Specie(s).FluxTube(f).QCell(Qind).Cb^2e0; % Resolvent cubic discriminant
            
            Specie(s).FluxTube(f).QCell(Qind).D4= (Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Cp^3e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^3e0 ...
                - 4e0*Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp^3e0 ...
                + 18e0*Specie(s).FluxTube(f).QCell(Qind).Cp^3e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap ...
                - 27e0*Specie(s).FluxTube(f).QCell(Qind).Cp^4e0+ ...
                256e0*Specie(s).FluxTube(f).QCell(Qind).Dp^3e0) ...
                + Specie(s).FluxTube(f).QCell(Qind).Dp* ...
                (-4e0*Specie(s).FluxTube(f).QCell(Qind).Bp^3e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                + 18e0*Specie(s).FluxTube(f).QCell(Qind).Cp* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^3e0 ...
                + 16e0*Specie(s).FluxTube(f).QCell(Qind).Bp^4e0- ...
                80e0*Specie(s).FluxTube(f).QCell(Qind).Cp* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp^2e0 ...
                *Specie(s).FluxTube(f).QCell(Qind).Ap- ...
                6e0*Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                + 144e0*Specie(s).FluxTube(f).QCell(Qind).Cp^2e0* ...
                Specie(s).FluxTube(f).QCell(Qind).Bp)+ ...
                Specie(s).FluxTube(f).QCell(Qind).Dp^2e0 ...
                *(-27e0*Specie(s).FluxTube(f).QCell(Qind).Ap^4e0+ ...
                144e0*Specie(s).FluxTube(f).QCell(Qind).Bp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap^2e0 ...
                - 128e0*Specie(s).FluxTube(f).QCell(Qind).Bp^2e0- ...
                192e0*Specie(s).FluxTube(f).QCell(Qind).Cp* ...
                Specie(s).FluxTube(f).QCell(Qind).Ap); % Original quartic disrcriminant
            
            Specie(s).FluxTube(f).QCell(Qind).Abb= Specie(s).FluxTube(f).QCell(Qind).Bb- ...
                Specie(s).FluxTube(f).QCell(Qind).Ab^2e0/3e0;
            Specie(s).FluxTube(f).QCell(Qind).Bbb= 2e0*Specie(s).FluxTube(f).QCell(Qind).Ab^3e0/27e0- ...
                Specie(s).FluxTube(f).QCell(Qind).Ab ...
                *Specie(s).FluxTube(f).QCell(Qind).Bb/3e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).Cb;
            Specie(s).FluxTube(f).QCell(Qind).Delta= -Specie(s).FluxTube(f).QCell(Qind).Bbb/2e0;
            Specie(s).FluxTube(f).QCell(Qind).Epsilon= Specie(s).FluxTube(f).QCell(Qind).Abb/3e0;
            
            Specie(s).FluxTube(f).QCell(Qind).Thetap= acos(Specie(s).FluxTube(f).QCell(Qind).Delta ...
                /sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon^3e0));
            Specie(s).FluxTube(f).QCell(Qind).sigma21= ...
                2e0*sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon) ...
                *cos(Specie(s).FluxTube(f).QCell(Qind).Thetap/3e0) ...
                - Specie(s).FluxTube(f).QCell(Qind).Ab/3e0; % Resolvent cubic roots for D3< 0
            Specie(s).FluxTube(f).QCell(Qind).sigma22= ...
                2e0*sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon) ...
                *cos((Specie(s).FluxTube(f).QCell(Qind).Thetap+ 2e0*pi)/3e0) ...
                - Specie(s).FluxTube(f).QCell(Qind).Ab/3e0;
            Specie(s).FluxTube(f).QCell(Qind).sigma23= ...
                2e0*sqrt(-Specie(s).FluxTube(f).QCell(Qind).Epsilon)...
                *cos((Specie(s).FluxTube(f).QCell(Qind).Thetap+ 4e0*pi)/3e0) ...
                - Specie(s).FluxTube(f).QCell(Qind).Ab/3e0;
            Specie(s).FluxTube(f).QCell(Qind).sigma2= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).sigma23)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).sigma23)^2e0); % Choose real cubic root
            Specie(s).FluxTube(f).QCell(Qind).sigma= ...
                Specie(s).FluxTube(f).QCell(Qind).sigma2;
            
            Specie(s).FluxTube(f).QCell(Qind).mu= ...
                sqrt(Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                Specie(s).FluxTube(f).QCell(Qind).Bp+ ...
                Specie(s).FluxTube(f).QCell(Qind).sigma);
            
            if Specie(s).FluxTube(f).QCell(Qind).mu ~= 0;
                Specie(s).FluxTube(f).QCell(Qind).nu= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    Specie(s).FluxTube(f).QCell(Qind).mu^2e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp+ ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).Ap* ...
                    Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    8e0*Specie(s).FluxTube(f).QCell(Qind).Cp- ...
                    Specie(s).FluxTube(f).QCell(Qind).Ap^3e0)/ ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).mu));
                Specie(s).FluxTube(f).QCell(Qind).pii= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    Specie(s).FluxTube(f).QCell(Qind).mu^2e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).Ap* ...
                    Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    8e0*Specie(s).FluxTube(f).QCell(Qind).Cp- ...
                    Specie(s).FluxTube(f).QCell(Qind).Ap^3e0)/ ...
                    (4e0*Specie(s).FluxTube(f).QCell(Qind).mu));
            else
                Specie(s).FluxTube(f).QCell(Qind).nu= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp+ ...
                    2e0*sqrt(Specie(s).FluxTube(f).QCell(Qind).sigma^2e0- ...
                    4e0*Specie(s).FluxTube(f).QCell(Qind).Dp));
                Specie(s).FluxTube(f).QCell(Qind).pii= ...
                    sqrt(3e0*Specie(s).FluxTube(f).QCell(Qind).Ap^2e0/4e0- ...
                    2e0*Specie(s).FluxTube(f).QCell(Qind).Bp- ...
                    2e0*sqrt(Specie(s).FluxTube(f).QCell(Qind).sigma^2e0- ...
                    4e0*Specie(s).FluxTube(f).QCell(Qind).Dp));
            end
            
            Specie(s).FluxTube(f).QCell(Qind).gamma1p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).nu/2e0; % Original quartic roots
            Specie(s).FluxTube(f).QCell(Qind).gamma2p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0- ...
                Specie(s).FluxTube(f).QCell(Qind).nu/2e0;
            Specie(s).FluxTube(f).QCell(Qind).gamma3p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0- ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0+ ...
                Specie(s).FluxTube(f).QCell(Qind).pii/2e0;
            Specie(s).FluxTube(f).QCell(Qind).gamma4p= ...
                -Specie(s).FluxTube(f).QCell(Qind).Ap/4e0- ...
                Specie(s).FluxTube(f).QCell(Qind).mu/2e0- ...
                Specie(s).FluxTube(f).QCell(Qind).pii/2e0;
            
            Specie(s).FluxTube(f).QCell(Qind).gamma1= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma1p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma1p)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).gamma2= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma2p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma2p)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).gamma3= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma3p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma3p)^2e0);
            Specie(s).FluxTube(f).QCell(Qind).gamma4= ...
                sqrt(real(Specie(s).FluxTube(f).QCell(Qind).gamma4p)^2e0+ ...
                imag(Specie(s).FluxTube(f).QCell(Qind).gamma4p)^2e0);
            
            Specie(s).FluxTube(f).QCell(Qind).r1= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma1*RE; % Revert quartic roots with (q, p) into (r, theta)
            Specie(s).FluxTube(f).QCell(Qind).r2= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma2*RE;
            Specie(s).FluxTube(f).QCell(Qind).r3= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma3*RE;
            Specie(s).FluxTube(f).QCell(Qind).r4= ...
                Specie(s).FluxTube(f).QCell(Qind).gamma4*RE;
            Specie(s).FluxTube(f).QCell(Qind).theta1= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r1/ ...
                (RE*pdip(Qind))));
            Specie(s).FluxTube(f).QCell(Qind).theta2= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r2/...
                (RE*pdip(Qind))));
            Specie(s).FluxTube(f).QCell(Qind).theta3= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r3/ ...
                (RE*pdip(Qind))));
            Specie(s).FluxTube(f).QCell(Qind).theta4= ...
                asin(sqrt(Specie(s).FluxTube(f).QCell(Qind).r4/ ...
                (RE*pdip(Qind))));
            
            Specie(s).FluxTube(f).QCell(Qind).qtest1= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta1)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r1^2e0); % Revert back to (q, p)
            Specie(s).FluxTube(f).QCell(Qind).qtest2= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta2)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r2^2e0);
            Specie(s).FluxTube(f).QCell(Qind).qtest3= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta3)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r3^2e0);
            Specie(s).FluxTube(f).QCell(Qind).qtest4= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).theta4)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).r4^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest1= ...
                Specie(s).FluxTube(f).QCell(Qind).r1/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta1))^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest2= ...
                Specie(s).FluxTube(f).QCell(Qind).r2/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta2))^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest3= ...
                Specie(s).FluxTube(f).QCell(Qind).r3/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta3))^2e0);
            Specie(s).FluxTube(f).QCell(Qind).ptest4= ...
                Specie(s).FluxTube(f).QCell(Qind).r4/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).theta4))^2e0);
            
            % Note gamma 3 is real positive root. For q< 0 (q> 0), phase-shift theta by
            % pi (0) to get correct sign of q. (above and below dipole equator)
            
            Specie(s).FluxTube(f).QCell(Qind).rfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).r3; % Get final (r, theta) values
            
            if qdip(Qind)< 0 | ...
                    qdip(Qind)== 0e0; % Phase shift root 3 solution
                Specie(s).FluxTube(f).QCell(Qind).thetafinalG= ...
                    pi- Specie(s).FluxTube(f).QCell(Qind).theta3;
            else if qdip(Qind)> 0;
                    Specie(s).FluxTube(f).QCell(Qind).thetafinalG= ...
                        Specie(s).FluxTube(f).QCell(Qind).theta3;
                end
            end
            
            % Get final (x, y, z) values
            
            Specie(s).FluxTube(f).QCell(Qind).phifinalG= pi/2e0;
            Specie(s).FluxTube(f).QCell(Qind).xfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG* ...
                sin(Specie(s).FluxTube(f).QCell(Qind).thetafinalG)* ...
                cos(Specie(s).FluxTube(f).QCell(Qind).phifinalG);
            Specie(s).FluxTube(f).QCell(Qind).yfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG* ...
                sin(Specie(s).FluxTube(f).QCell(Qind).thetafinalG)* ...
                sin(Specie(s).FluxTube(f).QCell(Qind).phifinalG);
            Specie(s).FluxTube(f).QCell(Qind).zfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG* ...
                cos(Specie(s).FluxTube(f).QCell(Qind).thetafinalG);
            
            %             Specie(s).FluxTube(f).QCell(Qind).phifinalG= ...
            %                 atan2(Specie(s).FluxTube(f).QCell(Qind).yfinalG, ...
            %                 Specie(s).FluxTube(f).QCell(Qind).xfinalG);
            
            % Get final (q, p) value to compare with initial input:
            
            Specie(s).FluxTube(f).QCell(Qind).qfinalG= ...
                (RE^2e0)*cos(Specie(s).FluxTube(f).QCell(Qind).thetafinalG)/ ...
                (Specie(s).FluxTube(f).QCell(Qind).rfinalG^2e0);
            Specie(s).FluxTube(f).QCell(Qind).pfinalG= ...
                Specie(s).FluxTube(f).QCell(Qind).rfinalG/ ...
                (RE*(sin(Specie(s).FluxTube(f).QCell(Qind).thetafinalG))^2e0);
            
            Specie(s).FluxTube(f).QCell(Qind).qfinalp= ...
                isnan(real(Specie(s).FluxTube(f).QCell(Qind).qfinalG)); % Set NaN values to zero
            Specie(s).FluxTube(f).QCell(Qind).pfinalp= ...
                isnan(real(Specie(s).FluxTube(f).QCell(Qind).pfinalG)); % Set NaN values to zero
            if Specie(s).FluxTube(f).QCell(Qind).qfinalp == 1;
                Specie(s).FluxTube(f).QCell(Qind).qfinalG= 0e0;
            end
            if Specie(s).FluxTube(f).QCell(Qind).pfinalp == 1;
                Specie(s).FluxTube(f).QCell(Qind).pfinalG= 0e0;
            end
            
            if abs(qdip(Qind)- ...
                    Specie(s).FluxTube(f).QCell(Qind).qfinalG) > 1e-14
                disp('BAD Q')
            end
            
            if abs(pdip(Qind)- Specie(s).FluxTube(f).QCell(Qind).pfinalG) > 1e-13
                disp('BAD P')
            end
            
            Specie(s).FluxTube(f).rfinalG(Qind)= Specie(s).FluxTube(f).QCell(Qind).rfinalG;
            
        end
        
        Rank(r).Specie(s).FluxTube(f).rGH(:)= Specie(s).FluxTube(f).rfinalG(:);
        
    end
end

toc

disp('ALTITUDE BOUNDARIES COMPLETE')

%% PLOT NC FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

Elim1= 1;
Elim2= 30;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= 1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= 1;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= 1;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= 1;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= 1;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= 1;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('NC FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT NC FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 50;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -2;
textyE= 65;
textx2E= -15;
texty2E= 65;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 2;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= 1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= 1;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= 1;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= 1;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= 1;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= 1;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([1 13 25 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([1 13 25 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('NC ENERGY FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT NC UPFLOW FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 6;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str((round(Time(nn)/3600e0, 2))*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str((round(Time(nn)/3600e0, 0))*1e0), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('NC UPFLOW FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT NC UPFLOW FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 50;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -2;
textyE= 65;
textx2E= -15;
texty2E= 65;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 6;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str((round(Time(nn)/3600e0, 2))*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([1 13 25 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str((round(Time(nn)/3600e0, 0))*1e0), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([0 13 25.5 38 50]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(0.25), ...
    num2str(round(mean((6.242e18)*EnergyG(25:26)), 1)), ...
    num2str(0.75), ...
    num2str(round((6.242e18)*EnergyG(50), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(0)});
xticks([1 13 25 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('NC UPFLOW FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT Z FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 19; %19;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 10; %20;
    Vperp12lim2= 91; %81;
    Vparlim1= 10; %20;
    Vparlim2= 91; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

roundfac= 0;

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('Z FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT Z FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 19;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 70;
alphalim1= 1;
alphalim2= 70;
thetalim1= 1;
thetalim2= 70;

textxE= -2;
textyE= 85;
textx2E= -15;
texty2E= 85;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 18 35.5 53 70]);
xticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 18 35.5 53 70]);
xticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('Z FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-lambda FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 4; %19 for V1 and V21, 4 for V4 and V24
Qind2= Qind1;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 10; %20;
    Vperp12lim2= 91; %81;
    Vparlim1= 10; %20;
    Vparlim2= 91; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 4;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end

roundfac= 0;

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

Runn= 24;
Qind= Qind2;
if Runn == 21
    FLogVperp1VparRedp= FLogVperp1VparRed21;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp21;
    FLogVperp2VparRedp= FLogVperp2VparRed21;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp21;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red21;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp21;
    nn= Nend21;
    Time= TimeT21;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed21;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed21;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed21;
end
if Runn == 24
    FLogVperp1VparRedp= FLogVperp1VparRed24;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp24;
    FLogVperp2VparRedp= FLogVperp2VparRed24;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp24;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red24;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp24;
    nn= Nend24;
    Time= TimeT24;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed24;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed24;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed24;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V-lambda FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-PC FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 11; %4; %19 for V1 and V21, 4 for V4 and V24
Qind2= 8;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');
% set(gca, 'nextplot', 'replacechildren');
% v= VideoWriter(horzcat(dataexpdir, 'VPCdistribsvid.avi'));
% open(v);

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1 
    Vperp12lim1= 10; %20;
    Vperp12lim2= 91; %81;
    Vparlim1= 10; %20;
    Vparlim2= 91; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 6;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end
roundfac= 0;

% for Qind= NqLB:1:NqUB
    subplot(2, 3, 1)
    if InterpFlag == 0
        pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    if InterpFlag == 0
        yticks([4 9 14.5 20 25]);
        yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
            num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
            num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
            num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
            num2str(round(-VparGCp(25)*1e-3, roundfac))});
        xticks([4 9 14.5 20 25]);
        xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
            num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    end
    if InterpFlag == 1
        yticks([20 35 50.5 66 81]);
        yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
            num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
            num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
            num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
            num2str(round(-VparGCqq(81)*1e-3, roundfac))});
        xticks([20 35 50.5 66 81]);
        xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    end

    subplot(2, 3, 2)
    if InterpFlag == 0
        pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/60e0, 2)), ' min'), ...
        'interpreter', 'latex', 'FontSize', 25);
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    if InterpFlag == 0
        yticks([4 9 14.5 20 25]);
        yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
            num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
            num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
            num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
            num2str(round(-VparGCp(25)*1e-3, roundfac))});
        xticks([4 9 14.5 20 25]);
        xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    end
    if InterpFlag == 1
        yticks([20 35 50.5 66 81]);
        yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
            num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
            num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
            num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
            num2str(round(-VparGCqq(81)*1e-3, roundfac))});
        xticks([20 35 50.5 66 81]);
        xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    end

    subplot(2, 3, 3)
    if InterpFlag == 0
        pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    if InterpFlag == 0
        xticks([4 9 14.5 20 25]);
        xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
        yticks([4 9 14.5 20 25]);
        yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
            num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
            num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
            num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
    end
    if InterpFlag == 1
        xticks([20 35 50.5 66 81]);
        xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
            num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
        yticks([20 35 50.5 66 81]);
        yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
            num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
            num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
            num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
            num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
    end
%     pause(pausevar)
%     frame= getframe(gcf);
%     writeVideo(v, frame);
% end
% close(v);

Runn= 6;
Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end
% if Runn == 24
%     FLogVperp1VparRedp= FLogVperp1VparRed24;
%     FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp24;
%     FLogVperp2VparRedp= FLogVperp2VparRed24;
%     FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp24;
%     FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red24;
%     FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp24;
%     nn= Nend24;
%     Time= TimeT24;
%     FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed24;
%     FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed24;
%     FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed24;
% end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/60e0, 2)), ' min'), ...
        'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V-PC FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-W FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 2; %19 for V1 and V21, 4 for V4 and V24
Qind2= Qind1;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');
% set(gca, 'nextplot', 'replacechildren');
% v= VideoWriter(horzcat(dataexpdir, 'VPCdistribsvid.avi'));
% open(v);

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1 
    Vperp12lim1= 1; %20;
    Vperp12lim2= 100; %81;
    Vparlim1= 1; %20;
    Vparlim2= 100; %81;
end

Elim1= 1;
Elim2= 50;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -3;
textyE= 63;
textx2E= -9;
texty2E= 63;

textx= -15;
texty= -10;
textx2= -15;
texty2= 110;

Runn= 1;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
    DEFEnergyAlphaRed= DEFEnergyAlphaRed1;
    DEFAlphaThetaRed= DEFAlphaThetaRed1;
    DEFEnergyThetaRed= DEFEnergyThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
    DEFEnergyAlphaRed= DEFEnergyAlphaRed2;
    DEFAlphaThetaRed= DEFAlphaThetaRed2;
    DEFEnergyThetaRed= DEFEnergyThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
    DEFEnergyAlphaRed= DEFEnergyAlphaRed3;
    DEFAlphaThetaRed= DEFAlphaThetaRed3;
    DEFEnergyThetaRed= DEFEnergyThetaRed3;
end

roundfac= 1;

% for Qind= NqLB:1:NqUB
    subplot(2, 3, 1)
    if InterpFlag == 0
        pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    yticks([14.5 32.5 50.5 68.5 86.5]);
    yticklabels({num2str(round(-mean(VparGCqq(14:15))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(32:33))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(68:69))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(86:87))*1e-3, roundfac))});
    xticks([14.5 32.5 50.5 68.5 86.5]);
    xticklabels({num2str(round(mean(Vperp1GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(86:87))*1e-3, 1))});

    subplot(2, 3, 2)
    if InterpFlag == 0
        pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/3600e0, 0)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    yticks([14.5 32.5 50.5 68.5 86.5]);
    yticklabels({num2str(round(-mean(VparGCqq(14:15))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(32:33))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(68:69))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(86:87))*1e-3, roundfac))});
    xticks([14.5 32.5 50.5 68.5 86.5]);
    xticklabels({num2str(round(mean(Vperp2GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(86:87))*1e-3, 1))});

    subplot(2, 3, 3)
    if InterpFlag == 0
        pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    yticks([14.5 32.5 50.5 68.5 86.5]);
    yticklabels({num2str(round(mean(Vperp2GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(86:87))*1e-3, 1))});
    xticks([14.5 32.5 50.5 68.5 86.5]);
    xticklabels({num2str(round(mean(Vperp1GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(86:87))*1e-3, 1))});
    
%     pause(pausevar)
%     frame= getframe(gcf);
%     writeVideo(v, frame);
% end
% close(v);

Runn= 3;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
    DEFEnergyAlphaRed= DEFEnergyAlphaRed1;
    DEFAlphaThetaRed= DEFAlphaThetaRed1;
    DEFEnergyThetaRed= DEFEnergyThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
    DEFEnergyAlphaRed= DEFEnergyAlphaRed2;
    DEFAlphaThetaRed= DEFAlphaThetaRed2;
    DEFEnergyThetaRed= DEFEnergyThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
    DEFEnergyAlphaRed= DEFEnergyAlphaRed3;
    DEFAlphaThetaRed= DEFAlphaThetaRed3;
    DEFEnergyThetaRed= DEFEnergyThetaRed3;
end

subplot(2, 3, 4)
    if InterpFlag == 0
        pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    yticks([14.5 32.5 50.5 68.5 86.5]);
    yticklabels({num2str(round(-mean(VparGCqq(14:15))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(32:33))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(68:69))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(86:87))*1e-3, roundfac))});
    xticks([14.5 32.5 50.5 68.5 86.5]);
    xticklabels({num2str(round(mean(Vperp1GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(86:87))*1e-3, 1))});

    subplot(2, 3, 5)
    if InterpFlag == 0
        pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/3600e0, 0)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    yticks([14.5 32.5 50.5 68.5 86.5]);
    yticklabels({num2str(round(-mean(VparGCqq(14:15))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(32:33))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(68:69))*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(86:87))*1e-3, roundfac))});
    xticks([14.5 32.5 50.5 68.5 86.5]);
    xticklabels({num2str(round(mean(Vperp2GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(86:87))*1e-3, 1))});

    subplot(2, 3, 6)
    if InterpFlag == 0
        pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
    end
    if InterpFlag == 1
        pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
    end
    shading interp
    colormap jet
    text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Vperp12lim1 Vperp12lim2]);
    ylim([Vparlim1 Vparlim2]);
    yticks([14.5 32.5 50.5 68.5 86.5]);
    yticklabels({num2str(round(mean(Vperp2GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(86:87))*1e-3, 1))});
    xticks([14.5 32.5 50.5 68.5 86.5]);
    xticklabels({num2str(round(mean(Vperp1GCqq(14:15))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(32:33))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(68:69))*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(86:87))*1e-3, 1))});
    
%     pause(pausevar)
%     frame= getframe(gcf);
%     writeVideo(v, frame);
% end
% close(v);

% subplot(2, 3, 4)
% pcolor((DEFEnergyAlphaRed(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRed(:, :, Qind, nn)))))')
% shading interp
% colormap jet
% text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
% xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
% ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
% set(gca, 'yminortick', 'on','xminortick', 'on');
% set(gca, 'xaxisLocation', 'top')
% % set(gca, 'YDir', 'reverse')
% set(gca, 'FontSize', FontSize);
% set(gcf, 'color','white');
% grid on
% xlim([Elim1 Elim2]);
% ylim([alphalim1 alphalim2]);
% yticks([1 13 25.5 37.5 50]);
% yticklabels({num2str(round(alphaG(50), 1)), ...
%     num2str(135), ...
%     num2str(90), ...
%     num2str(45), ...
%     num2str(0)});
% xticks([11 20.5 30.5 40]);
% xticklabels({num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
%     num2str(round(mean((6.242e18)*EnergyG(20:21)), 0)), ...
%     num2str(round(mean((6.242e18)*EnergyG(30:31)), 0)), ...
%     num2str(round(mean((6.242e18)*EnergyG(40)), 0))});
% 
% subplot(2, 3, 5)
% pcolor((DEFEnergyThetaRed(:, :, Qind, nn)/(max(max(DEFEnergyThetaRed(:, :, Qind, nn)))))')
% shading interp
% colormap jet
% text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
% xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
% ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
% set(gca, 'yminortick', 'on','xminortick', 'on');
% set(gca, 'xaxisLocation', 'top')
% % set(gca, 'YDir', 'reverse')
% set(gca, 'FontSize', FontSize);
% set(gcf, 'color','white');
% grid on
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%         num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
%         num2str(round(Time(nn)/3600e0, 0)), ' hr'), ...
%         'interpreter', 'latex', 'FontSize', 25);
% xlim([Elim1 Elim2]);
% ylim([thetalim1 thetalim2]);
% yticks([1 13 25.5 37.5 50]);
% yticklabels({num2str(round(thetaG(50), 1)), ...
%     num2str(270), ...
%     num2str(180), ...
%     num2str(90), ...
%     num2str(0)});
% xticks([11 20.5 30.5 40]);
% xticklabels({num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
%     num2str(round(mean((6.242e18)*EnergyG(20:21)), 0)), ...
%     num2str(round(mean((6.242e18)*EnergyG(30:31)), 0)), ...
%     num2str(round(mean((6.242e18)*EnergyG(40)), 0))});
% 
% subplot(2, 3, 6)
% pcolor((DEFAlphaThetaRed(:, :, Qind, nn)/(max(max(DEFAlphaThetaRed(:, :, Qind, nn)))))')
% shading interp
% colormap jet
% text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
% xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
% ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
% set(gca, 'yminortick', 'on','xminortick', 'on');
% set(gca, 'xaxisLocation', 'top')
% % set(gca, 'XDir', 'reverse')
% % set(gca, 'YDir', 'reverse')
% set(gca, 'FontSize', FontSize);
% set(gcf, 'color','white');
% grid on
% xlim([alphalim1 alphalim2]);
% ylim([thetalim1 thetalim2]);
% yticks([1 13 25.5 37.5 50]);
% yticklabels({num2str(round(thetaG(50), 1)), ...
%     num2str(270), ...
%     num2str(180), ...
%     num2str(90), ...
%     num2str(0)});
% xticks([1 13 25.5 37.5 50]);
% xticklabels({num2str(round(alphaG(50), 1)), ...
%     num2str(135), ...
%     num2str(90), ...
%     num2str(45), ...
%     num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
    xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
        'interpreter', 'latex', 'FontSize', FontSize)
    caxis([0 1]);

toc

disp('V-W FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 5; %19;
Qind2= 5; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 10; %20;
    Vperp12lim2= 91; %81;
    Vparlim1= 10; %20;
    Vparlim2= 91; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 20;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 21
    FLogVperp1VparRedp= FLogVperp1VparRed21;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp21;
    FLogVperp2VparRedp= FLogVperp2VparRed21;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp21;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red21;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp21;
    nn= Nbeg21;
    Time= TimeT21;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed21;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed21;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed21;
end
if Runn == 22
    FLogVperp1VparRedp= FLogVperp1VparRed22;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp22;
    FLogVperp2VparRedp= FLogVperp2VparRed22;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp22;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red22;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp22;
    nn= Nbeg22;
    Time= TimeT22;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed22;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed22;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed22;
end
if Runn == 23
    FLogVperp1VparRedp= FLogVperp1VparRed23;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp23;
    FLogVperp2VparRedp= FLogVperp2VparRed23;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp23;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red23;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp23;
    nn= Nbeg23;
    Time= TimeT23;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed23;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed23;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed23;
end
if Runn == 24
    FLogVperp1VparRedp= FLogVperp1VparRed24;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp24;
    FLogVperp2VparRedp= FLogVperp2VparRed24;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp24;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red24;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp24;
    nn= Nbeg24;
    Time= TimeT24;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed24;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed24;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed24;
end
if Runn == 8
    FLogVperp1VparRedp= FLogVperp1VparRed8;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp8;
    FLogVperp2VparRedp= FLogVperp2VparRed8;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp8;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red8;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp8;
    nn= Nbeg8;
    Time= TimeT8;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed8;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed8;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed8;
end
if Runn == 12
    FLogVperp1VparRedp= FLogVperp1VparRed12;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp12;
    FLogVperp2VparRedp= FLogVperp2VparRed12;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp12;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red12;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp12;
    nn= Nbeg12;
    Time= TimeT12;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed12;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed12;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed12;
end
if Runn == 16
    FLogVperp1VparRedp= FLogVperp1VparRed16;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp16;
    FLogVperp2VparRedp= FLogVperp2VparRed16;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp16;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red16;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp16;
    nn= Nbeg16;
    Time= TimeT16;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed16;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed16;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed16;
end
if Runn == 20
    FLogVperp1VparRedp= FLogVperp1VparRed20;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp20;
    FLogVperp2VparRedp= FLogVperp2VparRed20;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp20;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red20;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp20;
    nn= Nbeg20;
    Time= TimeT20;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed20;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed20;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed20;
end

roundfac= 0;

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 21
    FLogVperp1VparRedp= FLogVperp1VparRed21;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp21;
    FLogVperp2VparRedp= FLogVperp2VparRed21;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp21;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red21;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp21;
    nn= Nend21;
    Time= TimeT21;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed21;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed21;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed21;
end
if Runn == 22
    FLogVperp1VparRedp= FLogVperp1VparRed22;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp22;
    FLogVperp2VparRedp= FLogVperp2VparRed22;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp22;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red22;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp22;
    nn= Nend22;
    Time= TimeT22;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed22;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed22;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed22;
end
if Runn == 23
    FLogVperp1VparRedp= FLogVperp1VparRed23;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp23;
    FLogVperp2VparRedp= FLogVperp2VparRed23;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp23;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red23;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp23;
    nn= Nend23;
    Time= TimeT23;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed23;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed23;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed23;
end
if Runn == 24
    FLogVperp1VparRedp= FLogVperp1VparRed24;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp24;
    FLogVperp2VparRedp= FLogVperp2VparRed24;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp24;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red24;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp24;
    nn= Nend24;
    Time= TimeT24;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed24;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed24;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed24;
end
if Runn == 8
    FLogVperp1VparRedp= FLogVperp1VparRed8;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp8;
    FLogVperp2VparRedp= FLogVperp2VparRed8;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp8;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red8;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp8;
    nn= Nend8;
    Time= TimeT8;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed8;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed8;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed8;
end
if Runn == 12
    FLogVperp1VparRedp= FLogVperp1VparRed12;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp12;
    FLogVperp2VparRedp= FLogVperp2VparRed12;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp12;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red12;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp12;
    nn= Nend12;
    Time= TimeT12;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed12;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed12;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed12;
end
if Runn == 16
    FLogVperp1VparRedp= FLogVperp1VparRed16;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp16;
    FLogVperp2VparRedp= FLogVperp2VparRed16;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp16;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red16;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp16;
    nn= Nend16;
    Time= TimeT16;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed16;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed16;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed16;
end
if Runn == 20
    FLogVperp1VparRedp= FLogVperp1VparRed20;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp20;
    FLogVperp2VparRedp= FLogVperp2VparRed20;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp20;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red20;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp20;
    nn= Nend20;
    Time= TimeT20;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed20;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed20;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed20;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(9)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, roundfac)), ...
        num2str(round(-VparGCp(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCp(25)*1e-3, roundfac))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(35)*1e-3, roundfac)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(66)*1e-3, roundfac)), ...
        num2str(round(-VparGCqq(81)*1e-3, roundfac))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
end

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCp(25)*1e-3, roundfac))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(9)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCp(25)*1e-3, roundfac))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, roundfac))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, roundfac)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, roundfac)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, roundfac))});
end

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-lambda FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 19; %19 for V1 and V21, 4 for V4 and V24
Qind2= Qind1;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 70;
alphalim1= 1;
alphalim2= 70;
thetalim1= 1;
thetalim2= 70;

textxE= -2;
textyE= 85;
textx2E= -15;
texty2E= 85;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 18 35.5 53 70]);
xticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Runn= 21;
Qind= Qind2;
if Runn == 21
    FLogVperp1VparRedp= FLogVperp1VparRed21;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp21;
    FLogVperp2VparRedp= FLogVperp2VparRed21;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp21;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red21;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp21;
    nn= Nend21;
    Time= TimeT21;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed21;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed21;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed21;
end
if Runn == 24
    FLogVperp1VparRedp= FLogVperp1VparRed24;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp24;
    FLogVperp2VparRedp= FLogVperp2VparRed24;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp24;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red24;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp24;
    nn= Nend24;
    Time= TimeT24;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed24;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed24;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed24;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 18 35.5 53 70]);
xticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V-lambda FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-PC FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 4; %19 for V1 and V21, 4 for V4 and V24
Qind2= 4;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 25;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -3;
textyE= 63;
textx2E= -9;
texty2E= 65;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 4;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 6 11 15.5 20.5]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/60e0, 2)), ' min'), ...
        'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([0 6 11 15.5 20.5]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Runn= 6;
Qind= Qind2;
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 6 11 15.5 20.5]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/60e0, 2)), ' min'), ...
        'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([0 6 11 15.5 20.5]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V-PC FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-W FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 2; %19 for V1 and V21, 4 for V4 and V24
Qind2= Qind1;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 50;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -3;
textyE= 63;
textx2E= -9;
texty2E= 63;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 3;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([11 20.5 30.5 40]);
xticklabels({num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(30:31)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(40)), 0))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/60e0, 2)), ' min'), ...
        'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([11 20.5 30.5 40]);
xticklabels({num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(30:31)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(40)), 0))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Runn= 4;
Qind= Qind2;
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([11 20.5 30.5 40]);
xticklabels({num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(30:31)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(40)), 0))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
        num2str(round(Time(nn)/60e0, 2)), ' min'), ...
        'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([11 20.5 30.5 40]);
xticklabels({num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(20:21)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(30:31)), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(40)), 0))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V-W FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V-PC V-W FINAL DNF, DEF

close all
clc

if VPCflag == 1
    InterpFlag= 1;

    % Qind1= 15;
    % Qind2= 15; % 25;

    Qind1= 4; %19 for V1 and V21, 4 for V4 and V24
    Qind2= 4;

    pausevar= 1e-9;
    FontSize= 25;

    fignum= 0;
    cbarpos= 'SouthOutside';
    fignum= fignum+ 1; % Assign figure number
    fig(fignum)= figure(fignum);
    set(fig(fignum), 'Position', [10 10 1200 800])

    Elim1= 1;
    Elim2= 25;
    alphalim1= 1;
    alphalim2= 50;
    thetalim1= 1;
    thetalim2= 50;

    textxE= -3;
    textyE= 63;
    textx2E= -9;
    texty2E= 65;

    textx= 0;
    texty= 0;
    textx2= 0;
    texty2= 100;

    Runn= 3;
    Qind= Qind1;
    if Runn == 3
        FLogVperp1VparRedp= FLogVperp1VparRed3;
        FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
        FLogVperp2VparRedp= FLogVperp2VparRed3;
        FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
        FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
        FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
        nn= Nbeg3;
        Time= TimeT3;
        FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
        FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
        FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
        DEFEnergyAlphaRed= DEFEnergyAlphaRed3;
        DEFAlphaThetaRed= DEFAlphaThetaRed3;
        DEFEnergyThetaRed= DEFEnergyThetaRed3;
    end

    subplot(2, 3, 1)
    pcolor((DEFEnergyAlphaRed(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRed(:, :, Qind, nn)))))')
    shading interp
    colormap jet
    text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    % set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Elim1 Elim2]);
    ylim([alphalim1 alphalim2]);
    yticks([1 13 25.5 37.5 50]);
    yticklabels({num2str(round(alphaG(50), 1)), ...
        num2str(135), ...
        num2str(90), ...
        num2str(45), ...
        num2str(0)});
    xticks([0 6 11 15.5 20.5]);
    xticklabels({num2str(round(0e0, 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

    subplot(2, 3, 2)
    pcolor((DEFEnergyThetaRed(:, :, Qind, nn)/(max(max(DEFEnergyThetaRed(:, :, Qind, nn)))))')
    shading interp
    colormap jet
    text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    % set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
            num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
            num2str(round(Time(nn)/60e0, 2)), ' min'), ...
            'interpreter', 'latex', 'FontSize', 25);
    xlim([Elim1 Elim2]);
    ylim([thetalim1 thetalim2]);
    yticks([1 13 25.5 37.5 50]);
    yticklabels({num2str(round(thetaG(50), 1)), ...
        num2str(270), ...
        num2str(180), ...
        num2str(90), ...
        num2str(0)});
    xticks([0 6 11 15.5 20.5]);
    xticklabels({num2str(round(0e0, 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

    subplot(2, 3, 3)
    pcolor((DEFAlphaThetaRed(:, :, Qind, nn)/(max(max(DEFAlphaThetaRed(:, :, Qind, nn)))))')
    shading interp
    colormap jet
    text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    % set(gca, 'XDir', 'reverse')
    % set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([alphalim1 alphalim2]);
    ylim([thetalim1 thetalim2]);
    yticks([1 13 25.5 37.5 50]);
    yticklabels({num2str(round(thetaG(50), 1)), ...
        num2str(270), ...
        num2str(180), ...
        num2str(90), ...
        num2str(0)});
    xticks([1 13 25.5 37.5 50]);
    xticklabels({num2str(round(alphaG(50), 1)), ...
        num2str(135), ...
        num2str(90), ...
        num2str(45), ...
        num2str(0)});

    Runn= 6;
    Qind= Qind2;
    if Runn == 6
        FLogVperp1VparRedp= FLogVperp1VparRed6;
        FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
        FLogVperp2VparRedp= FLogVperp2VparRed6;
        FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
        FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
        FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
        nn= Nbeg6;
        Time= TimeT6;
        FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
        FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
        FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
        DEFEnergyAlphaRed= DEFEnergyAlphaRed6;
        DEFAlphaThetaRed= DEFAlphaThetaRed6;
        DEFEnergyThetaRed= DEFEnergyThetaRed6;
    end

    subplot(2, 3, 4)
    pcolor((DEFEnergyAlphaRed(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRed(:, :, Qind, nn)))))')
    shading interp
    colormap jet
    text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    % set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([Elim1 Elim2]);
    ylim([alphalim1 alphalim2]);
    yticks([1 13 25.5 37.5 50]);
    yticklabels({num2str(round(alphaG(50), 1)), ...
        num2str(135), ...
        num2str(90), ...
        num2str(45), ...
        num2str(0)});
    xticks([0 6 11 15.5 20.5]);
    xticklabels({num2str(round(0e0, 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

    subplot(2, 3, 5)
    pcolor((DEFEnergyThetaRed(:, :, Qind, nn)/(max(max(DEFEnergyThetaRed(:, :, Qind, nn)))))')
    shading interp
    colormap jet
    text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    % set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
            num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
            num2str(round(Time(nn)/60e0, 2)), ' min'), ...
            'interpreter', 'latex', 'FontSize', 25);
    xlim([Elim1 Elim2]);
    ylim([thetalim1 thetalim2]);
    yticks([1 13 25.5 37.5 50]);
    yticklabels({num2str(round(thetaG(50), 1)), ...
        num2str(270), ...
        num2str(180), ...
        num2str(90), ...
        num2str(0)});
    xticks([0 6 11 15.5 20.5]);
    xticklabels({num2str(round(0e0, 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(6)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(11)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(15:16)), 0)), ...
        num2str(round(mean((6.242e18)*EnergyG(20:21)), 0))});

    subplot(2, 3, 6)
    pcolor((DEFAlphaThetaRed(:, :, Qind, nn)/(max(max(DEFAlphaThetaRed(:, :, Qind, nn)))))')
    shading interp
    colormap jet
    text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
    xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
    set(gca, 'yminortick', 'on','xminortick', 'on');
    set(gca, 'xaxisLocation', 'top')
    % set(gca, 'XDir', 'reverse')
    % set(gca, 'YDir', 'reverse')
    set(gca, 'FontSize', FontSize);
    set(gcf, 'color','white');
    grid on
    xlim([alphalim1 alphalim2]);
    ylim([thetalim1 thetalim2]);
    yticks([1 13 25.5 37.5 50]);
    yticklabels({num2str(round(thetaG(50), 1)), ...
        num2str(270), ...
        num2str(180), ...
        num2str(90), ...
        num2str(0)});
    xticks([1 13 25.5 37.5 50]);
    xticklabels({num2str(round(alphaG(50), 1)), ...
        num2str(135), ...
        num2str(90), ...
        num2str(45), ...
        num2str(0)});

    cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
    xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
        'interpreter', 'latex', 'FontSize', FontSize)
    caxis([0 1]);

    cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
    xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
        'interpreter', 'latex', 'FontSize', FontSize)
    caxis([0 1]);
end

if VWflag == 1
    InterpFlag= 1;

    % Qind1= 15;
    % Qind2= 15; % 25;

    Qind1= 2; %19 for V1 and V21, 4 for V4 and V24
    Qind2= 2;

    pausevar= 1e-9;
    FontSize= 25;

    fignum= 0;
    cbarpos= 'SouthOutside';
    fignum= fignum+ 1; % Assign figure number
    fig(fignum)= figure(fignum);
    set(fig(fignum), 'Position', [10 10 1200 800])

    Elim1= 1;
    Elim2= 50;
    alphalim1= 1;
    alphalim2= 50;
    thetalim1= 1;
    thetalim2= 50;

    textxE= -3;
    textyE= 63;
    textx2E= -9;
    texty2E= 63;

    textx= 0;
    texty= 0;
    textx2= 0;
    texty2= 100;

    Runn= 3;
    Qind= Qind1;
    if Runn == 1
        FLogVperp1VparRedp= FLogVperp1VparRed1;
        FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
        FLogVperp2VparRedp= FLogVperp2VparRed1;
        FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
        FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
        FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
        nn= Nbeg1;
        Time= TimeT1;
        FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
        FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
        FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
        DEFEnergyAlphaRed= DEFEnergyAlphaRed1;
        DEFAlphaThetaRed= DEFAlphaThetaRed1;
        DEFEnergyThetaRed= DEFEnergyThetaRed1;
    end
    if Runn == 3
        FLogVperp1VparRedp= FLogVperp1VparRed3;
        FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
        FLogVperp2VparRedp= FLogVperp2VparRed3;
        FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
        FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
        FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
        nn= Nbeg3;
        Time= TimeT3;
        FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
        FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
        FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
        DEFEnergyAlphaRed= DEFEnergyAlphaRed3;
        DEFAlphaThetaRed= DEFAlphaThetaRed3;
        DEFEnergyThetaRed= DEFEnergyThetaRed3;
    end

    

    cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
    xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
        'interpreter', 'latex', 'FontSize', FontSize)
    caxis([0 1]);

    
end

toc

disp('V-PC V-W FINAL DNF, DEF PLOTS COMPLETE')

%% PLOT V FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 19;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 70;
alphalim1= 1;
alphalim2= 70;
thetalim1= 1;
thetalim2= 70;

textxE= -2;
textyE= 85;
textx2E= -15;
texty2E= 85;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 2;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([1 18 35.5 53 70]);
xticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([0 18 35.5 53 70]);
xticklabels({num2str(round(0e0, 0)), ...
    num2str(round((6.242e18)*EnergyG(18), 1)), ...
    num2str(round(mean((6.242e18)*EnergyG(35:36)), 1)), ...
    num2str(round((6.242e18)*EnergyG(53), 1)), ...
    num2str(round((6.242e18)*EnergyG(70), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 18 35.5 53 70]);
yticklabels({num2str(round(thetaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([1 18 35.5 53 70]);
xticklabels({num2str(round(alphaG(70), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT W FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 12; %12, 14;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 10;
texty= 15;
textx2= 10;
texty2= 85;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

roundfac= 0;

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([31 41 50.5 60 70]);
yticklabels({num2str(round(-VparGCqq(31)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(-VparGCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(60)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(70)*1e-3, roundfac))});
xticks([31 41 50.5 60 70]);
xticklabels({num2str(round(Vperp1GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(70)*1e-3, roundfac))});

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([31 41 50.5 60 70]);
yticklabels({num2str(round(-VparGCqq(31)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(-VparGCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(60)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(70)*1e-3, roundfac))});
xticks([31 41 50.5 60 70]);
xticklabels({num2str(round(Vperp2GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(70)*1e-3, roundfac))});

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vperp12lim1 Vperp12lim2]);
yticks([31 41 50.5 60 70]);
yticklabels({num2str(round(Vperp2GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(70)*1e-3, roundfac))});
xticks([31 41 50.5 60 70]);
xticklabels({num2str(round(Vperp1GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(70)*1e-3, roundfac))});

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([31 41 50.5 60 70]);
yticklabels({num2str(round(-VparGCqq(31)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(-VparGCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(60)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(70)*1e-3, roundfac))});
xticks([31 41 50.5 60 70]);
xticklabels({num2str(round(Vperp1GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(70)*1e-3, roundfac))});

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([31 41 50.5 60 70]);
yticklabels({num2str(round(-VparGCqq(31)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(-VparGCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(60)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(70)*1e-3, roundfac))});
xticks([31 41 50.5 60 70]);
xticklabels({num2str(round(Vperp2GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(70)*1e-3, roundfac))});

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([31 41 50.5 60 70]);
yticklabels({num2str(round(Vperp2GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp2GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(70)*1e-3, roundfac))});
xticks([31 41 50.5 60 70]);
xticklabels({num2str(round(Vperp1GCqq(31)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(41)*1e-3, roundfac)), ...
    num2str(round(mean(Vperp1GCqq(50:51))*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(60)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(70)*1e-3, roundfac))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('W FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT W FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 12;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 80;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -2;
textyE= 90;
textx2E= -15;
texty2E= 90;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 5;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nbeg1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([20.5 40.5 60 80]);
xticklabels({num2str(round((6.242e18)*mean(EnergyG(20:21)), 1)), ...
    num2str(round((6.242e18)*mean(EnergyG(40:41)), 1)), ...
    num2str(round((6.242e18)*EnergyG(60), 1)), ...
    num2str(round((6.242e18)*EnergyG(80), 1))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([20.5 40.5 60 80]);
xticklabels({num2str(round((6.242e18)*mean(EnergyG(20:21)), 1)), ...
    num2str(round((6.242e18)*mean(EnergyG(40:41)), 1)), ...
    num2str(round((6.242e18)*EnergyG(60), 1)), ...
    num2str(round((6.242e18)*EnergyG(80), 1))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 20.5 40.5 60 80]);
xticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([20.5 40.5 60 80]);
xticklabels({num2str(round((6.242e18)*mean(EnergyG(20:21)), 1)), ...
    num2str(round((6.242e18)*mean(EnergyG(40:41)), 1)), ...
    num2str(round((6.242e18)*EnergyG(60), 1)), ...
    num2str(round((6.242e18)*EnergyG(80), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([20.5 40.5 60 80]);
xticklabels({num2str(round((6.242e18)*mean(EnergyG(20:21)), 1)), ...
    num2str(round((6.242e18)*mean(EnergyG(40:41)), 1)), ...
    num2str(round((6.242e18)*EnergyG(60), 1)), ...
    num2str(round((6.242e18)*EnergyG(80), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 20.5 40.5 60 80]);
xticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('W FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT B FINAL DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 14; 
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 1; %20;
    Vperp12lim2= 100; %81;
    Vparlim1= 1; %20;
    Vparlim2= 100; %81;
end

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= -15;
texty= -15;
textx2= -15;
texty2= 117;

Runn= 1;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

roundfac= 0;

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([14 32 50 68 87]);
yticklabels({num2str(round(-VparGCqq(14)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(32)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(50)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(68)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(87)*1e-3, roundfac))});
xticks([14 32 50 68 87]);
xticklabels({num2str(round(Vperp1GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(87)*1e-3, roundfac))});

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([14 32 50 68 87]);
yticklabels({num2str(round(-VparGCqq(14)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(32)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(50)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(68)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(87)*1e-3, roundfac))});
xticks([14 32 50 68 87]);
xticklabels({num2str(round(Vperp2GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(87)*1e-3, roundfac))});

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vperp12lim1 Vperp12lim2]);
yticks([14 32 50 68 87]);
yticklabels({num2str(round(Vperp2GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(87)*1e-3, roundfac))});
xticks([14 32 50 68 87]);
xticklabels({num2str(round(Vperp1GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(87)*1e-3, roundfac))});

Runn= 3;
Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([14 32 50 68 87]);
yticklabels({num2str(round(-VparGCqq(14)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(32)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(50)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(68)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(87)*1e-3, roundfac))});
xticks([14 32 50 68 87]);
xticklabels({num2str(round(Vperp1GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(87)*1e-3, roundfac))});

subplot(2, 3, 5)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([14 32 50 68 87]);
yticklabels({num2str(round(-VparGCqq(14)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(32)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(50)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(68)*1e-3, roundfac)), ...
    num2str(round(-VparGCqq(87)*1e-3, roundfac))});
xticks([14 32 50 68 87]);
xticklabels({num2str(round(Vperp2GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(87)*1e-3, roundfac))});

subplot(2, 3, 6)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([14 32 50 68 87]);
yticklabels({num2str(round(Vperp2GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp2GCqq(87)*1e-3, roundfac))});
xticks([14 32 50 68 87]);
xticklabels({num2str(round(Vperp1GCqq(14)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(32)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(50)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(68)*1e-3, roundfac)), ...
    num2str(round(Vperp1GCqq(87)*1e-3, roundfac))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('B FINAL DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT B FINAL ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 14;
Qind2= Qind1; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

Elim1= 1;
Elim2= 80;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -10;
textyE= 95;
textxEp= 0;
textyEp= 95;
textx2E= -15;
texty2E= 95;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;
Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nbeg2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nbeg3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nbeg4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nbeg5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nbeg6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([19.5 38.5 56.5 75.5]);
xticklabels({num2str(round((6.242e18)*mean(EnergyG(19:20)), 0)), ...
    num2str(round((6.242e18)*mean(EnergyG(38:39)), 0)), ...
    num2str(round((6.242e18)*mean(EnergyG(56:57)), 0)), ...
    num2str(round((6.242e18)*mean(EnergyG(75:76)), 0))});

subplot(2, 3, 2)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([19.5 38.5 56.5 75.5]);
xticklabels({num2str(round((6.242e18)*mean(EnergyG(19:20)), 0)), ...
    num2str(round((6.242e18)*mean(EnergyG(38:39)), 0)), ...
    num2str(round((6.242e18)*mean(EnergyG(56:57)), 0)), ...
    num2str(round((6.242e18)*mean(EnergyG(75:76)), 0))});

subplot(2, 3, 3)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 20.5 40.5 60 80]);
xticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

Runn= 3;
Qind= Qind2;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxEp, textyEp, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 10]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});
xticks([5 9]);
xticklabels({num2str(round((6.242e18)*EnergyG(5), 1)), ...
    num2str(round((6.242e18)*EnergyG(9), 1))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxEp, textyEp, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 10]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([5 9]);
xticklabels({num2str(round((6.242e18)*EnergyG(5), 1)), ...
    num2str(round((6.242e18)*EnergyG(9), 1))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
% set(gca, 'XDir', 'reverse')
% set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60 80]);
yticklabels({num2str(round(thetaG(80), 1)), ...
    num2str(270), ...
    num2str(180), ...
    num2str(90), ...
    num2str(0)});
xticks([1 20.5 40.5 60 80]);
xticklabels({num2str(round(alphaG(80), 1)), ...
    num2str(135), ...
    num2str(90), ...
    num2str(45), ...
    num2str(0)});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('B FINAL ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT W HEATING SPECTRA

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 15;

ylim1= 0;
ylim2= 1.5;
textx= -7;
texty= 1.8;


S0V1(:)= (1e-6).*spectrogram(:, spect); % Reference Energy density
S0p1(:)= S0V1(freqind).*(freqs(:)/freqs(freqind)).^(-chi1);
S0p2(:)= S0V1(freqind).*(freqs(:)/freqs(freqind)).^(-chi2);
S0p3(:)= S0V1(freqind).*(freqs(:)/freqs(freqind)).^(-chi3);


subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nbeg1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. A1');
L{2}= horzcat('Sim. A2');
L{3}= horzcat('Sim. A3');
L{4}= horzcat('Sim. A4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest')
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

    
%% PLOT W DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 25;
Qind2= 25; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

Elim1= 1;
Elim2= 30;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40 60 80]);
yticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 7.5 15 22.5 30]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(7:8)), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(22:23)), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 7.5 15 22.5 30]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(7:8)), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(22:23)), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 20.5 40 60 80]);
xticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('W DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT W ENERGY DISTRIBUTION FUNCTION

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 25;
Qind2= 25; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

Elim1= 1;
Elim2= 30;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 4;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed1;
    DNFEnergyThetaRedp= DNFEnergyThetaRed1;
    DNFAlphaThetaRedp= DNFAlphaThetaRed1;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed1;
    DEFEnergyThetaRedp= DEFEnergyThetaRed1;
    DEFAlphaThetaRedp= DEFAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed2;
    DNFEnergyThetaRedp= DNFEnergyThetaRed2;
    DNFAlphaThetaRedp= DNFAlphaThetaRed2;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed2;
    DEFEnergyThetaRedp= DEFEnergyThetaRed2;
    DEFAlphaThetaRedp= DEFAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed3;
    DNFEnergyThetaRedp= DNFEnergyThetaRed3;
    DNFAlphaThetaRedp= DNFAlphaThetaRed3;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed3;
    DEFEnergyThetaRedp= DEFEnergyThetaRed3;
    DEFAlphaThetaRedp= DEFAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed4;
    DNFEnergyThetaRedp= DNFEnergyThetaRed4;
    DNFAlphaThetaRedp= DNFAlphaThetaRed4;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed4;
    DEFEnergyThetaRedp= DEFEnergyThetaRed4;
    DEFAlphaThetaRedp= DEFAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed5;
    DNFEnergyThetaRedp= DNFEnergyThetaRed5;
    DNFAlphaThetaRedp= DNFAlphaThetaRed5;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed5;
    DEFEnergyThetaRedp= DEFEnergyThetaRed5;
    DEFAlphaThetaRedp= DEFAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed6;
    DNFEnergyThetaRedp= DNFEnergyThetaRed6;
    DNFAlphaThetaRedp= DNFAlphaThetaRed6;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed6;
    DEFEnergyThetaRedp= DEFEnergyThetaRed6;
    DEFAlphaThetaRedp= DEFAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((DNFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DNFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40 60 80]);
yticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 7.5 15 22.5 30]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(7:8)), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(22:23)), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0))});

subplot(2, 3, 2)
pcolor((DNFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DNFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 7.5 15 22.5 30]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(7:8)), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(22:23)), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0))});

subplot(2, 3, 3)
pcolor((DNFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DNFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 20.5 40 60 80]);
xticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});

subplot(2, 3, 4)
pcolor((DEFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40 60 80]);
yticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 7.5 15 22.5 30]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(7:8)), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(22:23)), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0))});

subplot(2, 3, 5)
pcolor((DEFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DEFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 7.5 15 22.5 30]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(7:8)), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round(mean((6.242e18)*EnergyG(22:23)), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0))});

subplot(2, 3, 6)
pcolor((DEFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DEFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 20.5 40 60 80]);
xticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_N \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('W ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT B DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 1; %20;
    Vperp12lim2= 100; %81;
    Vparlim1= 1; %20;
    Vparlim2= 100; %81;
end

Elim1= 1;
Elim2= 40;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= -25;
texty= -30;
textx2= -30;
texty2= 131;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([10 31 50.5 70 91]);
yticklabels({num2str(round(-VparGCqq(10)*1e-3, 0)), ...
    num2str(round(-VparGCqq(31)*1e-3, 0)), ...
    num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
    num2str(round(-VparGCqq(70)*1e-3, 0)), ...
    num2str(round(-VparGCqq(91)*1e-3, 0))});
xticks([10 31 50.5 70 91]);
xticklabels({num2str(round(Vperp1GCqq(10)*1e-3, 0)), ...
    num2str(round(Vperp1GCqq(31)*1e-3, 0)), ...
    num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
    num2str(round(Vperp1GCqq(70)*1e-3, 0)), ...
    num2str(round(Vperp1GCqq(91)*1e-3, 0))});

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
yticks([10 31 50.5 70 91]);
yticklabels({num2str(round(-VparGCqq(10)*1e-3, 0)), ...
    num2str(round(-VparGCqq(31)*1e-3, 0)), ...
    num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
    num2str(round(-VparGCqq(70)*1e-3, 0)), ...
    num2str(round(-VparGCqq(91)*1e-3, 0))});
xticks([10 31 50.5 70 91]);
xticklabels({num2str(round(Vperp2GCqq(10)*1e-3, 0)), ...
    num2str(round(Vperp2GCqq(31)*1e-3, 0)), ...
    num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
    num2str(round(Vperp2GCqq(70)*1e-3, 0)), ...
    num2str(round(Vperp2GCqq(91)*1e-3, 0))});

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
xticks([10 31 50.5 70 91]);
xticklabels({num2str(round(Vperp1GCqq(10)*1e-3, 0)), ...
    num2str(round(Vperp1GCqq(31)*1e-3, 0)), ...
    num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
    num2str(round(Vperp1GCqq(70)*1e-3, 0)), ...
    num2str(round(Vperp1GCqq(91)*1e-3, 0))});
yticks([10 31 50.5 70 91]);
yticklabels({num2str(round(Vperp2GCqq(10)*1e-3, 0)), ...
    num2str(round(Vperp2GCqq(31)*1e-3, 0)), ...
    num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
    num2str(round(Vperp2GCqq(70)*1e-3, 0)), ...
    num2str(round(Vperp2GCqq(91)*1e-3, 0))});

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40 60 80]);
yticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 10 20 30 40]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0)), ...
    num2str(round((6.242e18)*EnergyG(40), 0))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 10 20 30 40]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0)), ...
    num2str(round((6.242e18)*EnergyG(40), 0))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 20.5 40 60 80]);
xticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('B DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT B ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 1; %20;
    Vperp12lim2= 100; %81;
    Vparlim1= 1; %20;
    Vparlim2= 100; %81;
end

Elim1= 1;
Elim2= 40;
alphalim1= 1;
alphalim2= 80;
thetalim1= 1;
thetalim2= 80;

textxE= -8.5;
textyE= -25;
textx2E= 105;
texty2E= -23;

textx= -25;
texty= -30;
textx2= -30;
texty2= 131;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed1;
    DNFEnergyThetaRedp= DNFEnergyThetaRed1;
    DNFAlphaThetaRedp= DNFAlphaThetaRed1;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed1;
    DEFEnergyThetaRedp= DEFEnergyThetaRed1;
    DEFAlphaThetaRedp= DEFAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed2;
    DNFEnergyThetaRedp= DNFEnergyThetaRed2;
    DNFAlphaThetaRedp= DNFAlphaThetaRed2;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed2;
    DEFEnergyThetaRedp= DEFEnergyThetaRed2;
    DEFAlphaThetaRedp= DEFAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed3;
    DNFEnergyThetaRedp= DNFEnergyThetaRed3;
    DNFAlphaThetaRedp= DNFAlphaThetaRed3;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed3;
    DEFEnergyThetaRedp= DEFEnergyThetaRed3;
    DEFAlphaThetaRedp= DEFAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed4;
    DNFEnergyThetaRedp= DNFEnergyThetaRed4;
    DNFAlphaThetaRedp= DNFAlphaThetaRed4;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed4;
    DEFEnergyThetaRedp= DEFEnergyThetaRed4;
    DEFAlphaThetaRedp= DEFAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed5;
    DNFEnergyThetaRedp= DNFEnergyThetaRed5;
    DNFAlphaThetaRedp= DNFAlphaThetaRed5;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed5;
    DEFEnergyThetaRedp= DEFEnergyThetaRed5;
    DEFAlphaThetaRedp= DEFAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed6;
    DNFEnergyThetaRedp= DNFEnergyThetaRed6;
    DNFAlphaThetaRedp= DNFAlphaThetaRed6;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed6;
    DEFEnergyThetaRedp= DEFEnergyThetaRed6;
    DEFAlphaThetaRedp= DEFAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((DNFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DNFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40 60 80]);
yticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 10 20 30 40]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0)), ...
    num2str(round((6.242e18)*EnergyG(40), 0))});

subplot(2, 3, 2)
pcolor((DNFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DNFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 10 20 30 40]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0)), ...
    num2str(round((6.242e18)*EnergyG(40), 0))});

subplot(2, 3, 3)
pcolor((DNFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DNFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 20.5 40 60 80]);
xticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});

subplot(2, 3, 4)
pcolor((DEFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 20.5 40 60 80]);
yticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 10 20 30 40]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0)), ...
    num2str(round((6.242e18)*EnergyG(40), 0))});

subplot(2, 3, 5)
pcolor((DEFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DEFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 10 20 30 40]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0)), ...
    num2str(round((6.242e18)*EnergyG(30), 0)), ...
    num2str(round((6.242e18)*EnergyG(40), 0))});

subplot(2, 3, 6)
pcolor((DEFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DEFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 20.5 40.5 60.5 80]);
yticklabels({num2str(round(thetaG(80), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(round(mean(thetaG(20:21)), 0)), ...
    num2str(round(thetaG(1), 0))});
xticks([1 20.5 40 60 80]);
xticklabels({num2str(round(alphaG(80), 0)), ...
    num2str(round(alphaG(60), 0)), ...
    num2str(90e0), ...
    num2str(round(mean(alphaG(20:21)), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_N \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('B ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT Z DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 1; %20;
    Vperp12lim2= 100; %81;
    Vparlim1= 1; %20;
    Vparlim2= 100 %81;
end

Elim1= 1;
Elim2= 30;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -5.3;
textyE= -15;
textx2E= 67;
texty2E= -14;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(round(Time(nn)/3600e0, 2)), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('Z DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT Z ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

Elim1= 1;
Elim2= 20;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -5.3;
textyE= -15;
textx2E= 67;
texty2E= -14;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 1;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed1;
    DNFEnergyThetaRedp= DNFEnergyThetaRed1;
    DNFAlphaThetaRedp= DNFAlphaThetaRed1;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed1;
    DEFEnergyThetaRedp= DEFEnergyThetaRed1;
    DEFAlphaThetaRedp= DEFAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed2;
    DNFEnergyThetaRedp= DNFEnergyThetaRed2;
    DNFAlphaThetaRedp= DNFAlphaThetaRed2;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed2;
    DEFEnergyThetaRedp= DEFEnergyThetaRed2;
    DEFAlphaThetaRedp= DEFAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed3;
    DNFEnergyThetaRedp= DNFEnergyThetaRed3;
    DNFAlphaThetaRedp= DNFAlphaThetaRed3;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed3;
    DEFEnergyThetaRedp= DEFEnergyThetaRed3;
    DEFAlphaThetaRedp= DEFAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed4;
    DNFEnergyThetaRedp= DNFEnergyThetaRed4;
    DNFAlphaThetaRedp= DNFAlphaThetaRed4;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed4;
    DEFEnergyThetaRedp= DEFEnergyThetaRed4;
    DEFAlphaThetaRedp= DEFAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed5;
    DNFEnergyThetaRedp= DNFEnergyThetaRed5;
    DNFAlphaThetaRedp= DNFAlphaThetaRed5;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed5;
    DEFEnergyThetaRedp= DEFEnergyThetaRed5;
    DEFAlphaThetaRedp= DEFAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed6;
    DNFEnergyThetaRedp= DNFEnergyThetaRed6;
    DNFAlphaThetaRedp= DNFAlphaThetaRed6;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed6;
    DEFEnergyThetaRedp= DEFEnergyThetaRed6;
    DEFAlphaThetaRedp= DEFAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((DNFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DNFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 2)
pcolor((DNFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DNFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 3)
pcolor((DNFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DNFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});

subplot(2, 3, 4)
pcolor((DEFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 5)
pcolor((DEFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DEFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 6)
pcolor((DEFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DEFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_N \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('Z ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

Elim1= 1;
Elim2= 20;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -5.3;
textyE= -15;
textx2E= 67;
texty2E= -14;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 24;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
end

subplot(2, 3, 1)
if InterpFlag == 0
    pcolor((FLogVperp1VparRedp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 2)
if InterpFlag == 0
    pcolor((FLogVperp2VparRedp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp2VparRedInterpp(:, :, Qind, nn)/(max(max(FLogVperp2VparRedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\parallel}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(-VparGCp(4)*1e-3, 1)), ...
        num2str(round(-VparGCp(9)*1e-3, 1)), ...
        num2str(round(-mean(VparGCp(14:15))*1e-3, 1)), ...
        num2str(round(-VparGCp(20)*1e-3, 1)), ...
        num2str(round(-VparGCp(25)*1e-3, 1))});
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(-VparGCqq(20)*1e-3, 1)), ...
        num2str(round(-VparGCqq(35)*1e-3, 1)), ...
        num2str(round(-mean(VparGCqq(50:51))*1e-3, 1)), ...
        num2str(round(-VparGCqq(66)*1e-3, 1)), ...
        num2str(round(-VparGCqq(81)*1e-3, 1))});
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 3)
if InterpFlag == 0
    pcolor((FLogVperp1Vperp2Redp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2Redp(:, :, Qind, nn)))))')
end
if InterpFlag == 1
    pcolor((FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)/(max(max(FLogVperp1Vperp2RedInterpp(:, :, Qind, nn)))))')
end
shading interp
colormap jet
text(textx2, texty2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$v_{\perp 1}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$v_{\perp 2}$ [km/s]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Vperp12lim1 Vperp12lim2]);
ylim([Vparlim1 Vparlim2]);
if InterpFlag == 0
    xticks([4 9 14.5 20 25]);
    xticklabels({num2str(round(Vperp1GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp1GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCp(25)*1e-3, 1))});
    yticks([4 9 14.5 20 25]);
    yticklabels({num2str(round(Vperp2GCp(4)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(9)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCp(14:15))*1e-3, 1)), ...
        num2str(round(Vperp2GCp(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCp(25)*1e-3, 1))});
end
if InterpFlag == 1
    xticks([20 35 50.5 66 81]);
    xticklabels({num2str(round(Vperp1GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp1GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp1GCqq(81)*1e-3, 1))});
    yticks([20 35 50.5 66 81]);
    yticklabels({num2str(round(Vperp2GCqq(20)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(35)*1e-3, 1)), ...
        num2str(round(mean(Vperp2GCqq(50:51))*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(66)*1e-3, 1)), ...
        num2str(round(Vperp2GCqq(81)*1e-3, 1))});
end

subplot(2, 3, 4)
pcolor((FEnergyEnergyAlphaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 5)
pcolor((FEnergyEnergyThetaRedp(:, :, Qind, nn)/(max(max(FEnergyEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 6)
pcolor((FEnergyAlphaThetaRedp(:, :, Qind, nn)/(max(max(FEnergyAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert f_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V DISTRIB. FNCS PLOTS COMPLETE')

%% PLOT V ENERGY DISTRIBUTION FUNCTIONS

close all
clc

InterpFlag= 1;

% Qind1= 15;
% Qind2= 15; % 25;

Qind1= 15;
Qind2= 15; % 25;

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1200 800])

if InterpFlag == 0
    Vperp12lim1= 4;
    Vperp12lim2= 25;
    Vparlim1= 4;
    Vparlim2= 25;
end
if InterpFlag == 1
    Vperp12lim1= 20; %20;
    Vperp12lim2= 81; %81;
    Vparlim1= 20; %20;
    Vparlim2= 81; %81;
end

Elim1= 1;
Elim2= 20;
alphalim1= 1;
alphalim2= 50;
thetalim1= 1;
thetalim2= 50;

textxE= -5.3;
textyE= -15;
textx2E= 67;
texty2E= -14;

textx= 0;
texty= 0;
textx2= 0;
texty2= 100;

Runn= 24;

Qind= Qind1;
if Runn == 1
    FLogVperp1VparRedp= FLogVperp1VparRed1;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp1;
    FLogVperp2VparRedp= FLogVperp2VparRed1;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp1;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red1;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp1;
    nn= Nend1;
    Time= TimeT1;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed1;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed1;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed1;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed1;
    DNFEnergyThetaRedp= DNFEnergyThetaRed1;
    DNFAlphaThetaRedp= DNFAlphaThetaRed1;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed1;
    DEFEnergyThetaRedp= DEFEnergyThetaRed1;
    DEFAlphaThetaRedp= DEFAlphaThetaRed1;
end
if Runn == 2
    FLogVperp1VparRedp= FLogVperp1VparRed2;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp2;
    FLogVperp2VparRedp= FLogVperp2VparRed2;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp2;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red2;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp2;
    nn= Nend2;
    Time= TimeT2;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed2;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed2;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed2;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed2;
    DNFEnergyThetaRedp= DNFEnergyThetaRed2;
    DNFAlphaThetaRedp= DNFAlphaThetaRed2;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed2;
    DEFEnergyThetaRedp= DEFEnergyThetaRed2;
    DEFAlphaThetaRedp= DEFAlphaThetaRed2;
end
if Runn == 3
    FLogVperp1VparRedp= FLogVperp1VparRed3;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp3;
    FLogVperp2VparRedp= FLogVperp2VparRed3;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp3;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red3;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp3;
    nn= Nend3;
    Time= TimeT3;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed3;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed3;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed3;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed3;
    DNFEnergyThetaRedp= DNFEnergyThetaRed3;
    DNFAlphaThetaRedp= DNFAlphaThetaRed3;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed3;
    DEFEnergyThetaRedp= DEFEnergyThetaRed3;
    DEFAlphaThetaRedp= DEFAlphaThetaRed3;
end
if Runn == 4
    FLogVperp1VparRedp= FLogVperp1VparRed4;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp4;
    FLogVperp2VparRedp= FLogVperp2VparRed4;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp4;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red4;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp4;
    nn= Nend4;
    Time= TimeT4;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed4;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed4;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed4;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed4;
    DNFEnergyThetaRedp= DNFEnergyThetaRed4;
    DNFAlphaThetaRedp= DNFAlphaThetaRed4;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed4;
    DEFEnergyThetaRedp= DEFEnergyThetaRed4;
    DEFAlphaThetaRedp= DEFAlphaThetaRed4;
end
if Runn == 5
    FLogVperp1VparRedp= FLogVperp1VparRed5;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp5;
    FLogVperp2VparRedp= FLogVperp2VparRed5;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp5;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red5;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp5;
    nn= Nend5;
    Time= TimeT5;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed5;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed5;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed5;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed5;
    DNFEnergyThetaRedp= DNFEnergyThetaRed5;
    DNFAlphaThetaRedp= DNFAlphaThetaRed5;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed5;
    DEFEnergyThetaRedp= DEFEnergyThetaRed5;
    DEFAlphaThetaRedp= DEFAlphaThetaRed5;
end
if Runn == 6
    FLogVperp1VparRedp= FLogVperp1VparRed6;
    FLogVperp1VparRedInterpp= FLogVperp1VparRedInterp6;
    FLogVperp2VparRedp= FLogVperp2VparRed6;
    FLogVperp2VparRedInterpp= FLogVperp2VparRedInterp6;
    FLogVperp1Vperp2Redp= FLogVperp1Vperp2Red6;
    FLogVperp1Vperp2RedInterpp= FLogVperp1Vperp2RedInterp6;
    nn= Nend6;
    Time= TimeT6;
    FEnergyEnergyAlphaRedp= FEnergyEnergyAlphaRed6;
    FEnergyEnergyThetaRedp= FEnergyEnergyThetaRed6;
    FEnergyAlphaThetaRedp= FEnergyAlphaThetaRed6;
    DNFEnergyAlphaRedp= DNFEnergyAlphaRed6;
    DNFEnergyThetaRedp= DNFEnergyThetaRed6;
    DNFAlphaThetaRedp= DNFAlphaThetaRed6;
    DEFEnergyAlphaRedp= DEFEnergyAlphaRed6;
    DEFEnergyThetaRedp= DEFEnergyThetaRed6;
    DEFAlphaThetaRedp= DEFAlphaThetaRed6;
end

subplot(2, 3, 1)
pcolor((DNFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DNFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(a)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 2)
pcolor((DNFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DNFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(b)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 3)
pcolor((DNFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DNFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(c)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});

subplot(2, 3, 4)
pcolor((DEFEnergyAlphaRedp(:, :, Qind, nn)/(max(max(DEFEnergyAlphaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([Elim1 Elim2]);
ylim([alphalim1 alphalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 5)
pcolor((DEFEnergyThetaRedp(:, :, Qind, nn)/(max(max(DEFEnergyThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$E$ [eV]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), '[km]', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), '[km], ', '$t= $', ...
    num2str(Time(nn)/3600e0), '[hr]'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([Elim1 Elim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 5 10 15 20]);
xticklabels({num2str(round((6.242e18)*EnergyG(1), 0)), ...
    num2str(round((6.242e18)*EnergyG(5), 0)), ...
    num2str(round((6.242e18)*EnergyG(10), 0)), ...
    num2str(round((6.242e18)*EnergyG(15), 0)), ...
    num2str(round((6.242e18)*EnergyG(20), 0))});

subplot(2, 3, 6)
pcolor((DEFAlphaThetaRedp(:, :, Qind, nn)/(max(max(DEFAlphaThetaRedp(:, :, Qind, nn)))))')
shading interp
colormap jet
text(textx2E, texty2E, '(f)', 'interpreter', 'latex', 'FontSize', 25)
xlabel(horzcat('$\alpha$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
ylabel(horzcat('$\theta$ [degs]'), 'interpreter', 'latex', 'FontSize', FontSize)
set(gca, 'yminortick', 'on','xminortick', 'on');
set(gca, 'xaxisLocation', 'top')
set(gca, 'XDir', 'reverse')
set(gca, 'YDir', 'reverse')
set(gca, 'FontSize', FontSize);
set(gcf, 'color','white');
grid on
xlim([alphalim1 alphalim2]);
ylim([thetalim1 thetalim2]);
yticks([1 13 25.5 37.5 50]);
yticklabels({num2str(round(thetaG(50), 0)), ...
    num2str(270e0), ...
    num2str(180e0), ...
    num2str(90e0), ...
    num2str(round(thetaG(1), 0))});
xticks([1 13 25.5 37.5 50]);
xticklabels({num2str(round(alphaG(50), 0)), ...
    num2str(135e0), ...
    num2str(90e0), ...
    num2str(round(alphaG(13), 0)), ...
    num2str(round(alphaG(1), 0))});

cbarqq0= colorbar('Position', [0.925 0.585 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_N \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

cbarqq0= colorbar('Position', [0.925 0.11 0.01 0.24]);
xlabel(cbarqq0, horzcat('$\vert \phi_E \vert$'), ...
    'interpreter', 'latex', 'FontSize', FontSize)
caxis([0 1]);

toc

disp('V ENERGY DISTRIB. FNCS PLOTS COMPLETE')

%% COMPUTE V REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend1
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
%             FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
%             FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
%             FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
%             DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
%             DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
%             DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
%             DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
%             DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
%             DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
%             DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
%             DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
%             DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend2
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp2(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp2(Vperp2ind, :, Qind, nn));
%             FVperp2Red2(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp2(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp2(Vperp1ind, :, Qind, nn));
%             FVperp1Red2(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp2(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp2(:, Vparind, Qind, nn));
%             FVparRed2(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp2(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
%             DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyThetaRed2(Eind, :, Qind, nn));
%             DEFEnergyRedp2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));
%             DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyThetaRed2(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp2(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed2(:, alphaind, Qind, nn));
%             DNFAlphaRed2(alphaind, Qind, nn)= sum(DNFAlphaThetaRed2(alphaind, :, Qind, nn));
%             DEFAlphaRedp2(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed2(:, alphaind, Qind, nn));
%             DEFAlphaRed2(alphaind, Qind, nn)= sum(DEFAlphaThetaRed2(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp2(thetaind, Qind, nn)= sum(DNFEnergyThetaRed2(:, thetaind, Qind, nn));
%             DNFThetaRed2(thetaind, Qind, nn)= sum(DNFAlphaThetaRed2(:, thetaind, Qind, nn));
%             DEFThetaRedp2(thetaind, Qind, nn)= sum(DEFEnergyThetaRed2(:, thetaind, Qind, nn));
%             DEFThetaRed2(thetaind, Qind, nn)= sum(DEFAlphaThetaRed2(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend3
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp3(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp3(Vperp2ind, :, Qind, nn));
%             FVperp2Red3(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp3(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp3(Vperp1ind, :, Qind, nn));
%             FVperp1Red3(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp3(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp3(:, Vparind, Qind, nn));
%             FVparRed3(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp3(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
%             DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyThetaRed3(Eind, :, Qind, nn));
%             DEFEnergyRedp3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
%             DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyThetaRed3(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp3(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed3(:, alphaind, Qind, nn));
%             DNFAlphaRed3(alphaind, Qind, nn)= sum(DNFAlphaThetaRed3(alphaind, :, Qind, nn));
%             DEFAlphaRedp3(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed3(:, alphaind, Qind, nn));
%             DEFAlphaRed3(alphaind, Qind, nn)= sum(DEFAlphaThetaRed3(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp3(thetaind, Qind, nn)= sum(DNFEnergyThetaRed3(:, thetaind, Qind, nn));
%             DNFThetaRed3(thetaind, Qind, nn)= sum(DNFAlphaThetaRed3(:, thetaind, Qind, nn));
%             DEFThetaRedp3(thetaind, Qind, nn)= sum(DEFEnergyThetaRed3(:, thetaind, Qind, nn));
%             DEFThetaRed3(thetaind, Qind, nn)= sum(DEFAlphaThetaRed3(:, thetaind, Qind, nn));
%         end
%     end
% end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend4
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp4(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp4(Vperp2ind, :, Qind, nn));
            FVperp2Red4(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp4(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp4(Vperp1ind, :, Qind, nn));
            FVperp1Red4(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp4(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp4(:, Vparind, Qind, nn));
            FVparRed4(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp4(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
            DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyThetaRed4(Eind, :, Qind, nn));
            DEFEnergyRedp4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
            DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyThetaRed4(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp4(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed4(:, alphaind, Qind, nn));
            DNFAlphaRed4(alphaind, Qind, nn)= sum(DNFAlphaThetaRed4(alphaind, :, Qind, nn));
            DEFAlphaRedp4(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed4(:, alphaind, Qind, nn));
            DEFAlphaRed4(alphaind, Qind, nn)= sum(DEFAlphaThetaRed4(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp4(thetaind, Qind, nn)= sum(DNFEnergyThetaRed4(:, thetaind, Qind, nn));
            DNFThetaRed4(thetaind, Qind, nn)= sum(DNFAlphaThetaRed4(:, thetaind, Qind, nn));
            DEFThetaRedp4(thetaind, Qind, nn)= sum(DEFEnergyThetaRed4(:, thetaind, Qind, nn));
            DEFThetaRed4(thetaind, Qind, nn)= sum(DEFAlphaThetaRed4(:, thetaind, Qind, nn));
        end
    end
end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend5
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp5(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp5(Vperp2ind, :, Qind, nn));
%             FVperp2Red5(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp5(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp5(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp5(Vperp1ind, :, Qind, nn));
%             FVperp1Red5(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp5(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp5(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp5(:, Vparind, Qind, nn));
%             FVparRed5(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp5(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp5(Eind, Qind, nn)= sum(DNFEnergyAlphaRed5(Eind, :, Qind, nn));
%             DNFEnergyRed5(Eind, Qind, nn)= sum(DNFEnergyThetaRed5(Eind, :, Qind, nn));
%             DEFEnergyRedp5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, :, Qind, nn));
%             DEFEnergyRed5(Eind, Qind, nn)= sum(DEFEnergyThetaRed5(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp5(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed5(:, alphaind, Qind, nn));
%             DNFAlphaRed5(alphaind, Qind, nn)= sum(DNFAlphaThetaRed5(alphaind, :, Qind, nn));
%             DEFAlphaRedp5(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed5(:, alphaind, Qind, nn));
%             DEFAlphaRed5(alphaind, Qind, nn)= sum(DEFAlphaThetaRed5(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp5(thetaind, Qind, nn)= sum(DNFEnergyThetaRed5(:, thetaind, Qind, nn));
%             DNFThetaRed5(thetaind, Qind, nn)= sum(DNFAlphaThetaRed5(:, thetaind, Qind, nn));
%             DEFThetaRedp5(thetaind, Qind, nn)= sum(DEFEnergyThetaRed5(:, thetaind, Qind, nn));
%             DEFThetaRed5(thetaind, Qind, nn)= sum(DEFAlphaThetaRed5(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend6
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp6(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp6(Vperp2ind, :, Qind, nn));
%             FVperp2Red6(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp6(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp6(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp6(Vperp1ind, :, Qind, nn));
%             FVperp1Red6(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp6(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp6(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp6(:, Vparind, Qind, nn));
%             FVparRed6(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp6(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp6(Eind, Qind, nn)= sum(DNFEnergyAlphaRed6(Eind, :, Qind, nn));
%             DNFEnergyRed6(Eind, Qind, nn)= sum(DNFEnergyThetaRed6(Eind, :, Qind, nn));
%             DEFEnergyRedp6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, :, Qind, nn));
%             DEFEnergyRed6(Eind, Qind, nn)= sum(DEFEnergyThetaRed6(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp6(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed6(:, alphaind, Qind, nn));
%             DNFAlphaRed6(alphaind, Qind, nn)= sum(DNFAlphaThetaRed6(alphaind, :, Qind, nn));
%             DEFAlphaRedp6(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed6(:, alphaind, Qind, nn));
%             DEFAlphaRed6(alphaind, Qind, nn)= sum(DEFAlphaThetaRed6(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp6(thetaind, Qind, nn)= sum(DNFEnergyThetaRed6(:, thetaind, Qind, nn));
%             DNFThetaRed6(thetaind, Qind, nn)= sum(DNFAlphaThetaRed6(:, thetaind, Qind, nn));
%             DEFThetaRedp6(thetaind, Qind, nn)= sum(DEFEnergyThetaRed6(:, thetaind, Qind, nn));
%             DEFThetaRed6(thetaind, Qind, nn)= sum(DEFAlphaThetaRed6(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend7
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp7(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp7(Vperp2ind, :, Qind, nn));
%             FVperp2Red7(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp7(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp7(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp7(Vperp1ind, :, Qind, nn));
%             FVperp1Red7(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp7(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp7(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp7(:, Vparind, Qind, nn));
%             FVparRed7(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp7(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp7(Eind, Qind, nn)= sum(DNFEnergyAlphaRed7(Eind, :, Qind, nn));
%             DNFEnergyRed7(Eind, Qind, nn)= sum(DNFEnergyThetaRed7(Eind, :, Qind, nn));
%             DEFEnergyRedp7(Eind, Qind, nn)= sum(DEFEnergyAlphaRed7(Eind, :, Qind, nn));
%             DEFEnergyRed7(Eind, Qind, nn)= sum(DEFEnergyThetaRed7(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp7(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed7(:, alphaind, Qind, nn));
%             DNFAlphaRed7(alphaind, Qind, nn)= sum(DNFAlphaThetaRed7(alphaind, :, Qind, nn));
%             DEFAlphaRedp7(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed7(:, alphaind, Qind, nn));
%             DEFAlphaRed7(alphaind, Qind, nn)= sum(DEFAlphaThetaRed7(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp7(thetaind, Qind, nn)= sum(DNFEnergyThetaRed7(:, thetaind, Qind, nn));
%             DNFThetaRed7(thetaind, Qind, nn)= sum(DNFAlphaThetaRed7(:, thetaind, Qind, nn));
%             DEFThetaRedp7(thetaind, Qind, nn)= sum(DEFEnergyThetaRed7(:, thetaind, Qind, nn));
%             DEFThetaRed7(thetaind, Qind, nn)= sum(DEFAlphaThetaRed7(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend8
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp8(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp8(Vperp2ind, :, Qind, nn));
%             FVperp2Red8(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp8(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp8(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp8(Vperp1ind, :, Qind, nn));
%             FVperp1Red8(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp8(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp8(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp8(:, Vparind, Qind, nn));
%             FVparRed8(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp8(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp8(Eind, Qind, nn)= sum(DNFEnergyAlphaRed8(Eind, :, Qind, nn));
%             DNFEnergyRed8(Eind, Qind, nn)= sum(DNFEnergyThetaRed8(Eind, :, Qind, nn));
%             DEFEnergyRedp8(Eind, Qind, nn)= sum(DEFEnergyAlphaRed8(Eind, :, Qind, nn));
%             DEFEnergyRed8(Eind, Qind, nn)= sum(DEFEnergyThetaRed8(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp8(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed8(:, alphaind, Qind, nn));
%             DNFAlphaRed8(alphaind, Qind, nn)= sum(DNFAlphaThetaRed8(alphaind, :, Qind, nn));
%             DEFAlphaRedp8(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed8(:, alphaind, Qind, nn));
%             DEFAlphaRed8(alphaind, Qind, nn)= sum(DEFAlphaThetaRed8(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp8(thetaind, Qind, nn)= sum(DNFEnergyThetaRed8(:, thetaind, Qind, nn));
%             DNFThetaRed8(thetaind, Qind, nn)= sum(DNFAlphaThetaRed8(:, thetaind, Qind, nn));
%             DEFThetaRedp8(thetaind, Qind, nn)= sum(DEFEnergyThetaRed8(:, thetaind, Qind, nn));
%             DEFThetaRed8(thetaind, Qind, nn)= sum(DEFAlphaThetaRed8(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend9
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp9(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp9(Vperp2ind, :, Qind, nn));
%             FVperp2Red9(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp9(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp9(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp9(Vperp1ind, :, Qind, nn));
%             FVperp1Red9(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp9(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp9(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp9(:, Vparind, Qind, nn));
%             FVparRed9(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp9(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp9(Eind, Qind, nn)= sum(DNFEnergyAlphaRed9(Eind, :, Qind, nn));
%             DNFEnergyRed9(Eind, Qind, nn)= sum(DNFEnergyThetaRed9(Eind, :, Qind, nn));
%             DEFEnergyRedp9(Eind, Qind, nn)= sum(DEFEnergyAlphaRed9(Eind, :, Qind, nn));
%             DEFEnergyRed9(Eind, Qind, nn)= sum(DEFEnergyThetaRed9(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp9(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed9(:, alphaind, Qind, nn));
%             DNFAlphaRed9(alphaind, Qind, nn)= sum(DNFAlphaThetaRed9(alphaind, :, Qind, nn));
%             DEFAlphaRedp9(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed9(:, alphaind, Qind, nn));
%             DEFAlphaRed9(alphaind, Qind, nn)= sum(DEFAlphaThetaRed9(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp9(thetaind, Qind, nn)= sum(DNFEnergyThetaRed9(:, thetaind, Qind, nn));
%             DNFThetaRed9(thetaind, Qind, nn)= sum(DNFAlphaThetaRed9(:, thetaind, Qind, nn));
%             DEFThetaRedp9(thetaind, Qind, nn)= sum(DEFEnergyThetaRed9(:, thetaind, Qind, nn));
%             DEFThetaRed9(thetaind, Qind, nn)= sum(DEFAlphaThetaRed9(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend10
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp10(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp10(Vperp2ind, :, Qind, nn));
%             FVperp2Red10(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp10(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp10(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp10(Vperp1ind, :, Qind, nn));
%             FVperp1Red10(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp10(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp10(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp10(:, Vparind, Qind, nn));
%             FVparRed10(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp10(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp10(Eind, Qind, nn)= sum(DNFEnergyAlphaRed10(Eind, :, Qind, nn));
%             DNFEnergyRed10(Eind, Qind, nn)= sum(DNFEnergyThetaRed10(Eind, :, Qind, nn));
%             DEFEnergyRedp10(Eind, Qind, nn)= sum(DEFEnergyAlphaRed10(Eind, :, Qind, nn));
%             DEFEnergyRed10(Eind, Qind, nn)= sum(DEFEnergyThetaRed10(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp10(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed10(:, alphaind, Qind, nn));
%             DNFAlphaRed10(alphaind, Qind, nn)= sum(DNFAlphaThetaRed10(alphaind, :, Qind, nn));
%             DEFAlphaRedp10(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed10(:, alphaind, Qind, nn));
%             DEFAlphaRed10(alphaind, Qind, nn)= sum(DEFAlphaThetaRed10(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp10(thetaind, Qind, nn)= sum(DNFEnergyThetaRed10(:, thetaind, Qind, nn));
%             DNFThetaRed10(thetaind, Qind, nn)= sum(DNFAlphaThetaRed10(:, thetaind, Qind, nn));
%             DEFThetaRedp10(thetaind, Qind, nn)= sum(DEFEnergyThetaRed10(:, thetaind, Qind, nn));
%             DEFThetaRed10(thetaind, Qind, nn)= sum(DEFAlphaThetaRed10(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend11
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp11(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp11(Vperp2ind, :, Qind, nn));
%             FVperp2Red11(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp11(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp11(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp11(Vperp1ind, :, Qind, nn));
%             FVperp1Red11(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp11(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp11(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp11(:, Vparind, Qind, nn));
%             FVparRed11(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp11(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp11(Eind, Qind, nn)= sum(DNFEnergyAlphaRed11(Eind, :, Qind, nn));
%             DNFEnergyRed11(Eind, Qind, nn)= sum(DNFEnergyThetaRed11(Eind, :, Qind, nn));
%             DEFEnergyRedp11(Eind, Qind, nn)= sum(DEFEnergyAlphaRed11(Eind, :, Qind, nn));
%             DEFEnergyRed11(Eind, Qind, nn)= sum(DEFEnergyThetaRed11(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp11(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed11(:, alphaind, Qind, nn));
%             DNFAlphaRed11(alphaind, Qind, nn)= sum(DNFAlphaThetaRed11(alphaind, :, Qind, nn));
%             DEFAlphaRedp11(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed11(:, alphaind, Qind, nn));
%             DEFAlphaRed11(alphaind, Qind, nn)= sum(DEFAlphaThetaRed11(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp11(thetaind, Qind, nn)= sum(DNFEnergyThetaRed11(:, thetaind, Qind, nn));
%             DNFThetaRed11(thetaind, Qind, nn)= sum(DNFAlphaThetaRed11(:, thetaind, Qind, nn));
%             DEFThetaRedp11(thetaind, Qind, nn)= sum(DEFEnergyThetaRed11(:, thetaind, Qind, nn));
%             DEFThetaRed11(thetaind, Qind, nn)= sum(DEFAlphaThetaRed11(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend12
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp12(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp12(Vperp2ind, :, Qind, nn));
%             FVperp2Red12(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp12(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp12(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp12(Vperp1ind, :, Qind, nn));
%             FVperp1Red12(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp12(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp12(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp12(:, Vparind, Qind, nn));
%             FVparRed12(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp12(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp12(Eind, Qind, nn)= sum(DNFEnergyAlphaRed12(Eind, :, Qind, nn));
%             DNFEnergyRed12(Eind, Qind, nn)= sum(DNFEnergyThetaRed12(Eind, :, Qind, nn));
%             DEFEnergyRedp12(Eind, Qind, nn)= sum(DEFEnergyAlphaRed12(Eind, :, Qind, nn));
%             DEFEnergyRed12(Eind, Qind, nn)= sum(DEFEnergyThetaRed12(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp12(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed12(:, alphaind, Qind, nn));
%             DNFAlphaRed12(alphaind, Qind, nn)= sum(DNFAlphaThetaRed12(alphaind, :, Qind, nn));
%             DEFAlphaRedp12(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed12(:, alphaind, Qind, nn));
%             DEFAlphaRed12(alphaind, Qind, nn)= sum(DEFAlphaThetaRed12(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp12(thetaind, Qind, nn)= sum(DNFEnergyThetaRed12(:, thetaind, Qind, nn));
%             DNFThetaRed12(thetaind, Qind, nn)= sum(DNFAlphaThetaRed12(:, thetaind, Qind, nn));
%             DEFThetaRedp12(thetaind, Qind, nn)= sum(DEFEnergyThetaRed12(:, thetaind, Qind, nn));
%             DEFThetaRed12(thetaind, Qind, nn)= sum(DEFAlphaThetaRed12(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend13
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp13(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp13(Vperp2ind, :, Qind, nn));
%             FVperp2Red13(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp13(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp13(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp13(Vperp1ind, :, Qind, nn));
%             FVperp1Red13(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp13(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp13(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp13(:, Vparind, Qind, nn));
%             FVparRed13(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp13(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp13(Eind, Qind, nn)= sum(DNFEnergyAlphaRed13(Eind, :, Qind, nn));
%             DNFEnergyRed13(Eind, Qind, nn)= sum(DNFEnergyThetaRed13(Eind, :, Qind, nn));
%             DEFEnergyRedp13(Eind, Qind, nn)= sum(DEFEnergyAlphaRed13(Eind, :, Qind, nn));
%             DEFEnergyRed13(Eind, Qind, nn)= sum(DEFEnergyThetaRed13(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp13(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed13(:, alphaind, Qind, nn));
%             DNFAlphaRed13(alphaind, Qind, nn)= sum(DNFAlphaThetaRed13(alphaind, :, Qind, nn));
%             DEFAlphaRedp13(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed13(:, alphaind, Qind, nn));
%             DEFAlphaRed13(alphaind, Qind, nn)= sum(DEFAlphaThetaRed13(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp13(thetaind, Qind, nn)= sum(DNFEnergyThetaRed13(:, thetaind, Qind, nn));
%             DNFThetaRed13(thetaind, Qind, nn)= sum(DNFAlphaThetaRed13(:, thetaind, Qind, nn));
%             DEFThetaRedp13(thetaind, Qind, nn)= sum(DEFEnergyThetaRed13(:, thetaind, Qind, nn));
%             DEFThetaRed13(thetaind, Qind, nn)= sum(DEFAlphaThetaRed13(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend14
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp14(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp14(Vperp2ind, :, Qind, nn));
%             FVperp2Red14(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp14(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp14(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp14(Vperp1ind, :, Qind, nn));
%             FVperp1Red14(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp14(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp14(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp14(:, Vparind, Qind, nn));
%             FVparRed14(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp14(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp14(Eind, Qind, nn)= sum(DNFEnergyAlphaRed14(Eind, :, Qind, nn));
%             DNFEnergyRed14(Eind, Qind, nn)= sum(DNFEnergyThetaRed14(Eind, :, Qind, nn));
%             DEFEnergyRedp14(Eind, Qind, nn)= sum(DEFEnergyAlphaRed14(Eind, :, Qind, nn));
%             DEFEnergyRed14(Eind, Qind, nn)= sum(DEFEnergyThetaRed14(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp14(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed14(:, alphaind, Qind, nn));
%             DNFAlphaRed14(alphaind, Qind, nn)= sum(DNFAlphaThetaRed14(alphaind, :, Qind, nn));
%             DEFAlphaRedp14(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed14(:, alphaind, Qind, nn));
%             DEFAlphaRed14(alphaind, Qind, nn)= sum(DEFAlphaThetaRed14(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp14(thetaind, Qind, nn)= sum(DNFEnergyThetaRed14(:, thetaind, Qind, nn));
%             DNFThetaRed14(thetaind, Qind, nn)= sum(DNFAlphaThetaRed14(:, thetaind, Qind, nn));
%             DEFThetaRedp14(thetaind, Qind, nn)= sum(DEFEnergyThetaRed14(:, thetaind, Qind, nn));
%             DEFThetaRed14(thetaind, Qind, nn)= sum(DEFAlphaThetaRed14(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend15
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp15(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp15(Vperp2ind, :, Qind, nn));
%             FVperp2Red15(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp15(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp15(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp15(Vperp1ind, :, Qind, nn));
%             FVperp1Red15(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp15(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp15(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp15(:, Vparind, Qind, nn));
%             FVparRed15(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp15(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp15(Eind, Qind, nn)= sum(DNFEnergyAlphaRed15(Eind, :, Qind, nn));
%             DNFEnergyRed15(Eind, Qind, nn)= sum(DNFEnergyThetaRed15(Eind, :, Qind, nn));
%             DEFEnergyRedp15(Eind, Qind, nn)= sum(DEFEnergyAlphaRed15(Eind, :, Qind, nn));
%             DEFEnergyRed15(Eind, Qind, nn)= sum(DEFEnergyThetaRed15(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp15(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed15(:, alphaind, Qind, nn));
%             DNFAlphaRed15(alphaind, Qind, nn)= sum(DNFAlphaThetaRed15(alphaind, :, Qind, nn));
%             DEFAlphaRedp15(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed15(:, alphaind, Qind, nn));
%             DEFAlphaRed15(alphaind, Qind, nn)= sum(DEFAlphaThetaRed15(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp15(thetaind, Qind, nn)= sum(DNFEnergyThetaRed15(:, thetaind, Qind, nn));
%             DNFThetaRed15(thetaind, Qind, nn)= sum(DNFAlphaThetaRed15(:, thetaind, Qind, nn));
%             DEFThetaRedp15(thetaind, Qind, nn)= sum(DEFEnergyThetaRed15(:, thetaind, Qind, nn));
%             DEFThetaRed15(thetaind, Qind, nn)= sum(DEFAlphaThetaRed15(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend16
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp16(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp16(Vperp2ind, :, Qind, nn));
%             FVperp2Red16(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp16(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp16(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp16(Vperp1ind, :, Qind, nn));
%             FVperp1Red16(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp16(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp16(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp16(:, Vparind, Qind, nn));
%             FVparRed16(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp16(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp16(Eind, Qind, nn)= sum(DNFEnergyAlphaRed16(Eind, :, Qind, nn));
%             DNFEnergyRed16(Eind, Qind, nn)= sum(DNFEnergyThetaRed16(Eind, :, Qind, nn));
%             DEFEnergyRedp16(Eind, Qind, nn)= sum(DEFEnergyAlphaRed16(Eind, :, Qind, nn));
%             DEFEnergyRed16(Eind, Qind, nn)= sum(DEFEnergyThetaRed16(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp16(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed16(:, alphaind, Qind, nn));
%             DNFAlphaRed16(alphaind, Qind, nn)= sum(DNFAlphaThetaRed16(alphaind, :, Qind, nn));
%             DEFAlphaRedp16(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed16(:, alphaind, Qind, nn));
%             DEFAlphaRed16(alphaind, Qind, nn)= sum(DEFAlphaThetaRed16(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp16(thetaind, Qind, nn)= sum(DNFEnergyThetaRed16(:, thetaind, Qind, nn));
%             DNFThetaRed16(thetaind, Qind, nn)= sum(DNFAlphaThetaRed16(:, thetaind, Qind, nn));
%             DEFThetaRedp16(thetaind, Qind, nn)= sum(DEFEnergyThetaRed16(:, thetaind, Qind, nn));
%             DEFThetaRed16(thetaind, Qind, nn)= sum(DEFAlphaThetaRed16(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend17
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp17(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp17(Vperp2ind, :, Qind, nn));
%             FVperp2Red17(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp17(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp17(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp17(Vperp1ind, :, Qind, nn));
%             FVperp1Red17(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp17(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp17(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp17(:, Vparind, Qind, nn));
%             FVparRed17(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp17(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp17(Eind, Qind, nn)= sum(DNFEnergyAlphaRed17(Eind, :, Qind, nn));
%             DNFEnergyRed17(Eind, Qind, nn)= sum(DNFEnergyThetaRed17(Eind, :, Qind, nn));
%             DEFEnergyRedp17(Eind, Qind, nn)= sum(DEFEnergyAlphaRed17(Eind, :, Qind, nn));
%             DEFEnergyRed17(Eind, Qind, nn)= sum(DEFEnergyThetaRed17(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp17(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed17(:, alphaind, Qind, nn));
%             DNFAlphaRed17(alphaind, Qind, nn)= sum(DNFAlphaThetaRed17(alphaind, :, Qind, nn));
%             DEFAlphaRedp17(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed17(:, alphaind, Qind, nn));
%             DEFAlphaRed17(alphaind, Qind, nn)= sum(DEFAlphaThetaRed17(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp17(thetaind, Qind, nn)= sum(DNFEnergyThetaRed17(:, thetaind, Qind, nn));
%             DNFThetaRed17(thetaind, Qind, nn)= sum(DNFAlphaThetaRed17(:, thetaind, Qind, nn));
%             DEFThetaRedp17(thetaind, Qind, nn)= sum(DEFEnergyThetaRed17(:, thetaind, Qind, nn));
%             DEFThetaRed17(thetaind, Qind, nn)= sum(DEFAlphaThetaRed17(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend18
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp18(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp18(Vperp2ind, :, Qind, nn));
%             FVperp2Red18(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp18(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp18(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp18(Vperp1ind, :, Qind, nn));
%             FVperp1Red18(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp18(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp18(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp18(:, Vparind, Qind, nn));
%             FVparRed18(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp18(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp18(Eind, Qind, nn)= sum(DNFEnergyAlphaRed18(Eind, :, Qind, nn));
%             DNFEnergyRed18(Eind, Qind, nn)= sum(DNFEnergyThetaRed18(Eind, :, Qind, nn));
%             DEFEnergyRedp18(Eind, Qind, nn)= sum(DEFEnergyAlphaRed18(Eind, :, Qind, nn));
%             DEFEnergyRed18(Eind, Qind, nn)= sum(DEFEnergyThetaRed18(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp18(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed18(:, alphaind, Qind, nn));
%             DNFAlphaRed18(alphaind, Qind, nn)= sum(DNFAlphaThetaRed18(alphaind, :, Qind, nn));
%             DEFAlphaRedp18(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed18(:, alphaind, Qind, nn));
%             DEFAlphaRed18(alphaind, Qind, nn)= sum(DEFAlphaThetaRed18(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp18(thetaind, Qind, nn)= sum(DNFEnergyThetaRed18(:, thetaind, Qind, nn));
%             DNFThetaRed18(thetaind, Qind, nn)= sum(DNFAlphaThetaRed18(:, thetaind, Qind, nn));
%             DEFThetaRedp18(thetaind, Qind, nn)= sum(DEFEnergyThetaRed18(:, thetaind, Qind, nn));
%             DEFThetaRed18(thetaind, Qind, nn)= sum(DEFAlphaThetaRed18(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend19
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp19(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp19(Vperp2ind, :, Qind, nn));
%             FVperp2Red19(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp19(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp19(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp19(Vperp1ind, :, Qind, nn));
%             FVperp1Red19(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp19(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp19(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp19(:, Vparind, Qind, nn));
%             FVparRed19(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp19(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp19(Eind, Qind, nn)= sum(DNFEnergyAlphaRed19(Eind, :, Qind, nn));
%             DNFEnergyRed19(Eind, Qind, nn)= sum(DNFEnergyThetaRed19(Eind, :, Qind, nn));
%             DEFEnergyRedp19(Eind, Qind, nn)= sum(DEFEnergyAlphaRed19(Eind, :, Qind, nn));
%             DEFEnergyRed19(Eind, Qind, nn)= sum(DEFEnergyThetaRed19(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp19(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed19(:, alphaind, Qind, nn));
%             DNFAlphaRed19(alphaind, Qind, nn)= sum(DNFAlphaThetaRed19(alphaind, :, Qind, nn));
%             DEFAlphaRedp19(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed19(:, alphaind, Qind, nn));
%             DEFAlphaRed19(alphaind, Qind, nn)= sum(DEFAlphaThetaRed19(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp19(thetaind, Qind, nn)= sum(DNFEnergyThetaRed19(:, thetaind, Qind, nn));
%             DNFThetaRed19(thetaind, Qind, nn)= sum(DNFAlphaThetaRed19(:, thetaind, Qind, nn));
%             DEFThetaRedp19(thetaind, Qind, nn)= sum(DEFEnergyThetaRed19(:, thetaind, Qind, nn));
%             DEFThetaRed19(thetaind, Qind, nn)= sum(DEFAlphaThetaRed19(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend20
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp20(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp20(Vperp2ind, :, Qind, nn));
%             FVperp2Red20(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp20(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp20(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp20(Vperp1ind, :, Qind, nn));
%             FVperp1Red20(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp20(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp20(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp20(:, Vparind, Qind, nn));
%             FVparRed20(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp20(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp20(Eind, Qind, nn)= sum(DNFEnergyAlphaRed20(Eind, :, Qind, nn));
%             DNFEnergyRed20(Eind, Qind, nn)= sum(DNFEnergyThetaRed20(Eind, :, Qind, nn));
%             DEFEnergyRedp20(Eind, Qind, nn)= sum(DEFEnergyAlphaRed20(Eind, :, Qind, nn));
%             DEFEnergyRed20(Eind, Qind, nn)= sum(DEFEnergyThetaRed20(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp20(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed20(:, alphaind, Qind, nn));
%             DNFAlphaRed20(alphaind, Qind, nn)= sum(DNFAlphaThetaRed20(alphaind, :, Qind, nn));
%             DEFAlphaRedp20(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed20(:, alphaind, Qind, nn));
%             DEFAlphaRed20(alphaind, Qind, nn)= sum(DEFAlphaThetaRed20(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp20(thetaind, Qind, nn)= sum(DNFEnergyThetaRed20(:, thetaind, Qind, nn));
%             DNFThetaRed20(thetaind, Qind, nn)= sum(DNFAlphaThetaRed20(:, thetaind, Qind, nn));
%             DEFThetaRedp20(thetaind, Qind, nn)= sum(DEFEnergyThetaRed20(:, thetaind, Qind, nn));
%             DEFThetaRed20(thetaind, Qind, nn)= sum(DEFAlphaThetaRed20(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend21
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp21(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp21(Vperp2ind, :, Qind, nn));
%             FVperp2Red21(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp21(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp21(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp21(Vperp1ind, :, Qind, nn));
%             FVperp1Red21(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp21(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp21(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp21(:, Vparind, Qind, nn));
%             FVparRed21(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp21(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp21(Eind, Qind, nn)= sum(DNFEnergyAlphaRed21(Eind, :, Qind, nn));
%             DNFEnergyRed21(Eind, Qind, nn)= sum(DNFEnergyThetaRed21(Eind, :, Qind, nn));
%             DEFEnergyRedp21(Eind, Qind, nn)= sum(DEFEnergyAlphaRed21(Eind, :, Qind, nn));
%             DEFEnergyRed21(Eind, Qind, nn)= sum(DEFEnergyThetaRed21(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp21(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed21(:, alphaind, Qind, nn));
%             DNFAlphaRed21(alphaind, Qind, nn)= sum(DNFAlphaThetaRed21(alphaind, :, Qind, nn));
%             DEFAlphaRedp21(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed21(:, alphaind, Qind, nn));
%             DEFAlphaRed21(alphaind, Qind, nn)= sum(DEFAlphaThetaRed21(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp21(thetaind, Qind, nn)= sum(DNFEnergyThetaRed21(:, thetaind, Qind, nn));
%             DNFThetaRed21(thetaind, Qind, nn)= sum(DNFAlphaThetaRed21(:, thetaind, Qind, nn));
%             DEFThetaRedp21(thetaind, Qind, nn)= sum(DEFEnergyThetaRed21(:, thetaind, Qind, nn));
%             DEFThetaRed21(thetaind, Qind, nn)= sum(DEFAlphaThetaRed21(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend22
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp22(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp22(Vperp2ind, :, Qind, nn));
%             FVperp2Red22(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp22(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp22(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp22(Vperp1ind, :, Qind, nn));
%             FVperp1Red22(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp22(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp22(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp22(:, Vparind, Qind, nn));
%             FVparRed22(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp22(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp22(Eind, Qind, nn)= sum(DNFEnergyAlphaRed22(Eind, :, Qind, nn));
%             DNFEnergyRed22(Eind, Qind, nn)= sum(DNFEnergyThetaRed22(Eind, :, Qind, nn));
%             DEFEnergyRedp22(Eind, Qind, nn)= sum(DEFEnergyAlphaRed22(Eind, :, Qind, nn));
%             DEFEnergyRed22(Eind, Qind, nn)= sum(DEFEnergyThetaRed22(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp22(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed22(:, alphaind, Qind, nn));
%             DNFAlphaRed22(alphaind, Qind, nn)= sum(DNFAlphaThetaRed22(alphaind, :, Qind, nn));
%             DEFAlphaRedp22(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed22(:, alphaind, Qind, nn));
%             DEFAlphaRed22(alphaind, Qind, nn)= sum(DEFAlphaThetaRed22(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp22(thetaind, Qind, nn)= sum(DNFEnergyThetaRed22(:, thetaind, Qind, nn));
%             DNFThetaRed22(thetaind, Qind, nn)= sum(DNFAlphaThetaRed22(:, thetaind, Qind, nn));
%             DEFThetaRedp22(thetaind, Qind, nn)= sum(DEFEnergyThetaRed22(:, thetaind, Qind, nn));
%             DEFThetaRed22(thetaind, Qind, nn)= sum(DEFAlphaThetaRed22(:, thetaind, Qind, nn));
%         end
%     end
% end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend23
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp23(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp23(Vperp2ind, :, Qind, nn));
            FVperp2Red23(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp23(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp23(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp23(Vperp1ind, :, Qind, nn));
            FVperp1Red23(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp23(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp23(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp23(:, Vparind, Qind, nn));
            FVparRed23(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp23(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp23(Eind, Qind, nn)= sum(DNFEnergyAlphaRed23(Eind, :, Qind, nn));
            DNFEnergyRed23(Eind, Qind, nn)= sum(DNFEnergyThetaRed23(Eind, :, Qind, nn));
            DEFEnergyRedp23(Eind, Qind, nn)= sum(DEFEnergyAlphaRed23(Eind, :, Qind, nn));
            DEFEnergyRed23(Eind, Qind, nn)= sum(DEFEnergyThetaRed23(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp23(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed23(:, alphaind, Qind, nn));
            DNFAlphaRed23(alphaind, Qind, nn)= sum(DNFAlphaThetaRed23(alphaind, :, Qind, nn));
            DEFAlphaRedp23(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed23(:, alphaind, Qind, nn));
            DEFAlphaRed23(alphaind, Qind, nn)= sum(DEFAlphaThetaRed23(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp23(thetaind, Qind, nn)= sum(DNFEnergyThetaRed23(:, thetaind, Qind, nn));
            DNFThetaRed23(thetaind, Qind, nn)= sum(DNFAlphaThetaRed23(:, thetaind, Qind, nn));
            DEFThetaRedp23(thetaind, Qind, nn)= sum(DEFEnergyThetaRed23(:, thetaind, Qind, nn));
            DEFThetaRed23(thetaind, Qind, nn)= sum(DEFAlphaThetaRed23(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend24
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp24(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp24(Vperp2ind, :, Qind, nn));
            FVperp2Red24(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp24(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp24(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp24(Vperp1ind, :, Qind, nn));
            FVperp1Red24(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp24(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp24(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp24(:, Vparind, Qind, nn));
            FVparRed24(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp24(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp24(Eind, Qind, nn)= sum(DNFEnergyAlphaRed24(Eind, :, Qind, nn));
            DNFEnergyRed24(Eind, Qind, nn)= sum(DNFEnergyThetaRed24(Eind, :, Qind, nn));
            DEFEnergyRedp24(Eind, Qind, nn)= sum(DEFEnergyAlphaRed24(Eind, :, Qind, nn));
            DEFEnergyRed24(Eind, Qind, nn)= sum(DEFEnergyThetaRed24(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp24(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed24(:, alphaind, Qind, nn));
            DNFAlphaRed24(alphaind, Qind, nn)= sum(DNFAlphaThetaRed24(alphaind, :, Qind, nn));
            DEFAlphaRedp24(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed24(:, alphaind, Qind, nn));
            DEFAlphaRed24(alphaind, Qind, nn)= sum(DEFAlphaThetaRed24(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp24(thetaind, Qind, nn)= sum(DNFEnergyThetaRed24(:, thetaind, Qind, nn));
            DNFThetaRed24(thetaind, Qind, nn)= sum(DNFAlphaThetaRed24(:, thetaind, Qind, nn));
            DEFThetaRedp24(thetaind, Qind, nn)= sum(DEFEnergyThetaRed24(:, thetaind, Qind, nn));
            DEFThetaRed24(thetaind, Qind, nn)= sum(DEFAlphaThetaRed24(:, thetaind, Qind, nn));
        end
    end
end

%% PLOT V REDUCED F VPAR

close all
clc

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1000 800])

Qind= 15;

subplot(2, 2, 1)
plot(-VparGCqq(:)*1e-3, FVparRed1(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, FVparRed5(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed9(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed13(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed17(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed21(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
xlim([-10 10])
ylim([0 2])
title('$E_{\parallel 0}= 0$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 2.2, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 2)
plot(-VparGCqq(:)*1e-3, FVparRed2(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, FVparRed6(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed10(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed14(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed18(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed22(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 2])
title('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 2.2, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 3)
plot(-VparGCqq(:)*1e-3, FVparRed3(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, FVparRed7(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed11(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed15(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed19(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed23(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 1.2])
title('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 1.3, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 4)
plot(-VparGCqq(:)*1e-3, FVparRed4(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, FVparRed8(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed12(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed16(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed20(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, FVparRed24(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 0.03])
title('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 0.033, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

toc

disp('V REDUCED F VPAR PLOTS COMPLETE')

%% PLOT V REDUCED F VPERP1

close all
clc

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1000 800])

Qind= 15;

subplot(2, 2, 1)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red1(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, FVperp1Red5(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red9(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red13(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red17(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red21(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
xlim([-10 10])
ylim([0 2])
title('$E_{\parallel 0}= 0$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 2.2, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red2(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, FVperp1Red6(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red10(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red14(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red18(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red22(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 2])
title('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 2.2, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 3)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red3(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, FVperp1Red7(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red11(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red15(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red19(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red23(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 1.2])
title('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 1.3, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 4)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red4(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, FVperp1Red8(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red12(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red16(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red20(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, FVperp1Red24(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 0.03])
title('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 0.033, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

toc

disp('V REDUCED F VPERP1 PLOTS COMPLETE')

%% PLOT V REDUCED F VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1000 800])

Qind= 15;

subplot(2, 2, 1)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red1(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, FVperp2Red5(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red9(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red13(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red17(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red21(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
xlim([-10 10])
ylim([0 2])
title('$E_{\parallel 0}= 0$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 2.2, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red2(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, FVperp2Red6(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red10(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red14(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red18(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red22(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 2])
title('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 2.2, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 3)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red3(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, FVperp2Red7(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red11(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red15(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red19(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red23(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 1.2])
title('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 1.3, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 4)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red4(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, FVperp2Red8(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red12(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red16(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red20(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, FVperp2Red24(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-10 10])
ylim([0 0.03])
title('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-12, 0.033, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$f$ [s$^3$ m$^{-6}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

toc

disp('V REDUCED F VPERP2 PLOTS COMPLETE')

%% PLOT V REDUCED DNF ENERGY

close all
clc

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1000 800])

Qind= 15;

subplot(2, 2, 1)
plot((6.242e18).*EnergyG(:), DNFEnergyRed1(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DNFEnergyRed5(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed9(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed13(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed17(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed21(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
xlim([0 20])
title('$E_{\parallel 0}= 0$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 11e51, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_N$ [m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed2(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DNFEnergyRed6(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed10(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed14(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed18(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed22(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 20])
title('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 11e51, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_N$ [m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 3)
plot((6.242e18).*EnergyG(:), DNFEnergyRed3(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DNFEnergyRed7(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed11(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed15(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed19(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed23(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 20])
title('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 6.7e51, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_N$ [m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 4)
plot((6.242e18).*EnergyG(:), DNFEnergyRed4(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DNFEnergyRed8(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed12(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed16(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed20(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DNFEnergyRed24(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 20])
title('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 11.7e49, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_N$ [m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

toc

disp('V REDUCED DNF ENERGY PLOTS COMPLETE')

%% PLOT V REDUCED DEF ENERGY

close all
clc

pausevar= 1e-9;
FontSize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1000 800])

Qind= 15;

subplot(2, 2, 1)
plot((6.242e18).*EnergyG(:), DEFEnergyRed1(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DEFEnergyRed5(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed9(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed13(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed17(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed21(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
LH(5)= plot(nan, nan, 'c', 'MarkerSize', 10, 'LineWidth', 2);
LH(6)= plot(nan, nan, 'm', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 100$ m');
L{3}= horzcat('$\lambda_\perp= 10$ m');
L{4}= horzcat('$\lambda_\perp= 1$ m');
L{5}= horzcat('$\lambda_\perp= 0.5$ m');
L{6}= horzcat('$\lambda_\perp= 0.25$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 15, 'location', legloc)
xlim([0 20])
title('$E_{\parallel 0}= 0$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 16.7e51, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed2(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DEFEnergyRed6(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed10(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed14(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed18(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed22(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 20])
title('$E_{\parallel 0}= 1 \times 10^{-8}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 16.7e51, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 3)
plot((6.242e18).*EnergyG(:), DEFEnergyRed3(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DEFEnergyRed7(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed11(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed15(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed19(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed23(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 20])
title('$E_{\parallel 0}= 1 \times 10^{-7}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 11.2e51, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 2, 4)
plot((6.242e18).*EnergyG(:), DEFEnergyRed4(:, Qind, end), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), DEFEnergyRed8(:, Qind, end), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed12(:, Qind, end), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed16(:, Qind, end), 'g', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed20(:, Qind, end), 'c', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), DEFEnergyRed24(:, Qind, end), 'm', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 20])
title('$E_{\parallel 0}= 1 \times 10^{-6}$ V/m', 'interpreter', 'latex', 'FontSize', 25);
text(-3, 2.8e50, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV m$^{-2}$ s$^{-1}$ eV$^{-1}$ sr$^{-1}$]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$w$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

toc

disp('V REDUCED DEF ENERGY PLOTS COMPLETE')

%% COMPUTE FINAL NC REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic

for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend1
        for Eind= 1:1:NEG
            FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
            FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
            FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
            FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
            DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
            DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
            DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend2
        for Eind= 1:1:NEG
            FEEnergyRed2(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed2(Eind, :, Qind, nn));
            DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
            DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp2(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp2(Vperp2ind, :, Qind, nn));
            FVperp2Red2(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp2(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp2(Vperp1ind, :, Qind, nn));
            FVperp1Red2(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp2(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp2(:, Vparind, Qind, nn));
            FVparRed2(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp2(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
            DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyThetaRed2(Eind, :, Qind, nn));
            DEFEnergyRedp2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));
            DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyThetaRed2(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp2(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed2(:, alphaind, Qind, nn));
            DNFAlphaRed2(alphaind, Qind, nn)= sum(DNFAlphaThetaRed2(alphaind, :, Qind, nn));
            DEFAlphaRedp2(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed2(:, alphaind, Qind, nn));
            DEFAlphaRed2(alphaind, Qind, nn)= sum(DEFAlphaThetaRed2(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp2(thetaind, Qind, nn)= sum(DNFEnergyThetaRed2(:, thetaind, Qind, nn));
            DNFThetaRed2(thetaind, Qind, nn)= sum(DNFAlphaThetaRed2(:, thetaind, Qind, nn));
            DEFThetaRedp2(thetaind, Qind, nn)= sum(DEFEnergyThetaRed2(:, thetaind, Qind, nn));
            DEFThetaRed2(thetaind, Qind, nn)= sum(DEFAlphaThetaRed2(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend3
        for Eind= 1:1:NEG
            FEEnergyRed3(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed3(Eind, :, Qind, nn));
            DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
            DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp3(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp3(Vperp2ind, :, Qind, nn));
            FVperp2Red3(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp3(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp3(Vperp1ind, :, Qind, nn));
            FVperp1Red3(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp3(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp3(:, Vparind, Qind, nn));
            FVparRed3(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp3(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
            DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyThetaRed3(Eind, :, Qind, nn));
            DEFEnergyRedp3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
            DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyThetaRed3(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp3(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed3(:, alphaind, Qind, nn));
            DNFAlphaRed3(alphaind, Qind, nn)= sum(DNFAlphaThetaRed3(alphaind, :, Qind, nn));
            DEFAlphaRedp3(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed3(:, alphaind, Qind, nn));
            DEFAlphaRed3(alphaind, Qind, nn)= sum(DEFAlphaThetaRed3(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp3(thetaind, Qind, nn)= sum(DNFEnergyThetaRed3(:, thetaind, Qind, nn));
            DNFThetaRed3(thetaind, Qind, nn)= sum(DNFAlphaThetaRed3(:, thetaind, Qind, nn));
            DEFThetaRedp3(thetaind, Qind, nn)= sum(DEFEnergyThetaRed3(:, thetaind, Qind, nn));
            DEFThetaRed3(thetaind, Qind, nn)= sum(DEFAlphaThetaRed3(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend4
        for Eind= 1:1:NEG
            FEEnergyRed4(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed4(Eind, :, Qind, nn));
            DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
            DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp4(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp4(Vperp2ind, :, Qind, nn));
            FVperp2Red4(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp4(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp4(Vperp1ind, :, Qind, nn));
            FVperp1Red4(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp4(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp4(:, Vparind, Qind, nn));
            FVparRed4(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp4(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
            DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyThetaRed4(Eind, :, Qind, nn));
            DEFEnergyRedp4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
            DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyThetaRed4(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp4(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed4(:, alphaind, Qind, nn));
            DNFAlphaRed4(alphaind, Qind, nn)= sum(DNFAlphaThetaRed4(alphaind, :, Qind, nn));
            DEFAlphaRedp4(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed4(:, alphaind, Qind, nn));
            DEFAlphaRed4(alphaind, Qind, nn)= sum(DEFAlphaThetaRed4(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp4(thetaind, Qind, nn)= sum(DNFEnergyThetaRed4(:, thetaind, Qind, nn));
            DNFThetaRed4(thetaind, Qind, nn)= sum(DNFAlphaThetaRed4(:, thetaind, Qind, nn));
            DEFThetaRedp4(thetaind, Qind, nn)= sum(DEFEnergyThetaRed4(:, thetaind, Qind, nn));
            DEFThetaRed4(thetaind, Qind, nn)= sum(DEFAlphaThetaRed4(:, thetaind, Qind, nn));
        end
    end
end

toc

disp('COMPUTE FINAL NC REDUCED DEF ENERGY COMPLETE')

%% COMPUTE FINAL V-lambda REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic

for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend1
        for Eind= 1:1:NEG
            FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
            FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
            FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
            FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
            DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
            DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
            DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend21
        for Eind= 1:1:NEG
            FEEnergyRed21(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed21(Eind, :, Qind, nn));
            DNFEnergyRed21(Eind, Qind, nn)= sum(DNFEnergyAlphaRed21(Eind, :, Qind, nn));
            DEFEnergyRed21(Eind, Qind, nn)= sum(DEFEnergyAlphaRed21(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp21(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp21(Vperp2ind, :, Qind, nn));
            FVperp2Red21(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp21(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp21(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp21(Vperp1ind, :, Qind, nn));
            FVperp1Red21(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp21(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp21(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp21(:, Vparind, Qind, nn));
            FVparRed21(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp21(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp21(Eind, Qind, nn)= sum(DNFEnergyAlphaRed21(Eind, :, Qind, nn));
            DNFEnergyRed21(Eind, Qind, nn)= sum(DNFEnergyThetaRed21(Eind, :, Qind, nn));
            DEFEnergyRedp21(Eind, Qind, nn)= sum(DEFEnergyAlphaRed21(Eind, :, Qind, nn));
            DEFEnergyRed21(Eind, Qind, nn)= sum(DEFEnergyThetaRed21(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp21(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed21(:, alphaind, Qind, nn));
            DNFAlphaRed21(alphaind, Qind, nn)= sum(DNFAlphaThetaRed21(alphaind, :, Qind, nn));
            DEFAlphaRedp21(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed21(:, alphaind, Qind, nn));
            DEFAlphaRed21(alphaind, Qind, nn)= sum(DEFAlphaThetaRed21(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp21(thetaind, Qind, nn)= sum(DNFEnergyThetaRed21(:, thetaind, Qind, nn));
            DNFThetaRed21(thetaind, Qind, nn)= sum(DNFAlphaThetaRed21(:, thetaind, Qind, nn));
            DEFThetaRedp21(thetaind, Qind, nn)= sum(DEFEnergyThetaRed21(:, thetaind, Qind, nn));
            DEFThetaRed21(thetaind, Qind, nn)= sum(DEFAlphaThetaRed21(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend4
        for Eind= 1:1:NEG
            FEEnergyRed4(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed4(Eind, :, Qind, nn));
            DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
            DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp4(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp4(Vperp2ind, :, Qind, nn));
            FVperp2Red4(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp4(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp4(Vperp1ind, :, Qind, nn));
            FVperp1Red4(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp4(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp4(:, Vparind, Qind, nn));
            FVparRed4(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp4(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
            DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyThetaRed4(Eind, :, Qind, nn));
            DEFEnergyRedp4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
            DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyThetaRed4(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp4(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed4(:, alphaind, Qind, nn));
            DNFAlphaRed4(alphaind, Qind, nn)= sum(DNFAlphaThetaRed4(alphaind, :, Qind, nn));
            DEFAlphaRedp4(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed4(:, alphaind, Qind, nn));
            DEFAlphaRed4(alphaind, Qind, nn)= sum(DEFAlphaThetaRed4(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp4(thetaind, Qind, nn)= sum(DNFEnergyThetaRed4(:, thetaind, Qind, nn));
            DNFThetaRed4(thetaind, Qind, nn)= sum(DNFAlphaThetaRed4(:, thetaind, Qind, nn));
            DEFThetaRedp4(thetaind, Qind, nn)= sum(DEFEnergyThetaRed4(:, thetaind, Qind, nn));
            DEFThetaRed4(thetaind, Qind, nn)= sum(DEFAlphaThetaRed4(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend24
        for Eind= 1:1:NEG
            FEEnergyRed24(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed24(Eind, :, Qind, nn));
            DNFEnergyRed24(Eind, Qind, nn)= sum(DNFEnergyAlphaRed24(Eind, :, Qind, nn));
            DEFEnergyRed24(Eind, Qind, nn)= sum(DEFEnergyAlphaRed24(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp24(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp24(Vperp2ind, :, Qind, nn));
            FVperp2Red24(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp24(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp24(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp24(Vperp1ind, :, Qind, nn));
            FVperp1Red24(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp24(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp24(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp24(:, Vparind, Qind, nn));
            FVparRed24(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp24(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp24(Eind, Qind, nn)= sum(DNFEnergyAlphaRed24(Eind, :, Qind, nn));
            DNFEnergyRed24(Eind, Qind, nn)= sum(DNFEnergyThetaRed24(Eind, :, Qind, nn));
            DEFEnergyRedp24(Eind, Qind, nn)= sum(DEFEnergyAlphaRed24(Eind, :, Qind, nn));
            DEFEnergyRed24(Eind, Qind, nn)= sum(DEFEnergyThetaRed24(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp24(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed24(:, alphaind, Qind, nn));
            DNFAlphaRed24(alphaind, Qind, nn)= sum(DNFAlphaThetaRed24(alphaind, :, Qind, nn));
            DEFAlphaRedp24(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed24(:, alphaind, Qind, nn));
            DEFAlphaRed24(alphaind, Qind, nn)= sum(DEFAlphaThetaRed24(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp24(thetaind, Qind, nn)= sum(DNFEnergyThetaRed24(:, thetaind, Qind, nn));
            DNFThetaRed24(thetaind, Qind, nn)= sum(DNFAlphaThetaRed24(:, thetaind, Qind, nn));
            DEFThetaRedp24(thetaind, Qind, nn)= sum(DEFEnergyThetaRed24(:, thetaind, Qind, nn));
            DEFThetaRed24(thetaind, Qind, nn)= sum(DEFAlphaThetaRed24(:, thetaind, Qind, nn));
        end
    end
end

toc

disp('COMPUTE FINAL V-lambda REDUCED DEF ENERGY COMPLETE')

%% COMPUTE FINAL V-PC V-W REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic

if VPCflag == 1
    setnum= 1;

    if setnum == 1
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend1
                for Eind= 1:1:NEG
                    FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
                    DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
                    DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));

                    DEFEnergyRedU1(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU1(Eind, :, Qind, nn));
                    DEFEnergyRedT1(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT1(Eind, :, Qind, nn));
                    DEFEnergyRedD1(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD1(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
                    FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
                    FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
                    FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
                    DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
                    DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
                    DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
                    DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
                    DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
                    DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
                    DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
                    DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
                    DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend3
                for Eind= 1:1:NEG
                    FEEnergyRed3(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed3(Eind, :, Qind, nn));
                    DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
                    DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));

                    DEFEnergyRedU3(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU3(Eind, :, Qind, nn));
                    DEFEnergyRedT3(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT3(Eind, :, Qind, nn));
                    DEFEnergyRedD3(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD3(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp3(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp3(Vperp2ind, :, Qind, nn));
                    FVperp2Red3(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp3(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp3(Vperp1ind, :, Qind, nn));
                    FVperp1Red3(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp3(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp3(:, Vparind, Qind, nn));
                    FVparRed3(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp3(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
                    DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyThetaRed3(Eind, :, Qind, nn));
                    DEFEnergyRedp3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
                    DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyThetaRed3(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp3(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed3(:, alphaind, Qind, nn));
                    DNFAlphaRed3(alphaind, Qind, nn)= sum(DNFAlphaThetaRed3(alphaind, :, Qind, nn));
                    DEFAlphaRedp3(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed3(:, alphaind, Qind, nn));
                    DEFAlphaRed3(alphaind, Qind, nn)= sum(DEFAlphaThetaRed3(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp3(thetaind, Qind, nn)= sum(DNFEnergyThetaRed3(:, thetaind, Qind, nn));
                    DNFThetaRed3(thetaind, Qind, nn)= sum(DNFAlphaThetaRed3(:, thetaind, Qind, nn));
                    DEFThetaRedp3(thetaind, Qind, nn)= sum(DEFEnergyThetaRed3(:, thetaind, Qind, nn));
                    DEFThetaRed3(thetaind, Qind, nn)= sum(DEFAlphaThetaRed3(:, thetaind, Qind, nn));
                end
            end
        end
    end
    if setnum == 2
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend4
                for Eind= 1:1:NEG
                    FEEnergyRed4(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed4(Eind, :, Qind, nn));
                    DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
                    DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));

                    DEFEnergyRedU4(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU4(Eind, :, Qind, nn));
                    DEFEnergyRedT4(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT4(Eind, :, Qind, nn));
                    DEFEnergyRedD4(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD4(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp4(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp4(Vperp2ind, :, Qind, nn));
                    FVperp2Red4(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp4(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp4(Vperp1ind, :, Qind, nn));
                    FVperp1Red4(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp4(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp4(:, Vparind, Qind, nn));
                    FVparRed4(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp4(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
                    DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyThetaRed4(Eind, :, Qind, nn));
                    DEFEnergyRedp4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
                    DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyThetaRed4(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp4(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed4(:, alphaind, Qind, nn));
                    DNFAlphaRed4(alphaind, Qind, nn)= sum(DNFAlphaThetaRed4(alphaind, :, Qind, nn));
                    DEFAlphaRedp4(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed4(:, alphaind, Qind, nn));
                    DEFAlphaRed4(alphaind, Qind, nn)= sum(DEFAlphaThetaRed4(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp4(thetaind, Qind, nn)= sum(DNFEnergyThetaRed4(:, thetaind, Qind, nn));
                    DNFThetaRed4(thetaind, Qind, nn)= sum(DNFAlphaThetaRed4(:, thetaind, Qind, nn));
                    DEFThetaRedp4(thetaind, Qind, nn)= sum(DEFEnergyThetaRed4(:, thetaind, Qind, nn));
                    DEFThetaRed4(thetaind, Qind, nn)= sum(DEFAlphaThetaRed4(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend6
                for Eind= 1:1:NEG
                    FEEnergyRed6(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed6(Eind, :, Qind, nn));
                    DNFEnergyRed6(Eind, Qind, nn)= sum(DNFEnergyAlphaRed6(Eind, :, Qind, nn));
                    DEFEnergyRed6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, :, Qind, nn));

                    DEFEnergyRedU6(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU6(Eind, :, Qind, nn));
                    DEFEnergyRedT6(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT6(Eind, :, Qind, nn));
                    DEFEnergyRedD6(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD6(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp6(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp6(Vperp2ind, :, Qind, nn));
                    FVperp2Red6(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp6(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp6(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp6(Vperp1ind, :, Qind, nn));
                    FVperp1Red6(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp6(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp6(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp6(:, Vparind, Qind, nn));
                    FVparRed6(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp6(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp6(Eind, Qind, nn)= sum(DNFEnergyAlphaRed6(Eind, :, Qind, nn));
                    DNFEnergyRed6(Eind, Qind, nn)= sum(DNFEnergyThetaRed6(Eind, :, Qind, nn));
                    DEFEnergyRedp6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, :, Qind, nn));
                    DEFEnergyRed6(Eind, Qind, nn)= sum(DEFEnergyThetaRed6(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp6(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed6(:, alphaind, Qind, nn));
                    DNFAlphaRed6(alphaind, Qind, nn)= sum(DNFAlphaThetaRed6(alphaind, :, Qind, nn));
                    DEFAlphaRedp6(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed6(:, alphaind, Qind, nn));
                    DEFAlphaRed6(alphaind, Qind, nn)= sum(DEFAlphaThetaRed6(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp6(thetaind, Qind, nn)= sum(DNFEnergyThetaRed6(:, thetaind, Qind, nn));
                    DNFThetaRed6(thetaind, Qind, nn)= sum(DNFAlphaThetaRed6(:, thetaind, Qind, nn));
                    DEFThetaRedp6(thetaind, Qind, nn)= sum(DEFEnergyThetaRed6(:, thetaind, Qind, nn));
                    DEFThetaRed6(thetaind, Qind, nn)= sum(DEFAlphaThetaRed6(:, thetaind, Qind, nn));
                end
            end
        end
    end
    if setnum == 3
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend7
                for Eind= 1:1:NEG
                    FEEnergyRed7(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed7(Eind, :, Qind, nn));
                    DNFEnergyRed7(Eind, Qind, nn)= sum(DNFEnergyAlphaRed7(Eind, :, Qind, nn));
                    DEFEnergyRed7(Eind, Qind, nn)= sum(DEFEnergyAlphaRed7(Eind, :, Qind, nn));

                    DEFEnergyRedU7(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU7(Eind, :, Qind, nn));
                    DEFEnergyRedT7(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT7(Eind, :, Qind, nn));
                    DEFEnergyRedD7(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD7(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp7(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp7(Vperp2ind, :, Qind, nn));
                    FVperp2Red7(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp7(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp7(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp7(Vperp1ind, :, Qind, nn));
                    FVperp1Red7(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp7(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp7(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp7(:, Vparind, Qind, nn));
                    FVparRed7(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp7(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp7(Eind, Qind, nn)= sum(DNFEnergyAlphaRed7(Eind, :, Qind, nn));
                    DNFEnergyRed7(Eind, Qind, nn)= sum(DNFEnergyThetaRed7(Eind, :, Qind, nn));
                    DEFEnergyRedp7(Eind, Qind, nn)= sum(DEFEnergyAlphaRed7(Eind, :, Qind, nn));
                    DEFEnergyRed7(Eind, Qind, nn)= sum(DEFEnergyThetaRed7(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp7(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed7(:, alphaind, Qind, nn));
                    DNFAlphaRed7(alphaind, Qind, nn)= sum(DNFAlphaThetaRed7(alphaind, :, Qind, nn));
                    DEFAlphaRedp7(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed7(:, alphaind, Qind, nn));
                    DEFAlphaRed7(alphaind, Qind, nn)= sum(DEFAlphaThetaRed7(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp7(thetaind, Qind, nn)= sum(DNFEnergyThetaRed7(:, thetaind, Qind, nn));
                    DNFThetaRed7(thetaind, Qind, nn)= sum(DNFAlphaThetaRed7(:, thetaind, Qind, nn));
                    DEFThetaRedp7(thetaind, Qind, nn)= sum(DEFEnergyThetaRed7(:, thetaind, Qind, nn));
                    DEFThetaRed7(thetaind, Qind, nn)= sum(DEFAlphaThetaRed7(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend8
                for Eind= 1:1:NEG
                    FEEnergyRed8(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed8(Eind, :, Qind, nn));
                    DNFEnergyRed8(Eind, Qind, nn)= sum(DNFEnergyAlphaRed8(Eind, :, Qind, nn));
                    DEFEnergyRed8(Eind, Qind, nn)= sum(DEFEnergyAlphaRed8(Eind, :, Qind, nn));

                    DEFEnergyRedU8(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU8(Eind, :, Qind, nn));
                    DEFEnergyRedT8(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT8(Eind, :, Qind, nn));
                    DEFEnergyRedD8(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD8(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp8(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp8(Vperp2ind, :, Qind, nn));
                    FVperp2Red8(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp8(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp8(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp8(Vperp1ind, :, Qind, nn));
                    FVperp1Red8(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp8(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp8(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp8(:, Vparind, Qind, nn));
                    FVparRed8(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp8(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp8(Eind, Qind, nn)= sum(DNFEnergyAlphaRed8(Eind, :, Qind, nn));
                    DNFEnergyRed8(Eind, Qind, nn)= sum(DNFEnergyThetaRed8(Eind, :, Qind, nn));
                    DEFEnergyRedp8(Eind, Qind, nn)= sum(DEFEnergyAlphaRed8(Eind, :, Qind, nn));
                    DEFEnergyRed8(Eind, Qind, nn)= sum(DEFEnergyThetaRed8(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp8(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed8(:, alphaind, Qind, nn));
                    DNFAlphaRed8(alphaind, Qind, nn)= sum(DNFAlphaThetaRed8(alphaind, :, Qind, nn));
                    DEFAlphaRedp8(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed8(:, alphaind, Qind, nn));
                    DEFAlphaRed8(alphaind, Qind, nn)= sum(DEFAlphaThetaRed8(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp8(thetaind, Qind, nn)= sum(DNFEnergyThetaRed8(:, thetaind, Qind, nn));
                    DNFThetaRed8(thetaind, Qind, nn)= sum(DNFAlphaThetaRed8(:, thetaind, Qind, nn));
                    DEFThetaRedp8(thetaind, Qind, nn)= sum(DEFEnergyThetaRed8(:, thetaind, Qind, nn));
                    DEFThetaRed8(thetaind, Qind, nn)= sum(DEFAlphaThetaRed8(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend9
                for Eind= 1:1:NEG
                    FEEnergyRed9(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed9(Eind, :, Qind, nn));
                    DNFEnergyRed9(Eind, Qind, nn)= sum(DNFEnergyAlphaRed9(Eind, :, Qind, nn));
                    DEFEnergyRed9(Eind, Qind, nn)= sum(DEFEnergyAlphaRed9(Eind, :, Qind, nn));

                    DEFEnergyRedU9(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU9(Eind, :, Qind, nn));
                    DEFEnergyRedT9(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT9(Eind, :, Qind, nn));
                    DEFEnergyRedD9(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD9(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp9(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp9(Vperp2ind, :, Qind, nn));
                    FVperp2Red9(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp9(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp9(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp9(Vperp1ind, :, Qind, nn));
                    FVperp1Red9(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp9(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp9(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp9(:, Vparind, Qind, nn));
                    FVparRed9(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp9(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp9(Eind, Qind, nn)= sum(DNFEnergyAlphaRed9(Eind, :, Qind, nn));
                    DNFEnergyRed9(Eind, Qind, nn)= sum(DNFEnergyThetaRed9(Eind, :, Qind, nn));
                    DEFEnergyRedp9(Eind, Qind, nn)= sum(DEFEnergyAlphaRed9(Eind, :, Qind, nn));
                    DEFEnergyRed9(Eind, Qind, nn)= sum(DEFEnergyThetaRed9(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp9(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed9(:, alphaind, Qind, nn));
                    DNFAlphaRed9(alphaind, Qind, nn)= sum(DNFAlphaThetaRed9(alphaind, :, Qind, nn));
                    DEFAlphaRedp9(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed9(:, alphaind, Qind, nn));
                    DEFAlphaRed9(alphaind, Qind, nn)= sum(DEFAlphaThetaRed9(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp9(thetaind, Qind, nn)= sum(DNFEnergyThetaRed9(:, thetaind, Qind, nn));
                    DNFThetaRed9(thetaind, Qind, nn)= sum(DNFAlphaThetaRed9(:, thetaind, Qind, nn));
                    DEFThetaRedp9(thetaind, Qind, nn)= sum(DEFEnergyThetaRed9(:, thetaind, Qind, nn));
                    DEFThetaRed9(thetaind, Qind, nn)= sum(DEFAlphaThetaRed9(:, thetaind, Qind, nn));
                end
            end
        end
    end
    if setnum == 4
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend10
                for Eind= 1:1:NEG
                    FEEnergyRed10(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed10(Eind, :, Qind, nn));
                    DNFEnergyRed10(Eind, Qind, nn)= sum(DNFEnergyAlphaRed10(Eind, :, Qind, nn));
                    DEFEnergyRed10(Eind, Qind, nn)= sum(DEFEnergyAlphaRed10(Eind, :, Qind, nn));

                    DEFEnergyRedU10(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU10(Eind, :, Qind, nn));
                    DEFEnergyRedT10(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT10(Eind, :, Qind, nn));
                    DEFEnergyRedD10(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD10(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp10(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp10(Vperp2ind, :, Qind, nn));
                    FVperp2Red10(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp10(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp10(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp10(Vperp1ind, :, Qind, nn));
                    FVperp1Red10(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp10(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp10(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp10(:, Vparind, Qind, nn));
                    FVparRed10(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp10(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp10(Eind, Qind, nn)= sum(DNFEnergyAlphaRed10(Eind, :, Qind, nn));
                    DNFEnergyRed10(Eind, Qind, nn)= sum(DNFEnergyThetaRed10(Eind, :, Qind, nn));
                    DEFEnergyRedp10(Eind, Qind, nn)= sum(DEFEnergyAlphaRed10(Eind, :, Qind, nn));
                    DEFEnergyRed10(Eind, Qind, nn)= sum(DEFEnergyThetaRed10(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp10(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed10(:, alphaind, Qind, nn));
                    DNFAlphaRed10(alphaind, Qind, nn)= sum(DNFAlphaThetaRed10(alphaind, :, Qind, nn));
                    DEFAlphaRedp10(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed10(:, alphaind, Qind, nn));
                    DEFAlphaRed10(alphaind, Qind, nn)= sum(DEFAlphaThetaRed10(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp10(thetaind, Qind, nn)= sum(DNFEnergyThetaRed10(:, thetaind, Qind, nn));
                    DNFThetaRed10(thetaind, Qind, nn)= sum(DNFAlphaThetaRed10(:, thetaind, Qind, nn));
                    DEFThetaRedp10(thetaind, Qind, nn)= sum(DEFEnergyThetaRed10(:, thetaind, Qind, nn));
                    DEFThetaRed10(thetaind, Qind, nn)= sum(DEFAlphaThetaRed10(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend11
                for Eind= 1:1:NEG
                    FEEnergyRed11(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed11(Eind, :, Qind, nn));
                    DNFEnergyRed11(Eind, Qind, nn)= sum(DNFEnergyAlphaRed11(Eind, :, Qind, nn));
                    DEFEnergyRed11(Eind, Qind, nn)= sum(DEFEnergyAlphaRed11(Eind, :, Qind, nn));

                    DEFEnergyRedU11(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU11(Eind, :, Qind, nn));
                    DEFEnergyRedT11(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT11(Eind, :, Qind, nn));
                    DEFEnergyRedD11(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD11(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp11(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp11(Vperp2ind, :, Qind, nn));
                    FVperp2Red11(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp11(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp11(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp11(Vperp1ind, :, Qind, nn));
                    FVperp1Red11(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp11(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp11(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp11(:, Vparind, Qind, nn));
                    FVparRed11(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp11(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp11(Eind, Qind, nn)= sum(DNFEnergyAlphaRed11(Eind, :, Qind, nn));
                    DNFEnergyRed11(Eind, Qind, nn)= sum(DNFEnergyThetaRed11(Eind, :, Qind, nn));
                    DEFEnergyRedp11(Eind, Qind, nn)= sum(DEFEnergyAlphaRed11(Eind, :, Qind, nn));
                    DEFEnergyRed11(Eind, Qind, nn)= sum(DEFEnergyThetaRed11(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp11(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed11(:, alphaind, Qind, nn));
                    DNFAlphaRed11(alphaind, Qind, nn)= sum(DNFAlphaThetaRed11(alphaind, :, Qind, nn));
                    DEFAlphaRedp11(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed11(:, alphaind, Qind, nn));
                    DEFAlphaRed11(alphaind, Qind, nn)= sum(DEFAlphaThetaRed11(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp11(thetaind, Qind, nn)= sum(DNFEnergyThetaRed11(:, thetaind, Qind, nn));
                    DNFThetaRed11(thetaind, Qind, nn)= sum(DNFAlphaThetaRed11(:, thetaind, Qind, nn));
                    DEFThetaRedp11(thetaind, Qind, nn)= sum(DEFEnergyThetaRed11(:, thetaind, Qind, nn));
                    DEFThetaRed11(thetaind, Qind, nn)= sum(DEFAlphaThetaRed11(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend12
                for Eind= 1:1:NEG
                    FEEnergyRed12(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed12(Eind, :, Qind, nn));
                    DNFEnergyRed12(Eind, Qind, nn)= sum(DNFEnergyAlphaRed12(Eind, :, Qind, nn));
                    DEFEnergyRed12(Eind, Qind, nn)= sum(DEFEnergyAlphaRed12(Eind, :, Qind, nn));

                    DEFEnergyRedU12(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU12(Eind, :, Qind, nn));
                    DEFEnergyRedT12(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT12(Eind, :, Qind, nn));
                    DEFEnergyRedD12(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD12(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp12(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp12(Vperp2ind, :, Qind, nn));
                    FVperp2Red12(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp12(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp12(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp12(Vperp1ind, :, Qind, nn));
                    FVperp1Red12(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp12(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp12(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp12(:, Vparind, Qind, nn));
                    FVparRed12(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp12(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp12(Eind, Qind, nn)= sum(DNFEnergyAlphaRed12(Eind, :, Qind, nn));
                    DNFEnergyRed12(Eind, Qind, nn)= sum(DNFEnergyThetaRed12(Eind, :, Qind, nn));
                    DEFEnergyRedp12(Eind, Qind, nn)= sum(DEFEnergyAlphaRed12(Eind, :, Qind, nn));
                    DEFEnergyRed12(Eind, Qind, nn)= sum(DEFEnergyThetaRed12(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp12(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed12(:, alphaind, Qind, nn));
                    DNFAlphaRed12(alphaind, Qind, nn)= sum(DNFAlphaThetaRed12(alphaind, :, Qind, nn));
                    DEFAlphaRedp12(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed12(:, alphaind, Qind, nn));
                    DEFAlphaRed12(alphaind, Qind, nn)= sum(DEFAlphaThetaRed12(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp12(thetaind, Qind, nn)= sum(DNFEnergyThetaRed12(:, thetaind, Qind, nn));
                    DNFThetaRed12(thetaind, Qind, nn)= sum(DNFAlphaThetaRed12(:, thetaind, Qind, nn));
                    DEFThetaRedp12(thetaind, Qind, nn)= sum(DEFEnergyThetaRed12(:, thetaind, Qind, nn));
                    DEFThetaRed12(thetaind, Qind, nn)= sum(DEFAlphaThetaRed12(:, thetaind, Qind, nn));
                end
            end
        end
    end
    if setnum == 5
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend13
                for Eind= 1:1:NEG
                    FEEnergyRed13(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed13(Eind, :, Qind, nn));
                    DNFEnergyRed13(Eind, Qind, nn)= sum(DNFEnergyAlphaRed13(Eind, :, Qind, nn));
                    DEFEnergyRed13(Eind, Qind, nn)= sum(DEFEnergyAlphaRed13(Eind, :, Qind, nn));

                    DEFEnergyRedU13(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU13(Eind, :, Qind, nn));
                    DEFEnergyRedT13(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT13(Eind, :, Qind, nn));
                    DEFEnergyRedD13(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD13(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp13(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp13(Vperp2ind, :, Qind, nn));
                    FVperp2Red13(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp13(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp13(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp13(Vperp1ind, :, Qind, nn));
                    FVperp1Red13(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp13(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp13(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp13(:, Vparind, Qind, nn));
                    FVparRed13(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp13(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp13(Eind, Qind, nn)= sum(DNFEnergyAlphaRed13(Eind, :, Qind, nn));
                    DNFEnergyRed13(Eind, Qind, nn)= sum(DNFEnergyThetaRed13(Eind, :, Qind, nn));
                    DEFEnergyRedp13(Eind, Qind, nn)= sum(DEFEnergyAlphaRed13(Eind, :, Qind, nn));
                    DEFEnergyRed13(Eind, Qind, nn)= sum(DEFEnergyThetaRed13(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp13(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed13(:, alphaind, Qind, nn));
                    DNFAlphaRed13(alphaind, Qind, nn)= sum(DNFAlphaThetaRed13(alphaind, :, Qind, nn));
                    DEFAlphaRedp13(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed13(:, alphaind, Qind, nn));
                    DEFAlphaRed13(alphaind, Qind, nn)= sum(DEFAlphaThetaRed13(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp13(thetaind, Qind, nn)= sum(DNFEnergyThetaRed13(:, thetaind, Qind, nn));
                    DNFThetaRed13(thetaind, Qind, nn)= sum(DNFAlphaThetaRed13(:, thetaind, Qind, nn));
                    DEFThetaRedp13(thetaind, Qind, nn)= sum(DEFEnergyThetaRed13(:, thetaind, Qind, nn));
                    DEFThetaRed13(thetaind, Qind, nn)= sum(DEFAlphaThetaRed13(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend14
                for Eind= 1:1:NEG
                    FEEnergyRed14(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed14(Eind, :, Qind, nn));
                    DNFEnergyRed14(Eind, Qind, nn)= sum(DNFEnergyAlphaRed14(Eind, :, Qind, nn));
                    DEFEnergyRed14(Eind, Qind, nn)= sum(DEFEnergyAlphaRed14(Eind, :, Qind, nn));

                    DEFEnergyRedU14(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU14(Eind, :, Qind, nn));
                    DEFEnergyRedT14(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT14(Eind, :, Qind, nn));
                    DEFEnergyRedD14(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD14(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp14(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp14(Vperp2ind, :, Qind, nn));
                    FVperp2Red14(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp14(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp14(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp14(Vperp1ind, :, Qind, nn));
                    FVperp1Red14(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp14(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp14(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp14(:, Vparind, Qind, nn));
                    FVparRed14(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp14(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp14(Eind, Qind, nn)= sum(DNFEnergyAlphaRed14(Eind, :, Qind, nn));
                    DNFEnergyRed14(Eind, Qind, nn)= sum(DNFEnergyThetaRed14(Eind, :, Qind, nn));
                    DEFEnergyRedp14(Eind, Qind, nn)= sum(DEFEnergyAlphaRed14(Eind, :, Qind, nn));
                    DEFEnergyRed14(Eind, Qind, nn)= sum(DEFEnergyThetaRed14(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp14(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed14(:, alphaind, Qind, nn));
                    DNFAlphaRed14(alphaind, Qind, nn)= sum(DNFAlphaThetaRed14(alphaind, :, Qind, nn));
                    DEFAlphaRedp14(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed14(:, alphaind, Qind, nn));
                    DEFAlphaRed14(alphaind, Qind, nn)= sum(DEFAlphaThetaRed14(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp14(thetaind, Qind, nn)= sum(DNFEnergyThetaRed14(:, thetaind, Qind, nn));
                    DNFThetaRed14(thetaind, Qind, nn)= sum(DNFAlphaThetaRed14(:, thetaind, Qind, nn));
                    DEFThetaRedp14(thetaind, Qind, nn)= sum(DEFEnergyThetaRed14(:, thetaind, Qind, nn));
                    DEFThetaRed14(thetaind, Qind, nn)= sum(DEFAlphaThetaRed14(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend15
                for Eind= 1:1:NEG
                    FEEnergyRed15(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed15(Eind, :, Qind, nn));
                    DNFEnergyRed15(Eind, Qind, nn)= sum(DNFEnergyAlphaRed15(Eind, :, Qind, nn));
                    DEFEnergyRed15(Eind, Qind, nn)= sum(DEFEnergyAlphaRed15(Eind, :, Qind, nn));

                    DEFEnergyRedU15(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU15(Eind, :, Qind, nn));
                    DEFEnergyRedT15(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT15(Eind, :, Qind, nn));
                    DEFEnergyRedD15(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD15(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp15(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp15(Vperp2ind, :, Qind, nn));
                    FVperp2Red15(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp15(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp15(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp15(Vperp1ind, :, Qind, nn));
                    FVperp1Red15(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp15(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp15(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp15(:, Vparind, Qind, nn));
                    FVparRed15(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp15(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp15(Eind, Qind, nn)= sum(DNFEnergyAlphaRed15(Eind, :, Qind, nn));
                    DNFEnergyRed15(Eind, Qind, nn)= sum(DNFEnergyThetaRed15(Eind, :, Qind, nn));
                    DEFEnergyRedp15(Eind, Qind, nn)= sum(DEFEnergyAlphaRed15(Eind, :, Qind, nn));
                    DEFEnergyRed15(Eind, Qind, nn)= sum(DEFEnergyThetaRed15(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp15(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed15(:, alphaind, Qind, nn));
                    DNFAlphaRed15(alphaind, Qind, nn)= sum(DNFAlphaThetaRed15(alphaind, :, Qind, nn));
                    DEFAlphaRedp15(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed15(:, alphaind, Qind, nn));
                    DEFAlphaRed15(alphaind, Qind, nn)= sum(DEFAlphaThetaRed15(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp15(thetaind, Qind, nn)= sum(DNFEnergyThetaRed15(:, thetaind, Qind, nn));
                    DNFThetaRed15(thetaind, Qind, nn)= sum(DNFAlphaThetaRed15(:, thetaind, Qind, nn));
                    DEFThetaRedp15(thetaind, Qind, nn)= sum(DEFEnergyThetaRed15(:, thetaind, Qind, nn));
                    DEFThetaRed15(thetaind, Qind, nn)= sum(DEFAlphaThetaRed15(:, thetaind, Qind, nn));
                end
            end
        end
    end
    if setnum == 6
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend16
                for Eind= 1:1:NEG
                    FEEnergyRed16(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed16(Eind, :, Qind, nn));
                    DNFEnergyRed16(Eind, Qind, nn)= sum(DNFEnergyAlphaRed16(Eind, :, Qind, nn));
                    DEFEnergyRed16(Eind, Qind, nn)= sum(DEFEnergyAlphaRed16(Eind, :, Qind, nn));

                    DEFEnergyRedU16(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU16(Eind, :, Qind, nn));
                    DEFEnergyRedT16(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT16(Eind, :, Qind, nn));
                    DEFEnergyRedD16(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD16(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp16(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp16(Vperp2ind, :, Qind, nn));
                    FVperp2Red16(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp16(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp16(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp16(Vperp1ind, :, Qind, nn));
                    FVperp1Red16(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp16(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp16(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp16(:, Vparind, Qind, nn));
                    FVparRed16(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp16(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp16(Eind, Qind, nn)= sum(DNFEnergyAlphaRed16(Eind, :, Qind, nn));
                    DNFEnergyRed16(Eind, Qind, nn)= sum(DNFEnergyThetaRed16(Eind, :, Qind, nn));
                    DEFEnergyRedp16(Eind, Qind, nn)= sum(DEFEnergyAlphaRed16(Eind, :, Qind, nn));
                    DEFEnergyRed16(Eind, Qind, nn)= sum(DEFEnergyThetaRed16(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp16(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed16(:, alphaind, Qind, nn));
                    DNFAlphaRed16(alphaind, Qind, nn)= sum(DNFAlphaThetaRed16(alphaind, :, Qind, nn));
                    DEFAlphaRedp16(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed16(:, alphaind, Qind, nn));
                    DEFAlphaRed16(alphaind, Qind, nn)= sum(DEFAlphaThetaRed16(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp16(thetaind, Qind, nn)= sum(DNFEnergyThetaRed16(:, thetaind, Qind, nn));
                    DNFThetaRed16(thetaind, Qind, nn)= sum(DNFAlphaThetaRed16(:, thetaind, Qind, nn));
                    DEFThetaRedp16(thetaind, Qind, nn)= sum(DEFEnergyThetaRed16(:, thetaind, Qind, nn));
                    DEFThetaRed16(thetaind, Qind, nn)= sum(DEFAlphaThetaRed16(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend17
                for Eind= 1:1:NEG
                    FEEnergyRed17(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed17(Eind, :, Qind, nn));
                    DNFEnergyRed17(Eind, Qind, nn)= sum(DNFEnergyAlphaRed17(Eind, :, Qind, nn));
                    DEFEnergyRed17(Eind, Qind, nn)= sum(DEFEnergyAlphaRed17(Eind, :, Qind, nn));

                    DEFEnergyRedU17(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU17(Eind, :, Qind, nn));
                    DEFEnergyRedT17(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT17(Eind, :, Qind, nn));
                    DEFEnergyRedD17(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD17(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp17(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp17(Vperp2ind, :, Qind, nn));
                    FVperp2Red17(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp17(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp17(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp17(Vperp1ind, :, Qind, nn));
                    FVperp1Red17(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp17(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp17(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp17(:, Vparind, Qind, nn));
                    FVparRed17(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp17(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp17(Eind, Qind, nn)= sum(DNFEnergyAlphaRed17(Eind, :, Qind, nn));
                    DNFEnergyRed17(Eind, Qind, nn)= sum(DNFEnergyThetaRed17(Eind, :, Qind, nn));
                    DEFEnergyRedp17(Eind, Qind, nn)= sum(DEFEnergyAlphaRed17(Eind, :, Qind, nn));
                    DEFEnergyRed17(Eind, Qind, nn)= sum(DEFEnergyThetaRed17(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp17(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed17(:, alphaind, Qind, nn));
                    DNFAlphaRed17(alphaind, Qind, nn)= sum(DNFAlphaThetaRed17(alphaind, :, Qind, nn));
                    DEFAlphaRedp17(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed17(:, alphaind, Qind, nn));
                    DEFAlphaRed17(alphaind, Qind, nn)= sum(DEFAlphaThetaRed17(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp17(thetaind, Qind, nn)= sum(DNFEnergyThetaRed17(:, thetaind, Qind, nn));
                    DNFThetaRed17(thetaind, Qind, nn)= sum(DNFAlphaThetaRed17(:, thetaind, Qind, nn));
                    DEFThetaRedp17(thetaind, Qind, nn)= sum(DEFEnergyThetaRed17(:, thetaind, Qind, nn));
                    DEFThetaRed17(thetaind, Qind, nn)= sum(DEFAlphaThetaRed17(:, thetaind, Qind, nn));
                end
            end
        end
        for Qind= NqLB:1:NqUB
            for nn= 1:1:Nend18
                for Eind= 1:1:NEG
                    FEEnergyRed18(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed18(Eind, :, Qind, nn));
                    DNFEnergyRed18(Eind, Qind, nn)= sum(DNFEnergyAlphaRed18(Eind, :, Qind, nn));
                    DEFEnergyRed18(Eind, Qind, nn)= sum(DEFEnergyAlphaRed18(Eind, :, Qind, nn));

                    DEFEnergyRedU18(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU18(Eind, :, Qind, nn));
                    DEFEnergyRedT18(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT18(Eind, :, Qind, nn));
                    DEFEnergyRedD18(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD18(Eind, :, Qind, nn));
                end
                for Vperp2ind= 1:1:NVperp2GCq
                    FVperp2Redp18(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp18(Vperp2ind, :, Qind, nn));
                    FVperp2Red18(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp18(:, Vperp2ind, Qind, nn));
                end
                for Vperp1ind= 1:1:NVperp1GCq
                    FVperp1Redp18(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp18(Vperp1ind, :, Qind, nn));
                    FVperp1Red18(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp18(Vperp1ind, :, Qind, nn));
                end
                for Vparind= 1:1:NVparGCq
                    FVparRedp18(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp18(:, Vparind, Qind, nn));
                    FVparRed18(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp18(:, Vparind, Qind, nn));
                end
                for Eind= 1:1:NEG
                    DNFEnergyRedp18(Eind, Qind, nn)= sum(DNFEnergyAlphaRed18(Eind, :, Qind, nn));
                    DNFEnergyRed18(Eind, Qind, nn)= sum(DNFEnergyThetaRed18(Eind, :, Qind, nn));
                    DEFEnergyRedp18(Eind, Qind, nn)= sum(DEFEnergyAlphaRed18(Eind, :, Qind, nn));
                    DEFEnergyRed18(Eind, Qind, nn)= sum(DEFEnergyThetaRed18(Eind, :, Qind, nn));
                end
                for alphaind= 1:1:NalphaG
                    DNFAlphaRedp18(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed18(:, alphaind, Qind, nn));
                    DNFAlphaRed18(alphaind, Qind, nn)= sum(DNFAlphaThetaRed18(alphaind, :, Qind, nn));
                    DEFAlphaRedp18(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed18(:, alphaind, Qind, nn));
                    DEFAlphaRed18(alphaind, Qind, nn)= sum(DEFAlphaThetaRed18(alphaind, :, Qind, nn));
                end
                for thetaind= 1:1:NthetaG
                    DNFThetaRedp18(thetaind, Qind, nn)= sum(DNFEnergyThetaRed18(:, thetaind, Qind, nn));
                    DNFThetaRed18(thetaind, Qind, nn)= sum(DNFAlphaThetaRed18(:, thetaind, Qind, nn));
                    DEFThetaRedp18(thetaind, Qind, nn)= sum(DEFEnergyThetaRed18(:, thetaind, Qind, nn));
                    DEFThetaRed18(thetaind, Qind, nn)= sum(DEFAlphaThetaRed18(:, thetaind, Qind, nn));
                end
            end
        end
    end
end

if VWflag == 1
    for Qind= NqLB:1:NqUB
        for nn= 1:1:Nend1
            for Eind= 1:1:NEG
                FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
                DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
                DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));

                DEFEnergyRedU1(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU1(Eind, :, Qind, nn));
                DEFEnergyRedT1(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT1(Eind, :, Qind, nn));
                DEFEnergyRedD1(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD1(Eind, :, Qind, nn));
            end
            for Vperp2ind= 1:1:NVperp2GCq
                FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
                FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
            end
            for Vperp1ind= 1:1:NVperp1GCq
                FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
                FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
            end
            for Vparind= 1:1:NVparGCq
                FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
                FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
            end
            for Eind= 1:1:NEG
                DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
                DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
                DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
                DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
            end
            for alphaind= 1:1:NalphaG
                DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
                DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
                DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
                DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
            end
            for thetaind= 1:1:NthetaG
                DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
                DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
                DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
                DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
            end
        end
        for nn= 1:1:Nend2
            for Eind= 1:1:NEG
                FEEnergyRed2(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed2(Eind, :, Qind, nn));
                DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
                DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));

                DEFEnergyRedU2(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU2(Eind, :, Qind, nn));
                DEFEnergyRedT2(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT2(Eind, :, Qind, nn));
                DEFEnergyRedD2(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD2(Eind, :, Qind, nn));
            end
            for Vperp2ind= 1:1:NVperp2GCq
                FVperp2Redp2(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp2(Vperp2ind, :, Qind, nn));
                FVperp2Red2(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(:, Vperp2ind, Qind, nn));
            end
            for Vperp1ind= 1:1:NVperp1GCq
                FVperp1Redp2(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp2(Vperp1ind, :, Qind, nn));
                FVperp1Red2(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(Vperp1ind, :, Qind, nn));
            end
            for Vparind= 1:1:NVparGCq
                FVparRedp2(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp2(:, Vparind, Qind, nn));
                FVparRed2(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp2(:, Vparind, Qind, nn));
            end
            for Eind= 1:1:NEG
                DNFEnergyRedp2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
                DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyThetaRed2(Eind, :, Qind, nn));
                DEFEnergyRedp2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));
                DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyThetaRed2(Eind, :, Qind, nn));
            end
            for alphaind= 1:1:NalphaG
                DNFAlphaRedp2(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed2(:, alphaind, Qind, nn));
                DNFAlphaRed2(alphaind, Qind, nn)= sum(DNFAlphaThetaRed2(alphaind, :, Qind, nn));
                DEFAlphaRedp2(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed2(:, alphaind, Qind, nn));
                DEFAlphaRed2(alphaind, Qind, nn)= sum(DEFAlphaThetaRed2(alphaind, :, Qind, nn));
            end
            for thetaind= 1:1:NthetaG
                DNFThetaRedp2(thetaind, Qind, nn)= sum(DNFEnergyThetaRed2(:, thetaind, Qind, nn));
                DNFThetaRed2(thetaind, Qind, nn)= sum(DNFAlphaThetaRed2(:, thetaind, Qind, nn));
                DEFThetaRedp2(thetaind, Qind, nn)= sum(DEFEnergyThetaRed2(:, thetaind, Qind, nn));
                DEFThetaRed2(thetaind, Qind, nn)= sum(DEFAlphaThetaRed2(:, thetaind, Qind, nn));
            end
        end
        for nn= 1:1:Nend3
            for Eind= 1:1:NEG
                FEEnergyRed3(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed3(Eind, :, Qind, nn));
                DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
                DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));

                DEFEnergyRedU3(Eind, Qind, nn)= sum(DEFEnergyAlphaRedU3(Eind, :, Qind, nn));
                DEFEnergyRedT3(Eind, Qind, nn)= sum(DEFEnergyAlphaRedT3(Eind, :, Qind, nn));
                DEFEnergyRedD3(Eind, Qind, nn)= sum(DEFEnergyAlphaRedD3(Eind, :, Qind, nn));
            end
            for Vperp2ind= 1:1:NVperp2GCq
                FVperp2Redp3(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp3(Vperp2ind, :, Qind, nn));
                FVperp2Red3(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(:, Vperp2ind, Qind, nn));
            end
            for Vperp1ind= 1:1:NVperp1GCq
                FVperp1Redp3(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp3(Vperp1ind, :, Qind, nn));
                FVperp1Red3(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(Vperp1ind, :, Qind, nn));
            end
            for Vparind= 1:1:NVparGCq
                FVparRedp3(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp3(:, Vparind, Qind, nn));
                FVparRed3(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp3(:, Vparind, Qind, nn));
            end
            for Eind= 1:1:NEG
                DNFEnergyRedp3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
                DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyThetaRed3(Eind, :, Qind, nn));
                DEFEnergyRedp3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
                DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyThetaRed3(Eind, :, Qind, nn));
            end
            for alphaind= 1:1:NalphaG
                DNFAlphaRedp3(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed3(:, alphaind, Qind, nn));
                DNFAlphaRed3(alphaind, Qind, nn)= sum(DNFAlphaThetaRed3(alphaind, :, Qind, nn));
                DEFAlphaRedp3(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed3(:, alphaind, Qind, nn));
                DEFAlphaRed3(alphaind, Qind, nn)= sum(DEFAlphaThetaRed3(alphaind, :, Qind, nn));
            end
            for thetaind= 1:1:NthetaG
                DNFThetaRedp3(thetaind, Qind, nn)= sum(DNFEnergyThetaRed3(:, thetaind, Qind, nn));
                DNFThetaRed3(thetaind, Qind, nn)= sum(DNFAlphaThetaRed3(:, thetaind, Qind, nn));
                DEFThetaRedp3(thetaind, Qind, nn)= sum(DEFEnergyThetaRed3(:, thetaind, Qind, nn));
                DEFThetaRed3(thetaind, Qind, nn)= sum(DEFAlphaThetaRed3(:, thetaind, Qind, nn));
            end
        end
    end
end

toc

disp('COMPUTE FINAL V-PC V-W REDUCED DEF ENERGY COMPLETE')

%% COMPUTE FINAL NCU REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend5
        for Eind= 1:1:NEG
            FEEnergyRed5(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed5(Eind, :, Qind, nn));
            DNFEnergyRed5(Eind, Qind, nn)= sum(DNFEnergyAlphaRed5(Eind, :, Qind, nn));
            DEFEnergyRed5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp5(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp5(Vperp2ind, :, Qind, nn));
            FVperp2Red5(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp5(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp5(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp5(Vperp1ind, :, Qind, nn));
            FVperp1Red5(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp5(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp5(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp5(:, Vparind, Qind, nn));
            FVparRed5(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp5(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp5(Eind, Qind, nn)= sum(DNFEnergyAlphaRed5(Eind, :, Qind, nn));
            DNFEnergyRed5(Eind, Qind, nn)= sum(DNFEnergyThetaRed5(Eind, :, Qind, nn));
            DEFEnergyRedp5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, :, Qind, nn));
            DEFEnergyRed5(Eind, Qind, nn)= sum(DEFEnergyThetaRed5(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp5(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed5(:, alphaind, Qind, nn));
            DNFAlphaRed5(alphaind, Qind, nn)= sum(DNFAlphaThetaRed5(alphaind, :, Qind, nn));
            DEFAlphaRedp5(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed5(:, alphaind, Qind, nn));
            DEFAlphaRed5(alphaind, Qind, nn)= sum(DEFAlphaThetaRed5(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp5(thetaind, Qind, nn)= sum(DNFEnergyThetaRed5(:, thetaind, Qind, nn));
            DNFThetaRed5(thetaind, Qind, nn)= sum(DNFAlphaThetaRed5(:, thetaind, Qind, nn));
            DEFThetaRedp5(thetaind, Qind, nn)= sum(DEFEnergyThetaRed5(:, thetaind, Qind, nn));
            DEFThetaRed5(thetaind, Qind, nn)= sum(DEFAlphaThetaRed5(:, thetaind, Qind, nn));
        end
    end
end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend6
        for Eind= 1:1:NEG
            FEEnergyRed6(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed6(Eind, :, Qind, nn));
            DNFEnergyRed6(Eind, Qind, nn)= sum(DNFEnergyAlphaRed6(Eind, :, Qind, nn));
            DEFEnergyRed6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp6(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp6(Vperp2ind, :, Qind, nn));
            FVperp2Red6(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp6(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp6(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp6(Vperp1ind, :, Qind, nn));
            FVperp1Red6(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp6(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp6(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp6(:, Vparind, Qind, nn));
            FVparRed6(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp6(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp6(Eind, Qind, nn)= sum(DNFEnergyAlphaRed6(Eind, :, Qind, nn));
            DNFEnergyRed6(Eind, Qind, nn)= sum(DNFEnergyThetaRed6(Eind, :, Qind, nn));
            DEFEnergyRedp6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, :, Qind, nn));
            DEFEnergyRed6(Eind, Qind, nn)= sum(DEFEnergyThetaRed6(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp6(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed6(:, alphaind, Qind, nn));
            DNFAlphaRed6(alphaind, Qind, nn)= sum(DNFAlphaThetaRed6(alphaind, :, Qind, nn));
            DEFAlphaRedp6(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed6(:, alphaind, Qind, nn));
            DEFAlphaRed6(alphaind, Qind, nn)= sum(DEFAlphaThetaRed6(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp6(thetaind, Qind, nn)= sum(DNFEnergyThetaRed6(:, thetaind, Qind, nn));
            DNFThetaRed6(thetaind, Qind, nn)= sum(DNFAlphaThetaRed6(:, thetaind, Qind, nn));
            DEFThetaRedp6(thetaind, Qind, nn)= sum(DEFEnergyThetaRed6(:, thetaind, Qind, nn));
            DEFThetaRed6(thetaind, Qind, nn)= sum(DEFAlphaThetaRed6(:, thetaind, Qind, nn));
        end
    end
end

toc

disp('COMPUTE FINAL NCU REDUCED DEF ENERGY COMPLETE')

%% COMPUTE FINAL Z REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic

for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend1
        for Eind= 1:1:NEG
            FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
            FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
            FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
            FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
            DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
            DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
            DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
        end
    end
end

toc

disp('COMPUTE FINAL Z REDUCED DEF ENERGY COMPLETE')

%% COMPUTE FINAL W REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic

% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend1
%         for Eind= 1:1:NEG
%             FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
%             DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
%             DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
%         end
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
%             FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
%             FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
%             FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
%             DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
%             DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
%             DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
%             DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
%             DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
%             DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
%             DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
%             DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
%             DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
%         end
%     end
% end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend4
%         for Eind= 1:1:NEG
%             FEEnergyRed4(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed4(Eind, :, Qind, nn));
%             DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
%             DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
%         end
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp4(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp4(Vperp2ind, :, Qind, nn));
%             FVperp2Red4(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp4(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp4(Vperp1ind, :, Qind, nn));
%             FVperp1Red4(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp4(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp4(:, Vparind, Qind, nn));
%             FVparRed4(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp4(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
%             DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyThetaRed4(Eind, :, Qind, nn));
%             DEFEnergyRedp4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
%             DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyThetaRed4(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp4(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed4(:, alphaind, Qind, nn));
%             DNFAlphaRed4(alphaind, Qind, nn)= sum(DNFAlphaThetaRed4(alphaind, :, Qind, nn));
%             DEFAlphaRedp4(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed4(:, alphaind, Qind, nn));
%             DEFAlphaRed4(alphaind, Qind, nn)= sum(DEFAlphaThetaRed4(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp4(thetaind, Qind, nn)= sum(DNFEnergyThetaRed4(:, thetaind, Qind, nn));
%             DNFThetaRed4(thetaind, Qind, nn)= sum(DNFAlphaThetaRed4(:, thetaind, Qind, nn));
%             DEFThetaRedp4(thetaind, Qind, nn)= sum(DEFEnergyThetaRed4(:, thetaind, Qind, nn));
%             DEFThetaRed4(thetaind, Qind, nn)= sum(DEFAlphaThetaRed4(:, thetaind, Qind, nn));
%         end
%     end
% end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend5
        for Eind= 1:1:NEG
            FEEnergyRed5(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed5(Eind, :, Qind, nn));
            DNFEnergyRed5(Eind, Qind, nn)= sum(DNFEnergyAlphaRed5(Eind, :, Qind, nn));
            DEFEnergyRed5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp5(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp5(Vperp2ind, :, Qind, nn));
            FVperp2Red5(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp5(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp5(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp5(Vperp1ind, :, Qind, nn));
            FVperp1Red5(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp5(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp5(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp5(:, Vparind, Qind, nn));
            FVparRed5(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp5(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp5(Eind, Qind, nn)= sum(DNFEnergyAlphaRed5(Eind, :, Qind, nn));
            DNFEnergyRed5(Eind, Qind, nn)= sum(DNFEnergyThetaRed5(Eind, :, Qind, nn));
            DEFEnergyRedp5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, :, Qind, nn));
            DEFEnergyRed5(Eind, Qind, nn)= sum(DEFEnergyThetaRed5(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp5(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed5(:, alphaind, Qind, nn));
            DNFAlphaRed5(alphaind, Qind, nn)= sum(DNFAlphaThetaRed5(alphaind, :, Qind, nn));
            DEFAlphaRedp5(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed5(:, alphaind, Qind, nn));
            DEFAlphaRed5(alphaind, Qind, nn)= sum(DEFAlphaThetaRed5(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp5(thetaind, Qind, nn)= sum(DNFEnergyThetaRed5(:, thetaind, Qind, nn));
            DNFThetaRed5(thetaind, Qind, nn)= sum(DNFAlphaThetaRed5(:, thetaind, Qind, nn));
            DEFThetaRedp5(thetaind, Qind, nn)= sum(DEFEnergyThetaRed5(:, thetaind, Qind, nn));
            DEFThetaRed5(thetaind, Qind, nn)= sum(DEFAlphaThetaRed5(:, thetaind, Qind, nn));
        end
    end
end

toc

disp('COMPUTE FINAL W REDUCED DEF ENERGY COMPLETE')

%% COMPUTE FINAL B REDUCED ENERGY DISTRIBUTION FUNCTIONS

close all
clc

tic

for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend1
        for Eind= 1:1:NEG
            FEEnergyRed1(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp1(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp1(Vperp2ind, :, Qind, nn));
            FVperp2Red1(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp1(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp1(Vperp1ind, :, Qind, nn));
            FVperp1Red1(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp1(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp1(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp1(:, Vparind, Qind, nn));
            FVparRed1(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp1(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp1(Eind, Qind, nn)= sum(DNFEnergyAlphaRed1(Eind, :, Qind, nn));
            DNFEnergyRed1(Eind, Qind, nn)= sum(DNFEnergyThetaRed1(Eind, :, Qind, nn));
            DEFEnergyRedp1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, :, Qind, nn));
            DEFEnergyRed1(Eind, Qind, nn)= sum(DEFEnergyThetaRed1(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp1(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DNFAlphaRed1(alphaind, Qind, nn)= sum(DNFAlphaThetaRed1(alphaind, :, Qind, nn));
            DEFAlphaRedp1(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed1(:, alphaind, Qind, nn));
            DEFAlphaRed1(alphaind, Qind, nn)= sum(DEFAlphaThetaRed1(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp1(thetaind, Qind, nn)= sum(DNFEnergyThetaRed1(:, thetaind, Qind, nn));
            DNFThetaRed1(thetaind, Qind, nn)= sum(DNFAlphaThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRedp1(thetaind, Qind, nn)= sum(DEFEnergyThetaRed1(:, thetaind, Qind, nn));
            DEFThetaRed1(thetaind, Qind, nn)= sum(DEFAlphaThetaRed1(:, thetaind, Qind, nn));
        end
    end
end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend2
%         for Eind= 1:1:NEG
%             FEEnergyRed2(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed2(Eind, :, Qind, nn));
%             DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
%             DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));
%         end
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp2(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp2(Vperp2ind, :, Qind, nn));
%             FVperp2Red2(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp2(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp2(Vperp1ind, :, Qind, nn));
%             FVperp1Red2(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp2(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp2(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp2(:, Vparind, Qind, nn));
%             FVparRed2(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp2(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp2(Eind, Qind, nn)= sum(DNFEnergyAlphaRed2(Eind, :, Qind, nn));
%             DNFEnergyRed2(Eind, Qind, nn)= sum(DNFEnergyThetaRed2(Eind, :, Qind, nn));
%             DEFEnergyRedp2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, :, Qind, nn));
%             DEFEnergyRed2(Eind, Qind, nn)= sum(DEFEnergyThetaRed2(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp2(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed2(:, alphaind, Qind, nn));
%             DNFAlphaRed2(alphaind, Qind, nn)= sum(DNFAlphaThetaRed2(alphaind, :, Qind, nn));
%             DEFAlphaRedp2(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed2(:, alphaind, Qind, nn));
%             DEFAlphaRed2(alphaind, Qind, nn)= sum(DEFAlphaThetaRed2(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp2(thetaind, Qind, nn)= sum(DNFEnergyThetaRed2(:, thetaind, Qind, nn));
%             DNFThetaRed2(thetaind, Qind, nn)= sum(DNFAlphaThetaRed2(:, thetaind, Qind, nn));
%             DEFThetaRedp2(thetaind, Qind, nn)= sum(DEFEnergyThetaRed2(:, thetaind, Qind, nn));
%             DEFThetaRed2(thetaind, Qind, nn)= sum(DEFAlphaThetaRed2(:, thetaind, Qind, nn));
%         end
%     end
% end
for Qind= NqLB:1:NqUB
    for nn= 1:1:Nend3
        for Eind= 1:1:NEG
            FEEnergyRed3(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed3(Eind, :, Qind, nn));
            DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
            DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
        end
        for Vperp2ind= 1:1:NVperp2GCq
            FVperp2Redp3(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp3(Vperp2ind, :, Qind, nn));
            FVperp2Red3(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(:, Vperp2ind, Qind, nn));
        end
        for Vperp1ind= 1:1:NVperp1GCq
            FVperp1Redp3(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp3(Vperp1ind, :, Qind, nn));
            FVperp1Red3(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp3(Vperp1ind, :, Qind, nn));
        end
        for Vparind= 1:1:NVparGCq
            FVparRedp3(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp3(:, Vparind, Qind, nn));
            FVparRed3(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp3(:, Vparind, Qind, nn));
        end
        for Eind= 1:1:NEG
            DNFEnergyRedp3(Eind, Qind, nn)= sum(DNFEnergyAlphaRed3(Eind, :, Qind, nn));
            DNFEnergyRed3(Eind, Qind, nn)= sum(DNFEnergyThetaRed3(Eind, :, Qind, nn));
            DEFEnergyRedp3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, :, Qind, nn));
            DEFEnergyRed3(Eind, Qind, nn)= sum(DEFEnergyThetaRed3(Eind, :, Qind, nn));
        end
        for alphaind= 1:1:NalphaG
            DNFAlphaRedp3(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed3(:, alphaind, Qind, nn));
            DNFAlphaRed3(alphaind, Qind, nn)= sum(DNFAlphaThetaRed3(alphaind, :, Qind, nn));
            DEFAlphaRedp3(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed3(:, alphaind, Qind, nn));
            DEFAlphaRed3(alphaind, Qind, nn)= sum(DEFAlphaThetaRed3(alphaind, :, Qind, nn));
        end
        for thetaind= 1:1:NthetaG
            DNFThetaRedp3(thetaind, Qind, nn)= sum(DNFEnergyThetaRed3(:, thetaind, Qind, nn));
            DNFThetaRed3(thetaind, Qind, nn)= sum(DNFAlphaThetaRed3(:, thetaind, Qind, nn));
            DEFThetaRedp3(thetaind, Qind, nn)= sum(DEFEnergyThetaRed3(:, thetaind, Qind, nn));
            DEFThetaRed3(thetaind, Qind, nn)= sum(DEFAlphaThetaRed3(:, thetaind, Qind, nn));
        end
    end
end
% for Qind= NqLB:1:NqUB
%     for nn= 1:1:Nend4
%         for Eind= 1:1:NEG
%             FEEnergyRed4(Eind, Qind, nn)= sum(FEnergyEnergyAlphaRed4(Eind, :, Qind, nn));
%             DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
%             DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
%         end
%         for Vperp2ind= 1:1:NVperp2GCq
%             FVperp2Redp4(Vperp2ind, Qind, nn)= sum(FLogVperp2VparRedInterp4(Vperp2ind, :, Qind, nn));
%             FVperp2Red4(Vperp2ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(:, Vperp2ind, Qind, nn));
%         end
%         for Vperp1ind= 1:1:NVperp1GCq
%             FVperp1Redp4(Vperp1ind, Qind, nn)= sum(FLogVperp1VparRedInterp4(Vperp1ind, :, Qind, nn));
%             FVperp1Red4(Vperp1ind, Qind, nn)= sum(FLogVperp1Vperp2RedInterp4(Vperp1ind, :, Qind, nn));
%         end
%         for Vparind= 1:1:NVparGCq
%             FVparRedp4(Vparind, Qind, nn)= sum(FLogVperp1VparRedInterp4(:, Vparind, Qind, nn));
%             FVparRed4(Vparind, Qind, nn)= sum(FLogVperp2VparRedInterp4(:, Vparind, Qind, nn));
%         end
%         for Eind= 1:1:NEG
%             DNFEnergyRedp4(Eind, Qind, nn)= sum(DNFEnergyAlphaRed4(Eind, :, Qind, nn));
%             DNFEnergyRed4(Eind, Qind, nn)= sum(DNFEnergyThetaRed4(Eind, :, Qind, nn));
%             DEFEnergyRedp4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, :, Qind, nn));
%             DEFEnergyRed4(Eind, Qind, nn)= sum(DEFEnergyThetaRed4(Eind, :, Qind, nn));
%         end
%         for alphaind= 1:1:NalphaG
%             DNFAlphaRedp4(alphaind, Qind, nn)= sum(DNFEnergyAlphaRed4(:, alphaind, Qind, nn));
%             DNFAlphaRed4(alphaind, Qind, nn)= sum(DNFAlphaThetaRed4(alphaind, :, Qind, nn));
%             DEFAlphaRedp4(alphaind, Qind, nn)= sum(DEFEnergyAlphaRed4(:, alphaind, Qind, nn));
%             DEFAlphaRed4(alphaind, Qind, nn)= sum(DEFAlphaThetaRed4(alphaind, :, Qind, nn));
%         end
%         for thetaind= 1:1:NthetaG
%             DNFThetaRedp4(thetaind, Qind, nn)= sum(DNFEnergyThetaRed4(:, thetaind, Qind, nn));
%             DNFThetaRed4(thetaind, Qind, nn)= sum(DNFAlphaThetaRed4(:, thetaind, Qind, nn));
%             DEFThetaRedp4(thetaind, Qind, nn)= sum(DEFEnergyThetaRed4(:, thetaind, Qind, nn));
%             DEFThetaRed4(thetaind, Qind, nn)= sum(DEFAlphaThetaRed4(:, thetaind, Qind, nn));
%         end
%     end
% end

toc

disp('COMPUTE FINAL B REDUCED DEF ENERGY COMPLETE')

%% PLOT NC FINAL REDUCED F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 15;

ylim1= 0;
ylim2= 1.5;
textx= -7;
texty= 1.8;

if max(FVperp1Red1(:, Qind, 1)) > max(FVperp1Red2(:, Qind, 1)) & ...
        max(FVperp1Red1(:, Qind, 1)) > max(FVperp1Red3(:, Qind, 1)) & ...
        max(FVperp1Red1(:, Qind, 1)) > max(FVperp1Red4(:, Qind, 1))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, 1));
end
if max(FVperp1Red2(:, Qind, 1)) > max(FVperp1Red1(:, Qind, 1)) & ...
        max(FVperp1Red2(:, Qind, 1)) > max(FVperp1Red3(:, Qind, 1)) & ...
        max(FVperp1Red2(:, Qind, 1)) > max(FVperp1Red4(:, Qind, 1))
    NormfacS1(:)= max(FVperp1Red2(:, Qind, 1));
end
if max(FVperp1Red3(:, Qind, 1)) > max(FVperp1Red1(:, Qind, 1)) & ...
        max(FVperp1Red3(:, Qind, 1)) > max(FVperp1Red2(:, Qind, 1)) & ...
        max(FVperp1Red3(:, Qind, 1)) > max(FVperp1Red4(:, Qind, 1))
    NormfacS1(:)= max(FVperp1Red3(:, Qind, 1));
end
if max(FVperp1Red4(:, Qind, 1)) > max(FVperp1Red1(:, Qind, 1)) & ...
        max(FVperp1Red4(:, Qind, 1)) > max(FVperp1Red2(:, Qind, 1)) & ...
        max(FVperp1Red4(:, Qind, 1)) > max(FVperp1Red3(:, Qind, 1))
    NormfacS1(:)= max(FVperp1Red4(:, Qind, 1));
end

subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, 1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red2(:, Qind, 1)/NormfacS1(:, 1, 1)), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red3(:, Qind, 1)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, 1)/NormfacS1(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. A1');
L{2}= horzcat('Sim. A2');
L{3}= horzcat('Sim. A3');
L{4}= horzcat('Sim. A4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest')
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red1(:, Qind, 1)) > max(FVperp2Red2(:, Qind, 1)) & ...
        max(FVperp2Red1(:, Qind, 1)) > max(FVperp2Red3(:, Qind, 1)) & ...
        max(FVperp2Red1(:, Qind, 1)) > max(FVperp2Red4(:, Qind, 1))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, 1));
end
if max(FVperp2Red2(:, Qind, 1)) > max(FVperp2Red1(:, Qind, 1)) & ...
        max(FVperp2Red2(:, Qind, 1)) > max(FVperp2Red3(:, Qind, 1)) & ...
        max(FVperp2Red2(:, Qind, 1)) > max(FVperp2Red4(:, Qind, 1))
    NormfacS2(:)= max(FVperp2Red2(:, Qind, 1));
end
if max(FVperp2Red3(:, Qind, 1)) > max(FVperp2Red1(:, Qind, 1)) & ...
        max(FVperp2Red3(:, Qind, 1)) > max(FVperp2Red2(:, Qind, 1)) & ...
        max(FVperp2Red3(:, Qind, 1)) > max(FVperp2Red4(:, Qind, 1))
    NormfacS2(:)= max(FVperp2Red3(:, Qind, 1));
end
if max(FVperp2Red4(:, Qind, 1)) > max(FVperp2Red1(:, Qind, 1)) & ...
        max(FVperp2Red4(:, Qind, 1)) > max(FVperp2Red2(:, Qind, 1)) & ...
        max(FVperp2Red4(:, Qind, 1)) > max(FVperp2Red3(:, Qind, 1))
    NormfacS2(:)= max(FVperp2Red4(:, Qind, 1));
end

subplot(2, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, 1)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red2(:, Qind, 1)/NormfacS2(:, 1, 1)), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red3(:, Qind, 1)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, 1)/NormfacS2(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str((TimeT1(1)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed1(:, Qind, 1)) > max(FVparRed2(:, Qind, 1)) & ...
        max(FVparRed1(:, Qind, 1)) > max(FVparRed3(:, Qind, 1)) & ...
        max(FVparRed1(:, Qind, 1)) > max(FVparRed4(:, Qind, 1))
    NormfacS3(:)= max(FVparRed1(:, Qind, 1));
end
if max(FVparRed2(:, Qind, 1)) > max(FVparRed1(:, Qind, 1)) & ...
        max(FVparRed2(:, Qind, 1)) > max(FVparRed3(:, Qind, 1)) & ...
        max(FVparRed2(:, Qind, 1)) > max(FVparRed4(:, Qind, 1))
    NormfacS3(:)= max(FVparRed2(:, Qind, 1));
end
if max(FVparRed3(:, Qind, 1)) > max(FVparRed1(:, Qind, 1)) & ...
        max(FVparRed3(:, Qind, 1)) > max(FVparRed2(:, Qind, 1)) & ...
        max(FVparRed3(:, Qind, 1)) > max(FVparRed4(:, Qind, 1))
    NormfacS3(:)= max(FVparRed3(:, Qind, 1));
end
if max(FVparRed4(:, Qind, 1)) > max(FVparRed1(:, Qind, 1)) & ...
        max(FVparRed4(:, Qind, 1)) > max(FVparRed2(:, Qind, 1)) & ...
        max(FVparRed4(:, Qind, 1)) > max(FVparRed3(:, Qind, 1))
    NormfacS3(:)= max(FVparRed4(:, Qind, 1));
end

subplot(2, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, 1)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed2(:, Qind, 1)/NormfacS3(:, 1, 1)), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed3(:, Qind, 1)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, 1)/NormfacS3(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red2(:, Qind, Nend2)) & ...
        max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red3(:, Qind, Nend3)) & ...
        max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red4(:, Qind, Nend4))
    NormfacS4(:)= max(FVperp1Red1(:, Qind, Nend1));
end
if max(FVperp1Red2(:, Qind, Nend2)) > max(FVperp1Red1(:, Qind, Nend1)) & ...
        max(FVperp1Red2(:, Qind, Nend2)) > max(FVperp1Red3(:, Qind, Nend3)) & ...
        max(FVperp1Red2(:, Qind, Nend2)) > max(FVperp1Red4(:, Qind, Nend4))
    NormfacS4(:)= max(FVperp1Red2(:, Qind, Nend2));
end
if max(FVperp1Red3(:, Qind, Nend3)) > max(FVperp1Red1(:, Qind, Nend1)) & ...
        max(FVperp1Red3(:, Qind, Nend3)) > max(FVperp1Red2(:, Qind, Nend2)) & ...
        max(FVperp1Red3(:, Qind, Nend3)) > max(FVperp1Red4(:, Qind, Nend4))
    NormfacS4(:)= max(FVperp1Red3(:, Qind, Nend3));
end
if max(FVperp1Red4(:, Qind, Nend4)) > max(FVperp1Red1(:, Qind, Nend1)) & ...
        max(FVperp1Red4(:, Qind, Nend4)) > max(FVperp1Red2(:, Qind, Nend2)) & ...
        max(FVperp1Red4(:, Qind, Nend4)) > max(FVperp1Red3(:, Qind, Nend3))
    NormfacS4(:)= max(FVperp1Red4(:, Qind, Nend4));
end

subplot(2, 3, 4)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nend1)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red2(:, Qind, Nend2)/NormfacS4(:, 1, 1)), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red3(:, Qind, Nend3)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, Nend4)/NormfacS4(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red2(:, Qind, Nend2)) & ...
        max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red3(:, Qind, Nend3)) & ...
        max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red4(:, Qind, Nend4))
    NormfacS5(:)= max(FVperp2Red1(:, Qind, Nend1));
end
if max(FVperp2Red2(:, Qind, Nend2)) > max(FVperp2Red1(:, Qind, Nend1)) & ...
        max(FVperp2Red2(:, Qind, Nend2)) > max(FVperp2Red3(:, Qind, Nend3)) & ...
        max(FVperp2Red2(:, Qind, Nend2)) > max(FVperp2Red4(:, Qind, Nend4))
    NormfacS5(:)= max(FVperp2Red2(:, Qind, Nend2));
end
if max(FVperp2Red3(:, Qind, Nend3)) > max(FVperp2Red1(:, Qind, Nend1)) & ...
        max(FVperp2Red3(:, Qind, Nend3)) > max(FVperp2Red2(:, Qind, Nend2)) & ...
        max(FVperp2Red3(:, Qind, Nend3)) > max(FVperp2Red4(:, Qind, Nend4))
    NormfacS5(:)= max(FVperp2Red3(:, Qind, Nend3));
end
if max(FVperp2Red4(:, Qind, Nend4)) > max(FVperp2Red1(:, Qind, Nend1)) & ...
        max(FVperp2Red4(:, Qind, Nend4)) > max(FVperp2Red2(:, Qind, Nend2)) & ...
        max(FVperp2Red4(:, Qind, Nend4)) > max(FVperp2Red3(:, Qind, Nend3))
    NormfacS5(:)= max(FVperp2Red4(:, Qind, Nend4));
end

subplot(2, 3, 5)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nend1)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red2(:, Qind, Nend2)/NormfacS5(:, 1, 1)), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red3(:, Qind, Nend3)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(TimeT1(Nend1)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed1(:, Qind, Nend1)) > max(FVparRed2(:, Qind, Nend2)) & ...
        max(FVparRed1(:, Qind, Nend1)) > max(FVparRed3(:, Qind, Nend3)) & ...
        max(FVparRed1(:, Qind, Nend1)) > max(FVparRed4(:, Qind, Nend4))
    NormfacS6(:)= max(FVparRed1(:, Qind, Nend1));
end
if max(FVparRed2(:, Qind, Nend2)) > max(FVparRed1(:, Qind, Nend1)) & ...
        max(FVparRed2(:, Qind, Nend2)) > max(FVparRed3(:, Qind, Nend3)) & ...
        max(FVparRed2(:, Qind, Nend2)) > max(FVparRed4(:, Qind, Nend4))
    NormfacS6(:)= max(FVparRed2(:, Qind, Nend2));
end
if max(FVparRed3(:, Qind, Nend3)) > max(FVparRed1(:, Qind, Nend1)) & ...
        max(FVparRed3(:, Qind, Nend3)) > max(FVparRed2(:, Qind, Nend2)) & ...
        max(FVparRed3(:, Qind, Nend3)) > max(FVparRed4(:, Qind, Nend4))
    NormfacS6(:)= max(FVparRed3(:, Qind, Nend3));
end
if max(FVparRed4(:, Qind, Nend4)) > max(FVparRed1(:, Qind, Nend1)) & ...
        max(FVparRed4(:, Qind, Nend4)) > max(FVparRed2(:, Qind, Nend2)) & ...
        max(FVparRed4(:, Qind, Nend4)) > max(FVparRed3(:, Qind, Nend3))
    NormfacS6(:)= max(FVparRed4(:, Qind, Nend4));
end

subplot(2, 3, 6)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nend1)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed2(:, Qind, Nend2)/NormfacS6(:, 1, 1)), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed3(:, Qind, Nend3)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, Nend4)/NormfacS6(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('NC FINAL REDUCED F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT Z FINAL REDUCED F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 19;

ylim1= 0;
ylim2= 1.75;
xlim1= -10;
xlim2= 10;
textx= -16;
texty= 1.8;
textxE= -3;
textyE= 1.8;

if max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red1(:, Qind, Nbeg1)) & ...
        max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red1(:, Qind, 1))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, Nend1));
end
if max(FVperp1Red1(:, Qind, Nbeg1)) > max(FVperp1Red1(:, Qind, Nend1)) & ...
        max(FVperp1Red1(:, Qind, Nbeg1)) > max(FVperp1Red1(:, Qind, 1))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, Nbeg1));
end
if max(FVperp1Red1(:, Qind, 1)) > max(FVperp1Red1(:, Qind, Nbeg1)) & ...
        max(FVperp1Red1(:, Qind, 1)) > max(FVperp1Red1(:, Qind, Nend1))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, 1));
end

clear LH L
subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nend1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nbeg1)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, 1)/NormfacS1(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat(num2str(round((TimeT1(Nend1)/3600e0))), ' hr');
L{2}= horzcat(num2str((round(TimeT1(Nbeg1)/3600e0, 2)*60e0)), ' min');
L{3}= horzcat(num2str((TimeT1(1)/3600e0)), ' hr');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'orientation', 'horizontal')
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red1(:, Qind, Nbeg1)) & ...
        max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red1(:, Qind, 1))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, Nend1));
end
if max(FVperp2Red1(:, Qind, Nbeg1)) > max(FVperp2Red1(:, Qind, Nend1)) & ...
        max(FVperp2Red1(:, Qind, Nbeg1)) > max(FVperp2Red1(:, Qind, 1))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, Nbeg1));
end
if max(FVperp2Red1(:, Qind, 1)) > max(FVperp2Red1(:, Qind, Nbeg1)) & ...
        max(FVperp2Red1(:, Qind, 1)) > max(FVperp2Red1(:, Qind, Nend1))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, 1));
end

subplot(2, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nend1)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nbeg1)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, 1)/NormfacS2(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed1(:, Qind, Nend1)) > max(FVparRed1(:, Qind, Nbeg1)) & ...
        max(FVparRed1(:, Qind, Nend1)) > max(FVparRed1(:, Qind, 1))
    NormfacS3(:)= max(FVparRed1(:, Qind, Nend1));
end
if max(FVparRed1(:, Qind, Nbeg1)) > max(FVparRed1(:, Qind, Nend1)) & ...
        max(FVparRed1(:, Qind, Nbeg1)) > max(FVparRed1(:, Qind, 1))
    NormfacS3(:)= max(FVparRed1(:, Qind, Nbeg1));
end
if max(FVparRed1(:, Qind, 1)) > max(FVparRed1(:, Qind, Nbeg1)) & ...
        max(FVparRed1(:, Qind, 1)) > max(FVparRed1(:, Qind, Nend1))
    NormfacS3(:)= max(FVparRed1(:, Qind, 1));
end

subplot(2, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nend1)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nbeg1)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, 1)/NormfacS3(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FEEnergyRed1(:, Qind, Nend1)) > max(FEEnergyRed1(:, Qind, Nbeg1)) & ...
        max(FEEnergyRed1(:, Qind, Nend1)) > max(FEEnergyRed1(:, Qind, 1))
    NormfacS4(:)= max(FEEnergyRed1(:, Qind, Nend1));
end
if max(FEEnergyRed1(:, Qind, Nbeg1)) > max(FEEnergyRed1(:, Qind, Nend1)) & ...
        max(FEEnergyRed1(:, Qind, Nbeg1)) > max(FEEnergyRed1(:, Qind, 1))
    NormfacS4(:)= max(FEEnergyRed1(:, Qind, Nbeg1));
end
if max(FEEnergyRed1(:, Qind, 1)) > max(FEEnergyRed1(:, Qind, Nbeg1)) & ...
        max(FEEnergyRed1(:, Qind, 1)) > max(FEEnergyRed1(:, Qind, Nend1))
    NormfacS4(:)= max(FEEnergyRed1(:, Qind, 1));
end

subplot(2, 3, 4)
plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, Nend1)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, Nbeg1)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, 1)/NormfacS4(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 10])
ylim([ylim1 ylim2])
grid on
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed1(:, Qind, Nend1)) > max(DNFEnergyRed1(:, Qind, Nbeg1)) & ...
        max(DNFEnergyRed1(:, Qind, Nend1)) > max(DNFEnergyRed1(:, Qind, 1))
    NormfacS5(:)= max(DNFEnergyRed1(:, Qind, Nend1));
end
if max(DNFEnergyRed1(:, Qind, Nbeg1)) > max(DNFEnergyRed1(:, Qind, Nend1)) & ...
        max(DNFEnergyRed1(:, Qind, Nbeg1)) > max(DNFEnergyRed1(:, Qind, 1))
    NormfacS5(:)= max(DNFEnergyRed1(:, Qind, Nbeg1));
end
if max(DNFEnergyRed1(:, Qind, 1)) > max(DNFEnergyRed1(:, Qind, Nbeg1)) & ...
        max(DNFEnergyRed1(:, Qind, 1)) > max(DNFEnergyRed1(:, Qind, Nend1))
    NormfacS5(:)= max(DNFEnergyRed1(:, Qind, 1));
end

subplot(2, 3, 5)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, Nend1)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, Nbeg1)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, 1)/NormfacS5(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 10])
ylim([ylim1 ylim2])
grid on
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed1(:, Qind, Nend1)) > max(DEFEnergyRed1(:, Qind, Nbeg1)) & ...
        max(DEFEnergyRed1(:, Qind, Nend1)) > max(DEFEnergyRed1(:, Qind, 1))
    NormfacS6(:)= max(DEFEnergyRed1(:, Qind, Nend1));
end
if max(DEFEnergyRed1(:, Qind, Nbeg1)) > max(DEFEnergyRed1(:, Qind, Nend1)) & ...
        max(DEFEnergyRed1(:, Qind, Nbeg1)) > max(DEFEnergyRed1(:, Qind, 1))
    NormfacS6(:)= max(DEFEnergyRed1(:, Qind, Nbeg1));
end
if max(DEFEnergyRed1(:, Qind, 1)) > max(DEFEnergyRed1(:, Qind, Nbeg1)) & ...
        max(DEFEnergyRed1(:, Qind, 1)) > max(DEFEnergyRed1(:, Qind, Nend1))
    NormfacS6(:)= max(DEFEnergyRed1(:, Qind, 1));
end

subplot(2, 3, 6)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, Nend1)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, Nbeg1)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, 1)/NormfacS6(:, 1, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 10])
ylim([ylim1 ylim2])
grid on
text(textxE, textyE, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('Z FINAL REDUCED F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT W FINAL REDUCED-1 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 900])

Qind= 12;

ylim1= 0;
ylim2= 1.75;
xlim1= -10;
xlim2= 10;
textx= -16;
texty= 1.8;
textxE= -3;
textyE= 1.8;

textx0= -10;
texty0= 1.5;

clear LH L

if max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red1(:, Qind, Nbeg1))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, Nend1));
end
if max(FVperp1Red1(:, Qind, Nbeg1)) > max(FVperp1Red1(:, Qind, Nend1))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, Nbeg1));
end

subplot(3, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nend1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nbeg1)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, 1)/max(FVperp1Red1(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
text(textx0, texty0, horzcat('$E_{\parallel 0}= 0$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red1(:, Qind, Nbeg1))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, Nend1));
end
if max(FVperp2Red1(:, Qind, Nbeg1)) > max(FVperp2Red1(:, Qind, Nend1))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, Nbeg1));
end

subplot(3, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nend1)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nbeg1)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, 1)/max(FVperp2Red1(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat(num2str(round((TimeT1(Nend1)/3600e0))), ' hr');
L{2}= horzcat(num2str((round(TimeT1(Nbeg1)/3600e0, 2)*60e0)), ' min');
L{3}= horzcat(num2str(round((TimeT1(1)/3600e0))), ' hr');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
    'interpreter', 'latex', 'FontSize', 25);
grid on
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed1(:, Qind, Nend1)) > max(FVparRed1(:, Qind, Nbeg1))
    NormfacS3(:)= max(FVparRed1(:, Qind, Nend1));
end
if max(FVparRed1(:, Qind, Nbeg1)) > max(FVparRed1(:, Qind, Nend1))
    NormfacS3(:)= max(FVparRed1(:, Qind, Nbeg1));
end

subplot(3, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nend1)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nbeg1)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, 1)/max(FVparRed1(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

clear LH L

if max(FVperp1Red4(:, Qind, Nend4)) > max(FVperp1Red4(:, Qind, Nbeg4))
    NormfacS4(:)= max(FVperp1Red4(:, Qind, Nend4));
end
if max(FVperp1Red4(:, Qind, Nbeg4)) > max(FVperp1Red4(:, Qind, Nend4))
    NormfacS4(:)= max(FVperp1Red4(:, Qind, Nbeg4));
end

subplot(3, 3, 4)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, Nend4)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, Nbeg4)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, 1)/max(FVperp1Red4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
text(textx0, texty0, horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red4(:, Qind, Nend4)) > max(FVperp2Red4(:, Qind, Nbeg4))
    NormfacS5(:)= max(FVperp2Red4(:, Qind, Nend4));
end
if max(FVperp2Red4(:, Qind, Nbeg4)) > max(FVperp2Red4(:, Qind, Nend4))
    NormfacS5(:)= max(FVperp2Red4(:, Qind, Nbeg4));
end

subplot(3, 3, 5)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, Nbeg4)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, 1)/max(FVperp2Red4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed4(:, Qind, Nend4)) > max(FVparRed4(:, Qind, Nbeg4))
    NormfacS6(:)= max(FVparRed4(:, Qind, Nend4));
end
if max(FVparRed4(:, Qind, Nbeg4)) > max(FVparRed4(:, Qind, Nend4))
    NormfacS6(:)= max(FVparRed4(:, Qind, Nbeg4));
end

subplot(3, 3, 6)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, Nend4)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, Nbeg4)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, 1)/max(FVparRed4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

clear LH L

if max(FVperp1Red5(:, Qind, Nend5)) > max(FVperp1Red5(:, Qind, Nbeg5))
    NormfacS7(:)= max(FVperp1Red5(:, Qind, Nend5));
end
if max(FVperp1Red5(:, Qind, Nbeg5)) > max(FVperp1Red5(:, Qind, Nend5))
    NormfacS7(:)= max(FVperp1Red5(:, Qind, Nbeg5));
end

subplot(3, 3, 7)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red5(:, Qind, Nend5)/NormfacS7(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red5(:, Qind, Nbeg5)/NormfacS7(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red5(:, Qind, 1)/max(FVperp1Red5(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
text(textx0, texty0, horzcat('$E_{\parallel 0}= 5 \times 10^{-7}$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(g)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red5(:, Qind, Nend5)) > max(FVperp2Red5(:, Qind, Nbeg5))
    NormfacS8(:)= max(FVperp2Red5(:, Qind, Nend5));
end
if max(FVperp2Red5(:, Qind, Nbeg5)) > max(FVperp2Red5(:, Qind, Nend5))
    NormfacS8(:)= max(FVperp2Red5(:, Qind, Nbeg5));
end

subplot(3, 3, 8)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red5(:, Qind, Nend5)/NormfacS8(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red5(:, Qind, Nbeg5)/NormfacS8(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red5(:, Qind, 1)/max(FVperp2Red5(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(h)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed5(:, Qind, Nend5)) > max(FVparRed5(:, Qind, Nbeg5))
    NormfacS9(:)= max(FVparRed5(:, Qind, Nend5));
end
if max(FVparRed5(:, Qind, Nbeg5)) > max(FVparRed5(:, Qind, Nend5))
    NormfacS9(:)= max(FVparRed5(:, Qind, Nbeg5));
end

subplot(3, 3, 9)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed5(:, Qind, Nend5)/NormfacS9(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed5(:, Qind, Nbeg5)/NormfacS9(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed5(:, Qind, 1)/max(FVparRed5(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(i)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('W FINAL REDUCED-1 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT V-lambda FINAL REDUCED-1 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 19;

ylim1= 0;
ylim2= 1.75;
xlim1= -10;
xlim2= 10;
textx= -16;
texty= 1.6;
textxE= -3;
textyE= 1.6;

textx0= -10;
texty0= 1.5;

clear LH L

if max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red21(:, Qind, Nend21))
    NormfacS1(:)= max(FVperp1Red1(:, Qind, Nend1));
end
if max(FVperp1Red21(:, Qind, Nend21)) > max(FVperp1Red1(:, Qind, Nend1))
    NormfacS1(:)= max(FVperp1Red21(:, Qind, Nend21));
end

subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nend1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red21(:, Qind, Nend21)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red21(:, Qind, Nend21))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, Nend1));
end
if max(FVperp2Red21(:, Qind, Nend21)) > max(FVperp2Red1(:, Qind, Nend1))
    NormfacS2(:)= max(FVperp2Red21(:, Qind, Nend21));
end

subplot(2, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nend1)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red21(:, Qind, Nend21)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B1');
L{2}= horzcat('Sim. B2');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed1(:, Qind, Nend1)) > max(FVparRed21(:, Qind, Nend21))
    NormfacS3(:)= max(FVparRed1(:, Qind, Nend1));
end
if max(FVparRed21(:, Qind, Nend21)) > max(FVparRed1(:, Qind, Nend1))
    NormfacS3(:)= max(FVparRed21(:, Qind, Nend21));
end

subplot(2, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nend1)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed21(:, Qind, Nend21)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

Qind= 4;
if max(FVperp1Red4(:, Qind, Nbeg4)) > max(FVperp1Red24(:, Qind, Nbeg24))
    NormfacS4(:)= max(FVperp1Red4(:, Qind, Nbeg4));
end
if max(FVperp1Red24(:, Qind, Nbeg24)) > max(FVperp1Red4(:, Qind, Nbeg4))
    NormfacS4(:)= max(FVperp1Red24(:, Qind, Nbeg24));
end

subplot(2, 3, 4)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, Nbeg4)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red24(:, Qind, Nbeg24)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red4(:, Qind, Nend4)) > max(FVperp2Red24(:, Qind, Nend24))
    NormfacS5(:)= max(FVperp2Red4(:, Qind, Nend4));
end
if max(FVperp2Red24(:, Qind, Nend24)) > max(FVperp2Red4(:, Qind, Nend4))
    NormfacS5(:)= max(FVperp2Red24(:, Qind, Nend24));
end

subplot(2, 3, 5)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red24(:, Qind, Nend24)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B3');
L{2}= horzcat('Sim. B4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed4(:, Qind, Nend4)) > max(FVparRed24(:, Qind, Nend24))
    NormfacS6(:)= max(FVparRed4(:, Qind, Nend4));
end
if max(FVparRed24(:, Qind, Nend24)) > max(FVparRed4(:, Qind, Nend4))
    NormfacS6(:)= max(FVparRed24(:, Qind, Nend24));
end

subplot(2, 3, 6)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, Nend4)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed24(:, Qind, Nend24)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('V-lambda FINAL REDUCED-1 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT V-PC FINAL REDUCED-1 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 4;

ylim1= 0;
ylim2= 1.75;
xlim1= -10;
xlim2= 10;
textx= -16;
texty= 1.6;
textxE= -3;
textyE= 1.6;

textx0= -10;
texty0= 1.5;

clear LH L

% if max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red2(:, Qind, Nend2))
%     NormfacS1(:)= max(FVperp1Red1(:, Qind, Nend1));
% end
% if max(FVperp1Red2(:, Qind, Nend2)) > max(FVperp1Red1(:, Qind, Nend1))
%     NormfacS1(:)= max(FVperp1Red2(:, Qind, Nend2));
% end

subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
% plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red2(:, Qind, Nend2)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% if max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red2(:, Qind, Nend2))
%     NormfacS2(:)= max(FVperp2Red1(:, Qind, Nend1));
% end
% if max(FVperp2Red2(:, Qind, Nend2)) > max(FVperp2Red1(:, Qind, Nend1))
%     NormfacS2(:)= max(FVperp2Red2(:, Qind, Nend2));
% end

subplot(2, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
% plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red2(:, Qind, Nend2)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B1');
L{2}= horzcat('Sim. B2');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% if max(FVparRed1(:, Qind, Nend1)) > max(FVparRed2(:, Qind, Nend2))
%     NormfacS3(:)= max(FVparRed1(:, Qind, Nend1));
% end
% if max(FVparRed2(:, Qind, Nend2)) > max(FVparRed1(:, Qind, Nend1))
%     NormfacS3(:)= max(FVparRed2(:, Qind, Nend2));
% end

subplot(2, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
% plot(-VparGCqq(:)*1e-3, smooth(FVparRed2(:, Qind, Nend2)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% Qind= 4;
% if max(FVperp1Red4(:, Qind, Nend4)) > max(FVperp1Red24(:, Qind, Nend24))
%     NormfacS4(:)= max(FVperp1Red4(:, Qind, Nend4));
% end
% if max(FVperp1Red24(:, Qind, Nend24)) > max(FVperp1Red4(:, Qind, Nend4))
%     NormfacS4(:)= max(FVperp1Red24(:, Qind, Nend24));
% end
% 
% subplot(2, 3, 4)
% plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red4(:, Qind, Nend4)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red24(:, Qind, Nend24)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% if max(FVperp2Red4(:, Qind, Nend4)) > max(FVperp2Red24(:, Qind, Nend24))
%     NormfacS5(:)= max(FVperp2Red4(:, Qind, Nend4));
% end
% if max(FVperp2Red24(:, Qind, Nend24)) > max(FVperp2Red4(:, Qind, Nend4))
%     NormfacS5(:)= max(FVperp2Red24(:, Qind, Nend24));
% end
% 
% subplot(2, 3, 5)
% plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red4(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red24(:, Qind, Nend24)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
% LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
% L{1}= horzcat('Sim. B3');
% L{2}= horzcat('Sim. B4');
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
%     num2str(round(Time(nn)/3600e0)), ' hr'), ...
%     'interpreter', 'latex', 'FontSize', 25);
% text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% if max(FVparRed4(:, Qind, Nend4)) > max(FVparRed24(:, Qind, Nend24))
%     NormfacS6(:)= max(FVparRed4(:, Qind, Nend4));
% end
% if max(FVparRed24(:, Qind, Nend24)) > max(FVparRed4(:, Qind, Nend4))
%     NormfacS6(:)= max(FVparRed24(:, Qind, Nend24));
% end
% 
% subplot(2, 3, 6)
% plot(-VparGCqq(:)*1e-3, smooth(FVparRed4(:, Qind, Nend4)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot(-VparGCqq(:)*1e-3, smooth(FVparRed24(:, Qind, Nend24)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('V-PC FINAL REDUCED-1 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT W FINAL REDUCED-2 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 900])

Qind= 12;

ylim1= 0;
ylim2= 1.75;
xlim1= 0;
xlim2= 10;
textx= -2.5;
texty= 1.8;
textxE= -3;
textyE= 1.8;

textx0= 0;
texty0= 1.5;

clear LH L

% if max(FEEnergyRed1(:, Qind, Nend1)) > max(FEEnergyRed1(:, Qind, Nbeg1))
%     NormfacS1(:)= max(FEEnergyRed1(:, Qind, Nend1));
% end
% if max(FEEnergyRed1(:, Qind, Nbeg1)) > max(FEEnergyRed1(:, Qind, Nend1))
%     NormfacS1(:)= max(FEEnergyRed1(:, Qind, Nbeg1));
% end
% 
% subplot(3, 3, 1)
% plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, Nend1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, Nbeg1)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, 1)/max(FEEnergyRed1(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
% text(textx0, texty0, horzcat('$E_{\parallel 0}= 0$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% if max(DNFEnergyRed1(:, Qind, Nend1)) > max(DNFEnergyRed1(:, Qind, Nbeg1))
%     NormfacS2(:)= max(DNFEnergyRed1(:, Qind, Nend1));
% end
% if max(DNFEnergyRed1(:, Qind, Nbeg1)) > max(DNFEnergyRed1(:, Qind, Nend1))
%     NormfacS2(:)= max(DNFEnergyRed1(:, Qind, Nbeg1));
% end
% 
% subplot(3, 3, 2)
% plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, Nend1)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, Nbeg1)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, 1)/max(DNFEnergyRed1(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
% LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
% LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
% L{1}= horzcat(num2str(round((TimeT1(Nend1)/3600e0))), ' hr');
% L{2}= horzcat(num2str((round(TimeT1(Nbeg1)/3600e0, 2)*60e0)), ' min');
% L{3}= horzcat(num2str(round((TimeT1(1)/3600e0))), ' hr');
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
%     'interpreter', 'latex', 'FontSize', 25);
% grid on
% text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% if max(DEFEnergyRed1(:, Qind, Nend1)) > max(DEFEnergyRed1(:, Qind, Nbeg1))
%     NormfacS3(:)= max(DEFEnergyRed1(:, Qind, Nend1));
% end
% if max(DEFEnergyRed1(:, Qind, Nbeg1)) > max(DEFEnergyRed1(:, Qind, Nend1))
%     NormfacS3(:)= max(DEFEnergyRed1(:, Qind, Nbeg1));
% end
% 
% subplot(3, 3, 3)
% plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, Nend1)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, Nbeg1)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, 1)/max(DEFEnergyRed1(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% clear LH L
% 
% if max(FEEnergyRed4(:, Qind, Nend4)) > max(FEEnergyRed4(:, Qind, Nbeg4))
%     NormfacS4(:)= max(FEEnergyRed4(:, Qind, Nend4));
% end
% if max(FEEnergyRed4(:, Qind, Nbeg4)) > max(FEEnergyRed4(:, Qind, Nend4))
%     NormfacS4(:)= max(FEEnergyRed4(:, Qind, Nbeg4));
% end
% 
% subplot(3, 3, 4)
% plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, Nend4)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, Nbeg4)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, 1)/max(FEEnergyRed4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
% text(textx0, texty0, horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% if max(DNFEnergyRed4(:, Qind, Nend4)) > max(DNFEnergyRed4(:, Qind, Nbeg4))
%     NormfacS5(:)= max(DNFEnergyRed4(:, Qind, Nend4));
% end
% if max(DNFEnergyRed4(:, Qind, Nbeg4)) > max(DNFEnergyRed4(:, Qind, Nend4))
%     NormfacS5(:)= max(DNFEnergyRed4(:, Qind, Nbeg4));
% end
% 
% subplot(3, 3, 5)
% plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, Nbeg4)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, 1)/max(DNFEnergyRed4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off
% 
% if max(DEFEnergyRed4(:, Qind, Nend4)) > max(DEFEnergyRed4(:, Qind, Nbeg4))
%     NormfacS6(:)= max(DEFEnergyRed4(:, Qind, Nend4));
% end
% if max(DEFEnergyRed4(:, Qind, Nbeg4)) > max(DEFEnergyRed4(:, Qind, Nend4))
%     NormfacS6(:)= max(DEFEnergyRed4(:, Qind, Nbeg4));
% end
% 
% subplot(3, 3, 6)
% plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, Nend4)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
% hold on
% plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, Nbeg4)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, 1)/max(DEFEnergyRed4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
% grid on
% text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
% ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
% xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
% set(gca, 'FontSize', fsize);
% set(gcf, 'color','white');
% hold off

clear LH L

if max(FEEnergyRed5(:, Qind, Nend5)) > max(FEEnergyRed5(:, Qind, Nbeg5))
    NormfacS7(:)= max(FEEnergyRed5(:, Qind, Nend5));
end
if max(FEEnergyRed5(:, Qind, Nbeg5)) > max(FEEnergyRed5(:, Qind, Nend5))
    NormfacS7(:)= max(FEEnergyRed5(:, Qind, Nbeg5));
end

subplot(3, 3, 7)
plot((6.242e18).*EnergyG(:), (FEEnergyRed5(:, Qind, Nend5)/NormfacS7(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed5(:, Qind, Nbeg5)/NormfacS7(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (FEEnergyRed5(:, Qind, 1)/max(FEEnergyRed5(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(g)', 'interpreter', 'latex', 'FontSize', 25)
text(textx0, texty0, horzcat('$E_{\parallel 0}= 5 \times 10^{-7}$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed5(:, Qind, Nend5)) > max(DNFEnergyRed5(:, Qind, Nbeg5))
    NormfacS8(:)= max(DNFEnergyRed5(:, Qind, Nend5));
end
if max(DNFEnergyRed5(:, Qind, Nbeg5)) > max(DNFEnergyRed5(:, Qind, Nend5))
    NormfacS8(:)= max(DNFEnergyRed5(:, Qind, Nbeg5));
end

subplot(3, 3, 8)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed5(:, Qind, Nend5)/NormfacS8(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed5(:, Qind, Nbeg5)/NormfacS8(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed5(:, Qind, 1)/max(DNFEnergyRed5(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(h)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed5(:, Qind, Nend5)) > max(DEFEnergyRed5(:, Qind, Nbeg5))
    NormfacS9(:)= max(DEFEnergyRed5(:, Qind, Nend5));
end
if max(DEFEnergyRed5(:, Qind, Nbeg5)) > max(DEFEnergyRed5(:, Qind, Nend5))
    NormfacS9(:)= max(DEFEnergyRed5(:, Qind, Nbeg5));
end

subplot(3, 3, 9)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed5(:, Qind, Nend5)/NormfacS9(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed5(:, Qind, Nbeg5)/NormfacS9(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed5(:, Qind, 1)/max(DEFEnergyRed5(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(i)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('W FINAL REDUCED-2 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT V-lambda FINAL REDUCED-2 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 19;

ylim1= 0;
ylim2= 1.75;
xlim1= 0;
xlim2= 10;
textx= -2.5;
texty= 1.6;
textxE= -3;
textyE= 1.8;

textx0= 0;
texty0= 1.5;

clear LH L

if max(FEEnergyRed1(:, Qind, Nend1)) > max(FEEnergyRed21(:, Qind, Nend21))
    NormfacS1(:)= max(FEEnergyRed1(:, Qind, Nend1));
end
if max(FEEnergyRed21(:, Qind, Nend21)) > max(FEEnergyRed1(:, Qind, Nend1))
    NormfacS1(:)= max(FEEnergyRed21(:, Qind, Nend21));
end

subplot(2, 3, 1)
plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, Nend1)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed21(:, Qind, Nend21)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed1(:, Qind, Nend1)) > max(DNFEnergyRed21(:, Qind, Nend21))
    NormfacS2(:)= max(DNFEnergyRed1(:, Qind, Nend1));
end
if max(DNFEnergyRed21(:, Qind, Nend21)) > max(DNFEnergyRed1(:, Qind, Nend1))
    NormfacS2(:)= max(DNFEnergyRed21(:, Qind, Nend21));
end

subplot(2, 3, 2)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, Nend1)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed21(:, Qind, Nend21)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B1');
L{2}= horzcat('Sim. B2');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed1(:, Qind, Nend1)) > max(DEFEnergyRed21(:, Qind, Nend21))
    NormfacS3(:)= max(DEFEnergyRed1(:, Qind, Nend1));
end
if max(DEFEnergyRed21(:, Qind, Nend21)) > max(DEFEnergyRed1(:, Qind, Nend1))
    NormfacS3(:)= max(DEFEnergyRed21(:, Qind, Nend21));
end

subplot(2, 3, 3)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, Nend1)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed21(:, Qind, Nend21)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

Qind= 4;
clear LH L

if max(FEEnergyRed4(:, Qind, Nend4)) > max(FEEnergyRed24(:, Qind, Nend24))
    NormfacS4(:)= max(FEEnergyRed4(:, Qind, Nend4));
end
if max(FEEnergyRed24(:, Qind, Nend24)) > max(FEEnergyRed4(:, Qind, Nend4))
    NormfacS4(:)= max(FEEnergyRed24(:, Qind, Nend24));
end

subplot(2, 3, 4)
plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, Nend4)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed24(:, Qind, Nend24)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed4(:, Qind, Nend4)) > max(DNFEnergyRed24(:, Qind, Nend24))
    NormfacS5(:)= max(DNFEnergyRed4(:, Qind, Nend4));
end
if max(DNFEnergyRed24(:, Qind, Nend24)) > max(DNFEnergyRed4(:, Qind, Nend4))
    NormfacS5(:)= max(DNFEnergyRed24(:, Qind, Nend24));
end

subplot(2, 3, 5)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed24(:, Qind, Nend24)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Sim. B3');
L{2}= horzcat('Sim. B4');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str(round(Time(nn)/3600e0)), ' hr'), ...
    'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed4(:, Qind, Nend4)) > max(DEFEnergyRed24(:, Qind, Nend24))
    NormfacS6(:)= max(DEFEnergyRed4(:, Qind, Nend4));
end
if max(DEFEnergyRed24(:, Qind, Nend24)) > max(DEFEnergyRed4(:, Qind, Nend4))
    NormfacS6(:)= max(DEFEnergyRed24(:, Qind, Nend24));
end

subplot(2, 3, 6)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, Nend4)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed24(:, Qind, Nend24)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('V-lambda FINAL REDUCED-2 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT V-PC FINAL ALL REDUCED-2 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

ylim1= 0;
ylim2= 1.75;
xlim1= 0;
xlim2= 10;
textx= -2.5;
texty= 3.6;
textxE= -3;
textyE= 1.8;

textx0= 0;
texty0= 1.5;

clear LH L

setnum= 1;
nnflag= 1;
% 1e0 <= alphaind & alphaind <= 9e0 % upwards 0-30degs
% 17e0 < alphaind & alphaind < 34e0 % transverse 60-120degs
% 42e0 <= alphaind & alphaind <= 50e0 % downwards 150-180degs
  
clear Energyk Energyq
% Set interpolation known points:
Energyk(:)= EnergyGG(:, 1, 1);
% Set interpolation query points:
Energyq(:)= linspace(Energyk(1), Energyk(end), 1d2);

Qind= 4;

for Eind= 1:1:NEG
    if setnum == 1
        for nn= 1:1:Nend1
            if nn == Nbeg1 | nn == Nend1
                clear DEFEnergyRedD1 DEFEnergyRedT1 DEFEnergyRedU1

                DEFEnergyRedD1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 1:9, Qind, nn));
                DEFEnergyRedT1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 17:34, Qind, nn));
                DEFEnergyRedU1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend2
            if nn == Nbeg2 | nn == Nend2
                clear DEFEnergyRedD2 DEFEnergyRedT2 DEFEnergyRedU2

                DEFEnergyRedD2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, 1:9, Qind, nn));
                DEFEnergyRedT2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, 17:34, Qind, nn));
                DEFEnergyRedU2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend3
            if nn == Nbeg3 | nn == Nend3
                clear DEFEnergyRedD3 DEFEnergyRedT3 DEFEnergyRedU3

                DEFEnergyRedD3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 1:9, Qind, nn));
                DEFEnergyRedT3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 17:34, Qind, nn));
                DEFEnergyRedU3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 42:50, Qind, nn));
            end
        end
    end
    if setnum == 2  
        for nn= 1:1:Nend4
            if nn == Nbeg4 | nn == Nend4
                clear DEFEnergyRedD4 DEFEnergyRedT4 DEFEnergyRedU4

                DEFEnergyRedD4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, 1:9, Qind, nn));
                DEFEnergyRedT4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, 17:34, Qind, nn));
                DEFEnergyRedU4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend5
            if nn == Nbeg5 | nn == Nend5
                clear DEFEnergyRedD5 DEFEnergyRedT5 DEFEnergyRedU5

                DEFEnergyRedD5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, 1:9, Qind, nn));
                DEFEnergyRedT5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, 17:34, Qind, nn));
                DEFEnergyRedU5(Eind, Qind, nn)= sum(DEFEnergyAlphaRed5(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend6
            if nn == Nbeg6 | nn == Nend6
                clear DEFEnergyRedD6 DEFEnergyRedT6 DEFEnergyRedU6

                DEFEnergyRedD6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, 1:9, Qind, nn));
                DEFEnergyRedT6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, 17:34, Qind, nn));
                DEFEnergyRedU6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, 42:50, Qind, nn));
            end
        end
    end
    if setnum == 3  
        for nn= 1:1:Nend7
            DEFEnergyRedD7(Eind, Qind, nn)= sum(DEFEnergyAlphaRed7(Eind, 1:9, Qind, nn));
            DEFEnergyRedT7(Eind, Qind, nn)= sum(DEFEnergyAlphaRed7(Eind, 17:34, Qind, nn));
            DEFEnergyRedU7(Eind, Qind, nn)= sum(DEFEnergyAlphaRed7(Eind, 42:50, Qind, nn));

            DEFEnergyRedD7Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD7(:, Qind, nn), Energyq(:));
            DEFEnergyRedT7Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT7(:, Qind, nn), Energyq(:));
            DEFEnergyRedU7Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU7(:, Qind, nn), Energyq(:));
        end
        for nn= 1:1:Nend8
            DEFEnergyRedD8(Eind, Qind, nn)= sum(DEFEnergyAlphaRed8(Eind, 1:9, Qind, nn));
            DEFEnergyRedT8(Eind, Qind, nn)= sum(DEFEnergyAlphaRed8(Eind, 17:34, Qind, nn));
            DEFEnergyRedU8(Eind, Qind, nn)= sum(DEFEnergyAlphaRed8(Eind, 42:50, Qind, nn));

            DEFEnergyRedD8Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD8(:, Qind, nn), Energyq(:));
            DEFEnergyRedT8Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT8(:, Qind, nn), Energyq(:));
            DEFEnergyRedU8Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU8(:, Qind, nn), Energyq(:));
        end
        for nn= 1:1:Nend9
            DEFEnergyRedD9(Eind, Qind, nn)= sum(DEFEnergyAlphaRed9(Eind, 1:9, Qind, nn));
            DEFEnergyRedT9(Eind, Qind, nn)= sum(DEFEnergyAlphaRed9(Eind, 17:34, Qind, nn));
            DEFEnergyRedU9(Eind, Qind, nn)= sum(DEFEnergyAlphaRed9(Eind, 42:50, Qind, nn));

            DEFEnergyRedD9Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD9(:, Qind, nn), Energyq(:));
            DEFEnergyRedT9Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT9(:, Qind, nn), Energyq(:));
            DEFEnergyRedU9Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU9(:, Qind, nn), Energyq(:));
        end
    end
    if setnum == 4
        for nn= 1:1:Nend10
            DEFEnergyRedD10(Eind, Qind, nn)= sum(DEFEnergyAlphaRed10(Eind, 1:9, Qind, nn));
            DEFEnergyRedT10(Eind, Qind, nn)= sum(DEFEnergyAlphaRed10(Eind, 17:34, Qind, nn));
            DEFEnergyRedU10(Eind, Qind, nn)= sum(DEFEnergyAlphaRed10(Eind, 42:50, Qind, nn));

            DEFEnergyRedD10Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD10(:, Qind, nn), Energyq(:));
            DEFEnergyRedT10Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT10(:, Qind, nn), Energyq(:));
            DEFEnergyRedU10Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU10(:, Qind, nn), Energyq(:));
        end
        for nn= 1:1:Nend11
            DEFEnergyRedD11(Eind, Qind, nn)= sum(DEFEnergyAlphaRed11(Eind, 1:9, Qind, nn));
            DEFEnergyRedT11(Eind, Qind, nn)= sum(DEFEnergyAlphaRed11(Eind, 17:34, Qind, nn));
            DEFEnergyRedU11(Eind, Qind, nn)= sum(DEFEnergyAlphaRed11(Eind, 42:50, Qind, nn));

            DEFEnergyRedD11Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD11(:, Qind, nn), Energyq(:));
            DEFEnergyRedT11Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT11(:, Qind, nn), Energyq(:));
            DEFEnergyRedU11Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU11(:, Qind, nn), Energyq(:));
        end
        for nn= 1:1:Nend12
            DEFEnergyRedD12(Eind, Qind, nn)= sum(DEFEnergyAlphaRed12(Eind, 1:9, Qind, nn));
            DEFEnergyRedT12(Eind, Qind, nn)= sum(DEFEnergyAlphaRed12(Eind, 17:34, Qind, nn));
            DEFEnergyRedU12(Eind, Qind, nn)= sum(DEFEnergyAlphaRed12(Eind, 42:50, Qind, nn));

            DEFEnergyRedD12Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD12(:, Qind, nn), Energyq(:));
            DEFEnergyRedT12Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT12(:, Qind, nn), Energyq(:));
            DEFEnergyRedU12Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU12(:, Qind, nn), Energyq(:));
        end
    end
    if setnum == 5
        for nn= 1:1:Nend13
            DEFEnergyRedD13(Eind, Qind, nn)= sum(DEFEnergyAlphaRed13(Eind, 1:9, Qind, nn));
            DEFEnergyRedT13(Eind, Qind, nn)= sum(DEFEnergyAlphaRed13(Eind, 17:34, Qind, nn));
            DEFEnergyRedU13(Eind, Qind, nn)= sum(DEFEnergyAlphaRed13(Eind, 42:50, Qind, nn));

            DEFEnergyRedD13Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD13(:, Qind, nn), Energyq(:));
            DEFEnergyRedT13Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT13(:, Qind, nn), Energyq(:));
            DEFEnergyRedU13Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU13(:, Qind, nn), Energyq(:));
        end
        for nn= 1:1:Nend14
            DEFEnergyRedD14(Eind, Qind, nn)= sum(DEFEnergyAlphaRed14(Eind, 1:9, Qind, nn));
            DEFEnergyRedT14(Eind, Qind, nn)= sum(DEFEnergyAlphaRed14(Eind, 17:34, Qind, nn));
            DEFEnergyRedU14(Eind, Qind, nn)= sum(DEFEnergyAlphaRed14(Eind, 42:50, Qind, nn));

            DEFEnergyRedD14Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD14(:, Qind, nn), Energyq(:));
            DEFEnergyRedT14Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT14(:, Qind, nn), Energyq(:));
            DEFEnergyRedU14Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU14(:, Qind, nn), Energyq(:));
        end
        for nn= 1:1:Nend15
            DEFEnergyRedD15(Eind, Qind, nn)= sum(DEFEnergyAlphaRed15(Eind, 1:9, Qind, nn));
            DEFEnergyRedT15(Eind, Qind, nn)= sum(DEFEnergyAlphaRed15(Eind, 17:34, Qind, nn));
            DEFEnergyRedU15(Eind, Qind, nn)= sum(DEFEnergyAlphaRed15(Eind, 42:50, Qind, nn));

            DEFEnergyRedD15Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD15(:, Qind, nn), Energyq(:));
            DEFEnergyRedT15Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT15(:, Qind, nn), Energyq(:));
            DEFEnergyRedU15Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU15(:, Qind, nn), Energyq(:));
        end
    end
    if setnum == 6
        for nn= 1:1:Nend16
            if nn == Nbeg16 | nn == Nend16
                clear DEFEnergyRedD16 DEFEnergyRedT16 DEFEnergyRedU16

                DEFEnergyRedD16(Eind, Qind, nn)= sum(DEFEnergyAlphaRed16(Eind, 1:9, Qind, nn));
                DEFEnergyRedT16(Eind, Qind, nn)= sum(DEFEnergyAlphaRed16(Eind, 17:34, Qind, nn));
                DEFEnergyRedU16(Eind, Qind, nn)= sum(DEFEnergyAlphaRed16(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend17
            if nn == Nbeg17 | nn == Nend17
                clear DEFEnergyRedD17 DEFEnergyRedT17 DEFEnergyRedU17

                DEFEnergyRedD17(Eind, Qind, nn)= sum(DEFEnergyAlphaRed17(Eind, 1:9, Qind, nn));
                DEFEnergyRedT17(Eind, Qind, nn)= sum(DEFEnergyAlphaRed17(Eind, 17:34, Qind, nn));
                DEFEnergyRedU17(Eind, Qind, nn)= sum(DEFEnergyAlphaRed17(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend18
            if nn == Nbeg18 | nn == Nend18
                clear DEFEnergyRedD18 DEFEnergyRedT18 DEFEnergyRedU18

                DEFEnergyRedD18(Eind, Qind, nn)= sum(DEFEnergyAlphaRed18(Eind, 1:9, Qind, nn));
                DEFEnergyRedT18(Eind, Qind, nn)= sum(DEFEnergyAlphaRed18(Eind, 17:34, Qind, nn));
                DEFEnergyRedU18(Eind, Qind, nn)= sum(DEFEnergyAlphaRed18(Eind, 42:50, Qind, nn));
            end
        end
    end
end
if setnum == 1
    for nn= 1:1:Nend1
        clear DEFEnergyRedD1Interp  DEFEnergyRedT1Interp  DEFEnergyRedU1Interp 

        DEFEnergyRedD1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD1(:, Qind, nn), Energyq(:));
        DEFEnergyRedT1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT1(:, Qind, nn), Energyq(:));
        DEFEnergyRedU1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU1(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend2
        clear DEFEnergyRedD2Interp  DEFEnergyRedT2Interp  DEFEnergyRedU2Interp 

        DEFEnergyRedD2Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD2(:, Qind, nn), Energyq(:));
        DEFEnergyRedT2Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT2(:, Qind, nn), Energyq(:));
        DEFEnergyRedU2Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU2(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend3
        clear DEFEnergyRedD3Interp  DEFEnergyRedT3Interp  DEFEnergyRedU3Interp 

        DEFEnergyRedD3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD3(:, Qind, nn), Energyq(:));
        DEFEnergyRedT3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT3(:, Qind, nn), Energyq(:));
        DEFEnergyRedU3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU3(:, Qind, nn), Energyq(:));
    end
end
if setnum == 2  
    for nn= 1:1:Nend4
        clear DEFEnergyRedD4Interp  DEFEnergyRedT4Interp  DEFEnergyRedU4Interp

        DEFEnergyRedD4Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD4(:, Qind, nn), Energyq(:));
        DEFEnergyRedT4Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT4(:, Qind, nn), Energyq(:));
        DEFEnergyRedU4Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU4(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend5
        clear DEFEnergyRedD5Interp  DEFEnergyRedT5Interp  DEFEnergyRedU5Interp

        DEFEnergyRedD5Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD5(:, Qind, nn), Energyq(:));
        DEFEnergyRedT5Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT5(:, Qind, nn), Energyq(:));
        DEFEnergyRedU5Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU5(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend6
        clear DEFEnergyRedD6Interp  DEFEnergyRedT6Interp  DEFEnergyRedU6Interp

        DEFEnergyRedD6Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD6(:, Qind, nn), Energyq(:));
        DEFEnergyRedT6Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT6(:, Qind, nn), Energyq(:));
        DEFEnergyRedU6Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU6(:, Qind, nn), Energyq(:));
    end
end
if setnum == 3  
    for nn= 1:1:Nend7
        clear DEFEnergyRedD7Interp  DEFEnergyRedT7Interp  DEFEnergyRedU7Interp

        DEFEnergyRedD7Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD7(:, Qind, nn), Energyq(:));
        DEFEnergyRedT7Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT7(:, Qind, nn), Energyq(:));
        DEFEnergyRedU7Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU7(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend8
        clear DEFEnergyRedD8Interp  DEFEnergyRedT8Interp  DEFEnergyRedU8Interp

        DEFEnergyRedD8Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD8(:, Qind, nn), Energyq(:));
        DEFEnergyRedT8Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT8(:, Qind, nn), Energyq(:));
        DEFEnergyRedU8Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU8(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend9
        clear DEFEnergyRedD9Interp  DEFEnergyRedT9Interp  DEFEnergyRedU9Interp

        DEFEnergyRedD9Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD9(:, Qind, nn), Energyq(:));
        DEFEnergyRedT9Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT9(:, Qind, nn), Energyq(:));
        DEFEnergyRedU9Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU9(:, Qind, nn), Energyq(:));
    end
end
if setnum == 4
    for nn= 1:1:Nend10
        clear DEFEnergyRedD10Interp  DEFEnergyRedT10Interp  DEFEnergyRedU10Interp

        DEFEnergyRedD10Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD10(:, Qind, nn), Energyq(:));
        DEFEnergyRedT10Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT10(:, Qind, nn), Energyq(:));
        DEFEnergyRedU10Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU10(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend11
        clear DEFEnergyRedD11Interp  DEFEnergyRedT11Interp  DEFEnergyRedU11Interp

        DEFEnergyRedD11Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD11(:, Qind, nn), Energyq(:));
        DEFEnergyRedT11Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT11(:, Qind, nn), Energyq(:));
        DEFEnergyRedU11Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU11(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend12
        clear DEFEnergyRedD12Interp  DEFEnergyRedT12Interp  DEFEnergyRedU12Interp

        DEFEnergyRedD12Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD12(:, Qind, nn), Energyq(:));
        DEFEnergyRedT12Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT12(:, Qind, nn), Energyq(:));
        DEFEnergyRedU12Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU12(:, Qind, nn), Energyq(:));
    end
end
if setnum == 5
    for nn= 1:1:Nend13
        clear DEFEnergyRedD13Interp  DEFEnergyRedT13Interp  DEFEnergyRedU13Interp

        DEFEnergyRedD13Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD13(:, Qind, nn), Energyq(:));
        DEFEnergyRedT13Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT13(:, Qind, nn), Energyq(:));
        DEFEnergyRedU13Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU13(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend14
        clear DEFEnergyRedD14Interp  DEFEnergyRedT14Interp  DEFEnergyRedU14Interp

        DEFEnergyRedD14Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD14(:, Qind, nn), Energyq(:));
        DEFEnergyRedT14Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT14(:, Qind, nn), Energyq(:));
        DEFEnergyRedU14Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU14(:, Qind, nn), Energyq(:));
    end
    for nn= 1:1:Nend15
        clear DEFEnergyRedD15Interp  DEFEnergyRedT15Interp  DEFEnergyRedU15Interp

        DEFEnergyRedD15Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD15(:, Qind, nn), Energyq(:));
        DEFEnergyRedT15Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT15(:, Qind, nn), Energyq(:));
        DEFEnergyRedU15Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU15(:, Qind, nn), Energyq(:));
    end
end
if setnum == 6
    for nn= 1:1:Nend16
        if nn == Nbeg16 | nn == Nend16
            clear DEFEnergyRedD16Interp  DEFEnergyRedT16Interp  DEFEnergyRedU16Interp

            DEFEnergyRedD16Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD16(:, Qind, nn), Energyq(:));
            DEFEnergyRedT16Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT16(:, Qind, nn), Energyq(:));
            DEFEnergyRedU16Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU16(:, Qind, nn), Energyq(:));
        end
    end
    for nn= 1:1:Nend17
        if nn == Nbeg17 | nn == Nend17
            clear DEFEnergyRedD17Interp  DEFEnergyRedT17Interp  DEFEnergyRedU17Interp

            DEFEnergyRedD17Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD17(:, Qind, nn), Energyq(:));
            DEFEnergyRedT17Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT17(:, Qind, nn), Energyq(:));
            DEFEnergyRedU17Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU17(:, Qind, nn), Energyq(:));
        end
    end
    for nn= 1:1:Nend18
        if nn == Nbeg18 | nn == Nend18
            clear DEFEnergyRedD18Interp  DEFEnergyRedT18Interp  DEFEnergyRedU18Interp

            DEFEnergyRedD18Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD18(:, Qind, nn), Energyq(:));
            DEFEnergyRedT18Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT18(:, Qind, nn), Energyq(:));
            DEFEnergyRedU18Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU18(:, Qind, nn), Energyq(:));
        end
    end
end
subplot(2, 3, 1)
if setnum == 1
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD2Interp(:, Qind, Nbeg2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD3Interp(:, Qind, Nbeg3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 2
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD4Interp(:, Qind, Nbeg4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD5Interp(:, Qind, Nbeg5)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD6Interp(:, Qind, Nbeg6)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 3
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD7Interp(:, Qind, Nbeg7)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD8Interp(:, Qind, Nbeg8)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD9Interp(:, Qind, Nbeg9)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 4
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD10Interp(:, Qind, Nbeg10)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD11Interp(:, Qind, Nbeg11)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD12Interp(:, Qind, Nbeg12)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 5
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD13Interp(:, Qind, Nbeg13)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD14Interp(:, Qind, Nbeg14)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD15Interp(:, Qind, Nbeg15)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 6
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD16Interp(:, Qind, Nbeg16)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD17Interp(:, Qind, Nbeg17)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD18Interp(:, Qind, Nbeg18)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
% LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
% LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
% LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
% L{1}= horzcat('Transverse');
% L{2}= horzcat('Downward');
% L{3}= horzcat('Upward');
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
%     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
%     'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 2)
if setnum == 1
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT1(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT2(:, Qind, Nbeg2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT3(:, Qind, Nbeg3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 2
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT4(:, Qind, Nbeg4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT5(:, Qind, Nbeg5)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT6(:, Qind, Nbeg6)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 3
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT7(:, Qind, Nbeg7)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT8(:, Qind, Nbeg8)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT9(:, Qind, Nbeg9)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 4
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT10(:, Qind, Nbeg10)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT11(:, Qind, Nbeg11)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT12(:, Qind, Nbeg12)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 5
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT13(:, Qind, Nbeg13)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT14(:, Qind, Nbeg14)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT15(:, Qind, Nbeg15)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 6
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT16(:, Qind, Nbeg16)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT17(:, Qind, Nbeg17)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT18(:, Qind, Nbeg18)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
if setnum == 1
    L{1}= horzcat('Sim. C1');
    L{2}= horzcat('Sim. C2');
    L{3}= horzcat('Sim. C3');
end
if setnum == 2
    L{1}= horzcat('Sim. D1');
    L{2}= horzcat('Sim. D2');
    L{3}= horzcat('Sim. D3');
end
if setnum == 3
    L{1}= horzcat('Sim. E1');
    L{2}= horzcat('Sim. E2');
    L{3}= horzcat('Sim. E3');
end
if setnum == 4
    L{1}= horzcat('Sim. F1');
    L{2}= horzcat('Sim. F2');
    L{3}= horzcat('Sim. F3');
end
if setnum == 5
    L{1}= horzcat('Sim. G1');
    L{2}= horzcat('Sim. G2');
    L{3}= horzcat('Sim. G3');
end
if setnum == 6
    L{1}= horzcat('Sim. H1');
    L{2}= horzcat('Sim. H2');
    L{3}= horzcat('Sim. H3');
end
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthEast')
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
    'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 3)
if setnum == 1
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU1(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU2(:, Qind, Nbeg2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU3(:, Qind, Nbeg3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 2
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU4(:, Qind, Nbeg4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU5(:, Qind, Nbeg5)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU6(:, Qind, Nbeg6)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 3
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU7(:, Qind, Nbeg7)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU8(:, Qind, Nbeg8)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU9(:, Qind, Nbeg9)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 4
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU10(:, Qind, Nbeg10)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU11(:, Qind, Nbeg11)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU12(:, Qind, Nbeg12)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 5
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU13(:, Qind, Nbeg13)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU14(:, Qind, Nbeg14)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU15(:, Qind, Nbeg15)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 6
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU16(:, Qind, Nbeg16)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU17(:, Qind, Nbeg17)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU18(:, Qind, Nbeg18)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
% LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
% LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
% L{1}= horzcat('Transverse');
% L{2}= horzcat('Downward');
% L{3}= horzcat('Upward');
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
%     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
%     'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 4)
if setnum == 1
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD2Interp(:, Qind, Nend2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD3Interp(:, Qind, Nend3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 2
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD4Interp(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD5Interp(:, Qind, Nend5)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD6Interp(:, Qind, Nend6)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 3
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD7Interp(:, Qind, Nend7)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD8Interp(:, Qind, Nend8)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD9Interp(:, Qind, Nend9)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 4
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD10Interp(:, Qind, Nend10)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD11Interp(:, Qind, Nend11)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD12Interp(:, Qind, Nend12)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 5
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD13Interp(:, Qind, Nend13)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD14Interp(:, Qind, Nend14)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD15Interp(:, Qind, Nend15)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 6
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD16Interp(:, Qind, Nend16)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD17Interp(:, Qind, Nend17)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedD18Interp(:, Qind, Nend18)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
% LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
% LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
% LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
% L{1}= horzcat('Transverse');
% L{2}= horzcat('Downward');
% L{3}= horzcat('Upward');
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
%     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
%     'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 5)
if setnum == 1
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT2Interp(:, Qind, Nend2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT3Interp(:, Qind, Nend3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 2
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT4Interp(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT5Interp(:, Qind, Nend5)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT6Interp(:, Qind, Nend6)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 3
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT7Interp(:, Qind, Nend7)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT8Interp(:, Qind, Nend8)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT9Interp(:, Qind, Nend9)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 4
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT10Interp(:, Qind, Nend10)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT11Interp(:, Qind, Nend11)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT12Interp(:, Qind, Nend12)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 5
    plot((6.242518).*Energyq(:), (DEFEnergyRedT13Interp(:, Qind, Nend13)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT14Interp(:, Qind, Nend14)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT15Interp(:, Qind, Nend15)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 6
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT16Interp(:, Qind, Nend16)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT17Interp(:, Qind, Nend17)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedT18Interp(:, Qind, Nend18)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
if setnum == 1
    title(horzcat('$t= $', ...
        num2str(round(TimeT1(Nend1)/3600)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
end
if setnum == 2
    title(horzcat('$t= $', ...
        num2str(round(TimeT4(Nend4)/3600)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
end
if setnum == 3
    title(horzcat('$t= $', ...
        num2str(round(TimeT7(Nend7)/3600)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
end
if setnum == 4
    title(horzcat('$t= $', ...
        num2str(round(TimeT10(Nend10)/3600)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
end
if setnum == 5
    title(horzcat('$t= $', ...
        num2str(round(TimeT13(Nend13)/3600)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
end
if setnum == 6
    title(horzcat('$t= $', ...
        num2str(round(TimeT16(Nend16)/3600)), ' hr'), ...
        'interpreter', 'latex', 'FontSize', 25);
end
text(textx, texty, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

subplot(2, 3, 6)
if setnum == 1
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU2Interp(:, Qind, Nend2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU3Interp(:, Qind, Nend3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 2
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU4Interp(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU5Interp(:, Qind, Nend5)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU6Interp(:, Qind, Nend6)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 3
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU7Interp(:, Qind, Nend7)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU8Interp(:, Qind, Nend8)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU9Interp(:, Qind, Nend9)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 4
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU10Interp(:, Qind, Nend10)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU11Interp(:, Qind, Nend11)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU12Interp(:, Qind, Nend12)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 5
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU13Interp(:, Qind, Nend13)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU14Interp(:, Qind, Nend14)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU15Interp(:, Qind, Nend15)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
if setnum == 6
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU16Interp(:, Qind, Nend16)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU17Interp(:, Qind, Nend17)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), (DEFEnergyRedU18Interp(:, Qind, Nend18)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
end
% xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
% LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
% LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
% L{1}= horzcat('Transverse');
% L{2}= horzcat('Downward');
% L{3}= horzcat('Upward');
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
% title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
%     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
%     'interpreter', 'latex', 'FontSize', 25);
text(textx, texty, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('V-PC FINAL ALL REDUCED-2 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT V-PC V-W FINAL REDUCED-2 F VPAR, VPERP1, VPERP2

close all
clc

if VPCflag == 1
    pausevar= 1e-9;
    FontSize= 25;
    fsize= 25;

    fignum= 0;
    cbarpos= 'SouthOutside';
    fignum= fignum+ 1; % Assign figure number
    fig(fignum)= figure(fignum);
    set(fig(fignum), 'Position', [10 10 1400 700])

    ylim1= 0;
    ylim2= 55;
    xlim1= 0;
    xlim2= 60;
    textx= -2.5;
    texty= 3.6;
    textxE= -3;
    textyE= 1.8;

    textx0= 0;
    texty0= 1.5;

    clear LH L

    setnum= 2;
    nnflag= 1;
    % 1e0 <= alphaind & alphaind <= 9e0 % upwards 0-30degs
    % 17e0 < alphaind & alphaind < 34e0 % transverse 60-120degs
    % 42e0 <= alphaind & alphaind <= 50e0 % downwards 150-180degs

    clear Energyk Energyq
    % Set interpolation known points:
    Energyk(:)= EnergyGG(:, 1, 1);
    % Set interpolation query points:
    Energyq(:)= linspace(Energyk(1), Energyk(end), 1d2);

    Qind= 4;

    clear DEFEnergyRedD1 DEFEnergyRedT1 DEFEnergyRedU1
    clear DEFEnergyRedD3 DEFEnergyRedT3 DEFEnergyRedU3
    clear DEFEnergyRedD4 DEFEnergyRedT4 DEFEnergyRedU4
    clear DEFEnergyRedD6 DEFEnergyRedT6 DEFEnergyRedU6

    for Eind= 1:1:NEG
        if setnum == 1
            for nn= 1:1:Nend1
                if nn == Nbeg1 | nn == Nend1

                    DEFEnergyRedD1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 1:9, Qind, nn));
                    DEFEnergyRedT1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 17:34, Qind, nn));
                    DEFEnergyRedU1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 42:50, Qind, nn));
                end
            end
            for nn= 1:1:Nend3
                if nn == Nbeg3 | nn == Nend3

                    DEFEnergyRedD3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 1:9, Qind, nn));
                    DEFEnergyRedT3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 17:34, Qind, nn));
                    DEFEnergyRedU3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 42:50, Qind, nn));
                end
            end
        end
        if setnum == 2  
            for nn= 1:1:Nend4
                if nn == Nbeg4 | nn == Nend4

                    DEFEnergyRedD4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, 1:9, Qind, nn));
                    DEFEnergyRedT4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, 17:34, Qind, nn));
                    DEFEnergyRedU4(Eind, Qind, nn)= sum(DEFEnergyAlphaRed4(Eind, 42:50, Qind, nn));
                end
            end
            for nn= 1:1:Nend6
                if nn == Nbeg6 | nn == Nend6

                    DEFEnergyRedD6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, 1:9, Qind, nn));
                    DEFEnergyRedT6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, 17:34, Qind, nn));
                    DEFEnergyRedU6(Eind, Qind, nn)= sum(DEFEnergyAlphaRed6(Eind, 42:50, Qind, nn));
                end
            end
        end
    end

    clear DEFEnergyRedD1Interp  DEFEnergyRedT1Interp  DEFEnergyRedU1Interp 
    clear DEFEnergyRedD3Interp  DEFEnergyRedT3Interp  DEFEnergyRedU3Interp
    clear DEFEnergyRedD4Interp  DEFEnergyRedT4Interp  DEFEnergyRedU4Interp
    clear DEFEnergyRedD6Interp  DEFEnergyRedT6Interp  DEFEnergyRedU6Interp

    if setnum == 1
        for nn= 1:1:Nend1
            if nn == Nbeg1 | nn == Nend1
                DEFEnergyRedD1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD1(:, Qind, nn), Energyq(:));
                DEFEnergyRedT1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT1(:, Qind, nn), Energyq(:));
                DEFEnergyRedU1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU1(:, Qind, nn), Energyq(:));
            end
        end
        for nn= 1:1:Nend3
            if nn == Nbeg3 | nn == Nend3
                DEFEnergyRedD3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD3(:, Qind, nn), Energyq(:));
                DEFEnergyRedT3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT3(:, Qind, nn), Energyq(:));
                DEFEnergyRedU3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU3(:, Qind, nn), Energyq(:));
            end
        end
    end
    if setnum == 2  
        for nn= 1:1:Nend4
            if nn == Nbeg4 | nn == Nend4
                DEFEnergyRedD4Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD4(:, Qind, nn), Energyq(:));
                DEFEnergyRedT4Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT4(:, Qind, nn), Energyq(:));
                DEFEnergyRedU4Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU4(:, Qind, nn), Energyq(:));
            end
        end
        for nn= 1:1:Nend6
            if nn == Nbeg6 | nn == Nend6
                DEFEnergyRedD6Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD6(:, Qind, nn), Energyq(:));
                DEFEnergyRedT6Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT6(:, Qind, nn), Energyq(:));
                DEFEnergyRedU6Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU6(:, Qind, nn), Energyq(:));
            end
        end
    end

    subplot(2, 3, 1)
    if setnum == 1
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD3Interp(:, Qind, Nbeg3)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 2
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD4Interp(:, Qind, Nbeg4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD6Interp(:, Qind, Nbeg6)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 1
        text(35, 1.1e15, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 5.2e15, '(a)', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(35, 1.1e15, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 6.8e15, '(a)', 'interpreter', 'latex', 'FontSize', 25)
    end
    xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    if setnum == 1
        L{1}= horzcat('Sim. C1, $t= $', num2str(round(TimeT1(Nbeg1)/60, 2)), ' min');
        L{2}= horzcat('Sim. C2, $t= $', num2str(round(TimeT3(Nbeg3)/60, 2)), ' min');
    end
    if setnum == 2
        L{1}= horzcat('Sim. C3, $t= $', num2str(round(TimeT4(Nbeg4)/60, 2)), ' min');
        L{2}= horzcat('Sim. C4, $t= $', num2str(round(TimeT6(Nbeg6)/60, 2)), ' min');
    end
    legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthEast')
    % title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    %     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    %     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
    %     'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 2)
    if setnum == 1
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT3Interp(:, Qind, Nbeg3)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 2
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT4Interp(:, Qind, Nbeg4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT6Interp(:, Qind, Nbeg6)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 1
        text(-10, 4.55e13, '(b)', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(-10, 3.5e13, '(b)', 'interpreter', 'latex', 'FontSize', 25)
    end
    xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    if setnum == 1
        text(10, 3.5e13, horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
            num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
            'interpreter', 'latex', 'FontSize', 25);
        text(35, 1e13, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(10, 2.5e13, horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
            num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
            'interpreter', 'latex', 'FontSize', 25);
        text(35, 0.5e13, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
    end
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 3)
    if setnum == 1
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU3Interp(:, Qind, Nbeg3)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 2
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU4Interp(:, Qind, Nbeg4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU6Interp(:, Qind, Nbeg6)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 1
        text(35, 2e14, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 9e14, '(c)', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(35, 0.5e14, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 3.5e14, '(c)', 'interpreter', 'latex', 'FontSize', 25)
    end
    xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    % title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    %     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    %     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
    %     'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 4)
    if setnum == 1
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD3Interp(:, Qind, Nend3)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 2
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD4Interp(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD6Interp(:, Qind, Nend6)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 1
        text(35, 4.6e13, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 16.8e13, '(d)', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(35, 0.4e14, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 2.3e14, '(d)', 'interpreter', 'latex', 'FontSize', 25)
    end
    xlim([xlim1 xlim2])
    LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    if setnum == 1
        L{1}= horzcat('Sim. C1, $t= $', num2str(round(TimeT1(Nend1)/3600, 0)), ' hr');
        L{2}= horzcat('Sim. C2, $t= $', num2str(round(TimeT3(Nend3)/3600, 0)), ' hr');
    end
    if setnum == 2
        L{1}= horzcat('Sim. C3, $t= $', num2str(round(TimeT4(Nend4)/3600, 0)), ' hr');
        L{2}= horzcat('Sim. C4, $t= $', num2str(round(TimeT6(Nend6)/3600, 0)), ' hr');
    end
    legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthEast')
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 5)
    if setnum == 1
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT3Interp(:, Qind, Nend3)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 2
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT4Interp(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT6Interp(:, Qind, Nend6)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 1
        text(35, 1.1e13, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 4.6e13, '(e)', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(35, 0.7e13, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 3.4e13, '(e)', 'interpreter', 'latex', 'FontSize', 25)
    end
    xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 6)
    if setnum == 1
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU3Interp(:, Qind, Nend3)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 2
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU4Interp(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
        hold on
        plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU6Interp(:, Qind, Nend6)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    end
    if setnum == 1
        text(35, 0.6e14, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 2.5e14, '(f)', 'interpreter', 'latex', 'FontSize', 25)
    end
    if setnum == 2
        text(35, 1e14, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
        text(-10, 4.5e14, '(f)', 'interpreter', 'latex', 'FontSize', 25)
    end
    xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    % LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    % LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    % LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
    % L{1}= horzcat('Transverse');
    % L{2}= horzcat('Downward');
    % L{3}= horzcat('Upward');
    % legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
    % title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    %     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    %     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
    %     'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off
end

if VWflag == 1
    pausevar= 1e-9;
    FontSize= 25;
    fsize= 25;

    fignum= 0;
    cbarpos= 'SouthOutside';
    fignum= fignum+ 1; % Assign figure number
    fig(fignum)= figure(fignum);
    set(fig(fignum), 'Position', [10 10 1400 700])

    ylim1= 0;
    ylim2= 55;
    xlim1= 0;
    xlim2= 60;
    textx= -2.5;
    texty= 3.6;
    textxE= -3;
    textyE= 1.8;

    textx0= 0;
    texty0= 1.5;

    clear LH L

    setnum= 1;
    nnflag= 1;
    % 1e0 <= alphaind & alphaind <= 9e0 % upwards 0-30degs
    % 17e0 < alphaind & alphaind < 34e0 % transverse 60-120degs
    % 42e0 <= alphaind & alphaind <= 50e0 % downwards 150-180degs

    clear Energyk Energyq
    % Set interpolation known points:
    Energyk(:)= EnergyGG(:, 1, 1);
    % Set interpolation query points:
    Energyq(:)= linspace(Energyk(1), Energyk(end), 1d2);

    Qind= 2;

    clear DEFEnergyRedD1 DEFEnergyRedT1 DEFEnergyRedU1
    clear DEFEnergyRedD2 DEFEnergyRedT2 DEFEnergyRedU2
    clear DEFEnergyRedD3 DEFEnergyRedT3 DEFEnergyRedU3

    for Eind= 1:1:NEG
        for nn= 1:1:Nend1
            if nn == Nbeg1 | nn == Nend1

                DEFEnergyRedD1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 1:9, Qind, nn));
                DEFEnergyRedT1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 17:34, Qind, nn));
                DEFEnergyRedU1(Eind, Qind, nn)= sum(DEFEnergyAlphaRed1(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend2
            if nn == Nbeg2 | nn == Nend2

                DEFEnergyRedD2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, 1:9, Qind, nn));
                DEFEnergyRedT2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, 17:34, Qind, nn));
                DEFEnergyRedU2(Eind, Qind, nn)= sum(DEFEnergyAlphaRed2(Eind, 42:50, Qind, nn));
            end
        end
        for nn= 1:1:Nend3
            if nn == Nbeg3 | nn == Nend3

                DEFEnergyRedD3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 1:9, Qind, nn));
                DEFEnergyRedT3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 17:34, Qind, nn));
                DEFEnergyRedU3(Eind, Qind, nn)= sum(DEFEnergyAlphaRed3(Eind, 42:50, Qind, nn));
            end
        end
    end

    clear DEFEnergyRedD1Interp  DEFEnergyRedT1Interp  DEFEnergyRedU1Interp 
    clear DEFEnergyRedD2Interp  DEFEnergyRedT2Interp  DEFEnergyRedU2Interp
    clear DEFEnergyRedD3Interp  DEFEnergyRedT3Interp  DEFEnergyRedU3Interp

    for nn= 1:1:Nend1
        if nn == Nbeg1 | nn == Nend1
            DEFEnergyRedD1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD1(:, Qind, nn), Energyq(:));
            DEFEnergyRedT1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT1(:, Qind, nn), Energyq(:));
            DEFEnergyRedU1Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU1(:, Qind, nn), Energyq(:));
        end
    end
    for nn= 1:1:Nend2
        if nn == Nbeg2 | nn == Nend2
            DEFEnergyRedD2Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD2(:, Qind, nn), Energyq(:));
            DEFEnergyRedT2Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT2(:, Qind, nn), Energyq(:));
            DEFEnergyRedU2Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU2(:, Qind, nn), Energyq(:));
        end
    end
    for nn= 1:1:Nend3
        if nn == Nbeg3 | nn == Nend3
            DEFEnergyRedD3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedD3(:, Qind, nn), Energyq(:));
            DEFEnergyRedT3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedT3(:, Qind, nn), Energyq(:));
            DEFEnergyRedU3Interp(:, Qind, nn)= interpn(Energyk(:), DEFEnergyRedU3(:, Qind, nn), Energyq(:));
        end
    end

    subplot(2, 3, 1)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD2Interp(:, Qind, Nbeg2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD3Interp(:, Qind, Nbeg3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
    text(50, 0.5e12, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
    text(-10, 5.5e12, '(a)', 'interpreter', 'latex', 'FontSize', 25)
%     xlim([xlim1 xlim2])
    ylim([0 5e12])
    % grid on
    LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
    L{1}= horzcat('$h= 1.3$ s, $t= $', num2str(round(TimeT1(Nbeg1)/60, 2)), ' min');
    L{2}= horzcat('$h= 2.5$ s, $t= $', num2str(round(TimeT2(Nbeg2)/60, 2)), ' min');
    L{3}= horzcat('$h= 3.1$ s, $t= $', num2str(round(TimeT3(Nbeg3)/60, 2)), ' min');
    legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthEast')
    % title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    %     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    %     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
    %     'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT2Interp(:, Qind, Nbeg2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT3Interp(:, Qind, Nbeg3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
    text(-10, 4.4e12, '(b)', 'interpreter', 'latex', 'FontSize', 25)
%     xlim([xlim1 xlim2])
    ylim([0 4d12])
    % grid on
    text(7, 3.5e12, horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
        num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
        'interpreter', 'latex', 'FontSize', 25);
    text(50, 2.5e12, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 3)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU1Interp(:, Qind, Nbeg1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU2Interp(:, Qind, Nbeg2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU3Interp(:, Qind, Nbeg3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
    text(50, -0.5, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
    text(-10, 1.2, '(c)', 'interpreter', 'latex', 'FontSize', 25)
%     xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    % title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    %     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    %     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
    %     'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 4)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD2Interp(:, Qind, Nend2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedD3Interp(:, Qind, Nend3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
    text(50, 2.5e9, 'Downwards', 'interpreter', 'latex', 'FontSize', 25)
    text(-10, 11e9, '(d)', 'interpreter', 'latex', 'FontSize', 25)
    LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
    L{1}= horzcat('$h= 1.3$ s, $t= $', num2str(round(TimeT1(Nend1)/3600, 0)), ' hr');
    L{2}= horzcat('$h= 2.5$ s, $t= $', num2str(round(TimeT2(Nend2)/3600, 0)), ' hr');
    L{3}= horzcat('$h= 3.1$ s, $t= $', num2str(round(TimeT3(Nend3)/3600, 0)), ' hr');
    legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthEast')
%     xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    % LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    % LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    % LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
    % L{1}= horzcat('Transverse');
    % L{2}= horzcat('Downward');
    % L{3}= horzcat('Upward');
    % legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 5)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT2Interp(:, Qind, Nend2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedT3Interp(:, Qind, Nend3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
    text(50, 2e10, 'Transverse', 'interpreter', 'latex', 'FontSize', 25)
    text(-10, 3.4e10, '(e)', 'interpreter', 'latex', 'FontSize', 25)
%     xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
%     title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
%         num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
%         'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off

    subplot(2, 3, 6)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU1Interp(:, Qind, Nend1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
    hold on
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU2Interp(:, Qind, Nend2)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
    plot((6.242e18).*Energyq(:), smooth(DEFEnergyRedU3Interp(:, Qind, Nend3)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
    text(50, -0.5, 'Upwards', 'interpreter', 'latex', 'FontSize', 25)
    text(-10, 1.2, '(f)', 'interpreter', 'latex', 'FontSize', 25)
%     xlim([xlim1 xlim2])
    % ylim([ylim1 ylim2])
    % grid on
    % LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
    % LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
    % LH(3)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
    % L{1}= horzcat('Transverse');
    % L{2}= horzcat('Downward');
    % L{3}= horzcat('Upward');
    % legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'Orientation', 'horizontal')
    % title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    %     num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    %     num2str(round(TimeT1(nn1)/60e0)), ' min'), ...
    %     'interpreter', 'latex', 'FontSize', 25);
    ylabel('$\phi_E$ [eV/(eV m$^{2}$ s sr)]', 'interpreter', 'latex', 'FontSize', 25);
    xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
    set(gca, 'FontSize', fsize);
    set(gcf, 'color','white');
    hold off
end

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('V-PC FINAL REDUCED-2 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT W FINAL REDUCED-2 F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 900])

Qind= 12;

ylim1= 0;
ylim2= 1.75;
xlim1= 0;
xlim2= 10;
textx= -2.5;
texty= 1.8;
textxE= -3;
textyE= 1.8;

textx0= 0;
texty0= 1.5;
 
clear LH L

if max(FEEnergyRed4(:, Qind, Nend4)) > max(FEEnergyRed4(:, Qind, Nbeg4))
    NormfacS1(:)= max(FEEnergyRed4(:, Qind, Nend4));
end
if max(FEEnergyRed4(:, Qind, Nbeg4)) > max(FEEnergyRed4(:, Qind, Nend4))
    NormfacS1(:)= max(FEEnergyRed4(:, Qind, Nbeg4));
end

subplot(2, 3, 1)
plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, Nbeg4)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (FEEnergyRed4(:, Qind, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
text(textx0, texty0, horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed4(:, Qind, Nend4)) > max(DNFEnergyRed4(:, Qind, Nbeg4))
    NormfacS2(:)= max(DNFEnergyRed4(:, Qind, Nend4));
end
if max(DNFEnergyRed4(:, Qind, Nbeg4)) > max(DNFEnergyRed4(:, Qind, Nend4))
    NormfacS2(:)= max(DNFEnergyRed4(:, Qind, Nbeg4));
end

subplot(2, 3, 2)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, Nend4)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, Nbeg4)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed4(:, Qind, 1)/max(DNFEnergyRed4(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed4(:, Qind, Nend4)) > max(DEFEnergyRed4(:, Qind, Nbeg4))
    NormfacS3(:)= max(DEFEnergyRed4(:, Qind, Nend4));
end
if max(DEFEnergyRed4(:, Qind, Nbeg4)) > max(DEFEnergyRed4(:, Qind, Nend4))
    NormfacS3(:)= max(DEFEnergyRed4(:, Qind, Nbeg4));
end

subplot(2, 3, 3)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, Nbeg4)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed4(:, Qind, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

clear LH L

if max(FEEnergyRed24(:, Qind, Nend4)) > max(FEEnergyRed24(:, Qind, Nbeg4))
    NormfacS4(:)= max(FEEnergyRed24(:, Qind, Nend4));
end
if max(FEEnergyRed24(:, Qind, Nbeg4)) > max(FEEnergyRed24(:, Qind, Nend4))
    NormfacS4(:)= max(FEEnergyRed24(:, Qind, Nbeg4));
end

subplot(2, 3, 4)
plot((6.242e18).*EnergyG(:), (FEEnergyRed24(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed24(:, Qind, Nbeg4)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (FEEnergyRed24(:, Qind, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
text(textx0, texty0, horzcat('$E_{\parallel 0}= 1 \times 10^{-7}$', ' V/m'), 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed24(:, Qind, Nend4)) > max(DNFEnergyRed24(:, Qind, Nbeg4))
    NormfacS5(:)= max(DNFEnergyRed24(:, Qind, Nend4));
end
if max(DNFEnergyRed24(:, Qind, Nbeg4)) > max(DNFEnergyRed24(:, Qind, Nend4))
    NormfacS5(:)= max(DNFEnergyRed24(:, Qind, Nbeg4));
end

subplot(2, 3, 5)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed24(:, Qind, Nend4)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed24(:, Qind, Nbeg4)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed24(:, Qind, 1)/max(DNFEnergyRed24(:, Qind, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed24(:, Qind, Nend4)) > max(DEFEnergyRed24(:, Qind, Nbeg4))
    NormfacS6(:)= max(DEFEnergyRed24(:, Qind, Nend4));
end
if max(DEFEnergyRed24(:, Qind, Nbeg4)) > max(DEFEnergyRed24(:, Qind, Nend4))
    NormfacS6(:)= max(DEFEnergyRed24(:, Qind, Nbeg4));
end

subplot(2, 3, 6)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed24(:, Qind, Nend4)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed24(:, Qind, Nbeg4)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed24(:, Qind, 1)), 'g', 'MarkerSize', 20, 'LineWidth', 2)
xlim([xlim1 xlim2])
% ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('V FINAL REDUCED-2 F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT B FINAL REDUCED F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 14;

ylim1= 0;
ylim2= 1.75;
xlim1= -10;
xlim2= 10;
textx= -35;
texty= 1.8;
textxE= -3;
textyE= 1.8;

if max(FVperp1Red1(:, Qind, Nend1)) > max(FVperp1Red3(:, Qind, Nend3)) 
    NormfacS1(:)= max(FVperp1Red1(:, Qind, Nend1));
else
    NormfacS1(:)= max(FVperp1Red3(:, Qind, Nend3));
end

clear LH L
subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red1(:, Qind, Nend1)/max(FVperp1Red1(:, Qind, Nend1))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red3(:, Qind, Nend3)/max(FVperp1Red3(:, Qind, Nend3))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\lambda_\perp= \infty$');
L{2}= horzcat('$\lambda_\perp= 10$ m');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest', 'orientation', 'horizontal')
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red1(:, Qind, Nend1)) > max(FVperp2Red3(:, Qind, Nend3))
    NormfacS2(:)= max(FVperp2Red1(:, Qind, Nend1));
else
    NormfacS2(:)= max(FVperp2Red3(:, Qind, Nend3));
end

subplot(2, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red1(:, Qind, Nend1)/max(FVperp2Red1(:, Qind, Nend1))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red3(:, Qind, Nend3)/max(FVperp2Red3(:, Qind, Nend3))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
    'interpreter', 'latex', 'FontSize', 25);
% xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed1(:, Qind, Nend1)) > max(FVparRed3(:, Qind, Nend3))
    NormfacS3(:)= max(FVparRed1(:, Qind, Nend1));
else
    NormfacS3(:)= max(FVparRed3(:, Qind, Nend3));
end

subplot(2, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed1(:, Qind, Nend1)/max(FVparRed1(:, Qind, Nend1))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed3(:, Qind, Nend3)/max(FVparRed3(:, Qind, Nend3))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
% xlim([xlim1 xlim2])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FEEnergyRed1(:, Qind, Nend1)) > max(FEEnergyRed3(:, Qind, Nbeg3))
    NormfacS4(:)= max(FEEnergyRed1(:, Qind, Nend1));
else
    NormfacS4(:)= max(FEEnergyRed3(:, Qind, Nend3));
end

subplot(2, 3, 4)
plot((6.242e18).*EnergyG(:), (FEEnergyRed1(:, Qind, Nend1)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (FEEnergyRed3(:, Qind, Nend3)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 10])
ylim([ylim1 ylim2])
grid on
text(textxE, textyE, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DNFEnergyRed1(:, Qind, Nend1)) > max(DNFEnergyRed3(:, Qind, Nbeg3))
    NormfacS5(:)= max(DNFEnergyRed1(:, Qind, Nend1));
else
    NormfacS5(:)= max(DNFEnergyRed3(:, Qind, Nend3));
end

subplot(2, 3, 5)
plot((6.242e18).*EnergyG(:), (DNFEnergyRed1(:, Qind, Nend1)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DNFEnergyRed3(:, Qind, Nend3)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 10])
ylim([ylim1 ylim2])
grid on
text(textxE, textyE, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_N(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(DEFEnergyRed1(:, Qind, Nend1)) > max(DEFEnergyRed3(:, Qind, Nbeg3))
    NormfacS6(:)= max(DEFEnergyRed1(:, Qind, Nend1));
else
    NormfacS6(:)= max(DEFEnergyRed3(:, Qind, Nend3));
end

subplot(2, 3, 6)
plot((6.242e18).*EnergyG(:), (DEFEnergyRed1(:, Qind, Nend1)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot((6.242e18).*EnergyG(:), (DEFEnergyRed3(:, Qind, Nend3)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([0 10])
ylim([ylim1 ylim2])
grid on
text(textxE, textyE, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert \phi_E(E) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$E$ [eV]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('B FINAL REDUCED F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT NC FINAL UPFLOW REDUCED F VPAR, VPERP1, VPERP2

close all
clc

pausevar= 1e-9;
FontSize= 25;
fsize= 25;

fignum= 0;
cbarpos= 'SouthOutside';
fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 1400 700])

Qind= 15;

ylim1= 0;
ylim2= 1.5;
textx= -7;
texty= 1.8;

clear LH L
clear NormfacS1 NormfacS2 NormfacS3 NormfacS4 NormfacS5 NormfacS6

if max(FVperp1Red5(:, Qind, Nbeg5)) > max(FVperp1Red6(:, Qind, Nbeg6))
    NormfacS1(:)= max(FVperp1Red5(:, Qind, Nbeg5));
end
if max(FVperp1Red6(:, Qind, Nbeg6)) > max(FVperp1Red5(:, Qind, Nbeg5))
    NormfacS1(:)= max(FVperp1Red6(:, Qind, Nbeg6));
end

subplot(2, 3, 1)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red5(:, Qind, Nbeg5)/NormfacS1(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red6(:, Qind, Nbeg6)/NormfacS1(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(a)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('$\delta T_e= 0.26$ K/s');
L{2}= horzcat('$\delta T_e= 1.28$ K/s');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest')
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red5(:, Qind, Nbeg5)) > max(FVperp2Red6(:, Qind, Nbeg6))
    NormfacS2(:)= max(FVperp2Red5(:, Qind, Nbeg5));
end
if max(FVperp2Red6(:, Qind, Nbeg6)) > max(FVperp2Red5(:, Qind, Nbeg5))
    NormfacS2(:)= max(FVperp2Red6(:, Qind, Nbeg6));
end

subplot(2, 3, 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red5(:, Qind, Nbeg5)/NormfacS2(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red6(:, Qind, Nbeg6)/NormfacS2(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km, ', '$t= $', ...
    num2str((round(TimeT5(Nbeg5)/3600e0, 2))*60e0), ' min'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(b)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed5(:, Qind, Nbeg5)) > max(FVparRed6(:, Qind, Nbeg6))
    NormfacS3(:)= max(FVparRed5(:, Qind, Nbeg5));
end
if max(FVparRed6(:, Qind, Nbeg6)) > max(FVparRed5(:, Qind, Nbeg5))
    NormfacS3(:)= max(FVparRed6(:, Qind, Nbeg6));
end

subplot(2, 3, 3)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed5(:, Qind, Nbeg5)/NormfacS3(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed6(:, Qind, Nbeg6)/NormfacS3(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(c)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

ylim1= ylim1;
ylim2= 2.2e0;
textx= textx;
texty= 2.5e0;

if max(FVperp1Red5(:, Qind, Nend5)) > max(FVperp1Red6(:, Qind, Nend6)) & ...
    max(FVperp1Red5(:, Qind, Nend5)) > max(FVperp1Red6(:, Qind, 1)) & ...
    max(FVperp1Red5(:, Qind, Nend5)) > max(FVperp1Red5(:, Qind, 1))
    NormfacS4(:)= max(FVperp1Red5(:, Qind, Nend5));
end
if max(FVperp1Red5(:, Qind, 1)) > max(FVperp1Red6(:, Qind, Nend6)) & ...
    max(FVperp1Red5(:, Qind, 1)) > max(FVperp1Red6(:, Qind, 1)) & ...
    max(FVperp1Red5(:, Qind, 1)) > max(FVperp1Red5(:, Qind, Nend5))
    NormfacS4(:)= max(FVperp1Red5(:, Qind, 1));
end
if max(FVperp1Red6(:, Qind, Nend6)) > max(FVperp1Red5(:, Qind, Nend5)) & ...
    max(FVperp1Red6(:, Qind, Nend6)) > max(FVperp1Red5(:, Qind, 1)) & ...
    max(FVperp1Red6(:, Qind, Nend6)) > max(FVperp1Red6(:, Qind, 1))
    NormfacS4(:)= max(FVperp1Red6(:, Qind, Nend6));
end
if max(FVperp1Red6(:, Qind, 1)) > max(FVperp1Red5(:, Qind, Nend5)) & ...
    max(FVperp1Red6(:, Qind, 1)) > max(FVperp1Red5(:, Qind, 1)) & ...
    max(FVperp1Red6(:, Qind, 1)) > max(FVperp1Red6(:, Qind, Nend6))
    NormfacS4(:)= max(FVperp1Red6(:, Qind, 1));
end

subplot(2, 3, 4)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red5(:, Qind, Nend5)/NormfacS4(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red5(:, Qind, 1)/NormfacS4(:, 1, 1)), 'k.', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red6(:, Qind, Nend6)/NormfacS4(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp1GCqq(:)*1e-3, smooth(FVperp1Red6(:, Qind, 1)/NormfacS4(:, 1, 1)), 'b.', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'k.', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'b.', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat(num2str((round(TimeT5(Nend5)/3600e0, 0))*1e0), ' hr, $\delta T_e= 0.26$ K/s');
L{2}= horzcat(num2str((round(TimeT5(1)/3600e0, 0))*1e0), ' hr, $\delta T_e= 0.26$ K/s');
L{3}= horzcat(num2str((round(TimeT6(Nend6)/3600e0, 0))*1e0), ' hr, $\delta T_e= 1.28$ K/s');
L{4}= horzcat(num2str((round(TimeT6(1)/3600e0, 0))*1e0), ' hr, $\delta T_e= 1.28$ K/s');
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', 'NorthWest')
text(textx, texty, '(d)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 1}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 1}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVperp2Red5(:, Qind, Nend5)) > max(FVperp2Red6(:, Qind, Nend6)) & ...
    max(FVperp2Red5(:, Qind, Nend5)) > max(FVperp2Red6(:, Qind, 1)) & ...
    max(FVperp2Red5(:, Qind, Nend5)) > max(FVperp2Red5(:, Qind, 1))
    NormfacS5(:)= max(FVperp2Red5(:, Qind, Nend5));
end
if max(FVperp2Red5(:, Qind, 1)) > max(FVperp2Red6(:, Qind, Nend6)) & ...
    max(FVperp2Red5(:, Qind, 1)) > max(FVperp2Red6(:, Qind, 1)) & ...
    max(FVperp2Red5(:, Qind, 1)) > max(FVperp2Red5(:, Qind, Nend5))
    NormfacS5(:)= max(FVperp2Red5(:, Qind, 1));
end
if max(FVperp2Red6(:, Qind, Nend6)) > max(FVperp2Red5(:, Qind, Nend5)) & ...
    max(FVperp2Red6(:, Qind, Nend6)) > max(FVperp2Red5(:, Qind, 1)) & ...
    max(FVperp2Red6(:, Qind, Nend6)) > max(FVperp2Red6(:, Qind, 1))
    NormfacS5(:)= max(FVperp2Red6(:, Qind, Nend6));
end
if max(FVperp2Red6(:, Qind, 1)) > max(FVperp2Red5(:, Qind, Nend5)) & ...
    max(FVperp2Red6(:, Qind, 1)) > max(FVperp2Red5(:, Qind, 1)) & ...
    max(FVperp2Red6(:, Qind, 1)) > max(FVperp2Red6(:, Qind, Nend6))
    NormfacS5(:)= max(FVperp2Red6(:, Qind, 1));
end

subplot(2, 3, 5)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red5(:, Qind, Nend5)/NormfacS5(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red5(:, Qind, 1)/NormfacS5(:, 1, 1)), 'k.-', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red6(:, Qind, Nend6)/NormfacS5(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(Vperp2GCqq(:)*1e-3, smooth(FVperp2Red6(:, Qind, 1)/NormfacS5(:, 1, 1)), 'b.-', 'MarkerSize', 20, 'LineWidth', 2)
title(horzcat(num2str(round((Rank(r).Specie(s).FluxTube(f).rGL(Qind)- RE)*1e-3)), ' km', '$\le r \le$', ...
    num2str(round((Rank(r).Specie(s).FluxTube(f).rGH(Qind)- RE)*1e-3)), ' km'), ...
    'interpreter', 'latex', 'FontSize', 25);
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(e)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\perp 2}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_{\perp 2}$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

if max(FVparRed5(:, Qind, Nend5)) > max(FVparRed6(:, Qind, Nend6))
    NormfacS6(:)= max(FVparRed5(:, Qind, Nend5));
end
if max(FVparRed6(:, Qind, Nend6)) > max(FVparRed5(:, Qind, Nend5))
    NormfacS6(:)= max(FVparRed6(:, Qind, Nend6));
end

subplot(2, 3, 6)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed5(:, Qind, Nend5)/NormfacS6(:, 1, 1)), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(-VparGCqq(:)*1e-3, smooth(FVparRed5(:, Qind, 1)/NormfacS6(:, 1, 1)), 'k.', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed6(:, Qind, Nend6)/NormfacS6(:, 1, 1)), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(-VparGCqq(:)*1e-3, smooth(FVparRed6(:, Qind, 1)/NormfacS6(:, 1, 1)), 'b.', 'MarkerSize', 20, 'LineWidth', 2)
xlim([-5 5])
ylim([ylim1 ylim2])
grid on
text(textx, texty, '(f)', 'interpreter', 'latex', 'FontSize', 25)
ylabel('$\vert f(v_{\parallel}) \vert$', 'interpreter', 'latex', 'FontSize', 25);
xlabel('$v_\parallel$ [km/s]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

% dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

% saveas(figure(fignum), [horzcat(dataexpdir, 'NCreddistribs.png')]);

toc

disp('NC FINAL UPFLOW REDUCED F VPAR, VPERP1, VPERP2, PLOTS COMPLETE')

%% PLOT W PARTICLE NUMBERS

clc
close all

clear L LH
cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize yfigsize])

plot(ndAB1(:, 1)/60, Ns1(1:size(ndAB1(:, 1))), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(ndAB2(:, 1)/60, Ns2(1:size(ndAB2(:, 1))), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(ndAB3(:, 1)/60, Ns3(1:size(ndAB3(:, 1))), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(ndAB4(:, 1)/60, Ns4(1:size(ndAB4(:, 1))), 'g', 'MarkerSize', 20, 'LineWidth', 2)
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Static Ambipolar Field');
L{2}= horzcat('Active Ambipolar Field');
L{3}= horzcat('Active Ambipolar Field');
L{4}= horzcat('Active Ambipolar Field');
% ylim([0.8e7 1.4e7]);
legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
xlabel('$t$ [min]', 'interpreter', 'latex', 'FontSize', 25);
ylabel(horzcat('$N_s$'), 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

saveas(figure(fignum), [horzcat(dataexpdir, 'WNs.png')]);

%% PLOT EPAR POTENTIALS

clc
close all

clear L LH
cbarloc= 'SouthOutside'; logAEflag= 0; logTflag= 0; logWflag= 0; fignum= 1; figlabelflag= 0; FIGSAVEflag= 1;
pcolorflag= 1; cmapset= 'jet'; xfigsize= 750; yfigsize= 350; fsize= 20; linewidth= 2;
dxfigsize= 550; dyfigsize= 550; legloc= 'NorthEast';
textx= -15; texty= 1200;

fignum= fignum+ 1; % Assign figure number
fig(fignum)= figure(fignum);
set(fig(fignum), 'Position', [10 10 xfigsize yfigsize])

plot(EPMag1(:), rrAB1(1, :), 'k', 'MarkerSize', 20, 'LineWidth', 2)
hold on
plot(EPMag2(:), rrAB2(1, :), 'r', 'MarkerSize', 20, 'LineWidth', 2)
plot(EPMag3(:), rrAB3(1, :), 'b', 'MarkerSize', 20, 'LineWidth', 2)
plot(EPMag4(:), rrAB4(1, :), 'g', 'MarkerSize', 20, 'LineWidth', 2)
grid on
LH(1)= plot(nan, nan, 'k', 'MarkerSize', 10, 'LineWidth', 2);
LH(2)= plot(nan, nan, 'r', 'MarkerSize', 10, 'LineWidth', 2);
LH(3)= plot(nan, nan, 'b', 'MarkerSize', 10, 'LineWidth', 2);
LH(4)= plot(nan, nan, 'g', 'MarkerSize', 10, 'LineWidth', 2);
L{1}= horzcat('Static Ambipolar Field');
L{2}= horzcat('Active Ambipolar Field');
L{3}= horzcat('Active Ambipolar Field');
L{4}= horzcat('Active Ambipolar Field');
% ylim([0.8e7 1.4e7]);
% legend(LH, L, 'interpreter', 'latex', 'FontSize', 20, 'location', legloc)
xlabel('$E_\parallel$ [V/m]', 'interpreter', 'latex', 'FontSize', 25);
ylabel('$r$ [km]', 'interpreter', 'latex', 'FontSize', 25);
set(gca, 'FontSize', fsize);
set(gcf, 'color','white');
hold off

dataexpdir= horzcat('/Users/robertalbarran/Desktop/FULLDESKTOP/DISSFULL/FinalDissDoc/Figures/');

saveas(figure(fignum), [horzcat(dataexpdir, 'WNs.png')]);
